{
  "version": 3,
  "sources": ["../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/is-promise/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/lib/consts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/lib/builder.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/lib/schedule.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/lib/stream.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/function/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@netlify/functions/dist/main.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/is.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/aggregate-errors.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/worldwide.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/browser.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/logger.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/dsn.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/error.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/string.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/object.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/node-stack-trace.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/stacktrace.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/supports.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/vendor/supportsHistory.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/instrument.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/memo.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/misc.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/env.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/node.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/normalize.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/path.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/syncpromise.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/promisebuffer.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/url.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/requestdata.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/severity.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/time.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/baggage.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/envelope.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/clientreport.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/ratelimit.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/userIntegrations.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/cache.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/vendor/escapeStringForRegex.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/utils/cjs/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/constants.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/session.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/scope.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/hub.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/utils/hasTracingEnabled.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/utils.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/errors.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/span.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/dynamicSamplingContext.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/transaction.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/idletransaction.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/hubextensions.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/spanstatus.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/trace.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/exports.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/sessionflusher.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/api.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/envelope.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integration.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/utils/prepareEvent.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/baseclient.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/sdk.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/transports/base.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/transports/offline.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/transports/multiplexed.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/version.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/functiontostring.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/inboundfilters.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/core/cjs/integrations/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/checkin.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/core/cjs/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_nullishCoalesce.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_asyncNullishCoalesce.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_asyncOptionalChain.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_asyncOptionalChainDelete.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_createNamedExportFrom.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_createStarExport.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_interopDefault.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_interopNamespace.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_interopNamespaceDefaultOnly.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_interopRequireDefault.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_interopRequireWildcard.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_optionalChain.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/buildPolyfills/_optionalChainDelete.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/utils/cjs/buildPolyfills/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/utils/node-utils.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/express.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/postgres.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/mysql.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/mongo.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/prisma.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/graphql.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/apollo.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/node/integrations/lazy.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/types.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/backgroundtab.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/bindReporter.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/generateUniqueID.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/getNavigationEntry.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/getActivationStart.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/initMetric.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/observe.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/onHidden.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/getCLS.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/lib/getVisibilityWatcher.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/getFID.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/web-vitals/getLCP.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/metrics/utils.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/metrics/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/request.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/router.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/browser/browsertracing.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/src/extensions.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry-internal/tracing/cjs/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/tracing/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/eventbuilder.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/client.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/ms/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/debug/src/common.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/debug/src/browser.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/has-flag/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/supports-color/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/debug/src/node.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/debug/src/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/agent-base/src/promisify.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/agent-base/src/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/https-proxy-agent/src/parse-proxy-response.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/https-proxy-agent/src/agent.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/https-proxy-agent/src/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/transports/http.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/nodeVersion.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/async/domain.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/async/hooks.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/async/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/console.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/lru_map/lru.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/utils/http.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/http.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/utils/errorhandling.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/onuncaughtexception.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/onunhandledrejection.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/contextlines.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/linkederrors.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/modules.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/context.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/node/node_modules/cookie/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/requestdata.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/requestdata.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/localvariables.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/integrations/undici/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/module.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/sdk.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/utils.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/requestDataDeprecated.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/handlers.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/node/cjs/integrations/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/node/cjs/tracing/integrations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/@sentry/src/index.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/has-symbols/shams.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/has-symbols/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/has-proto/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/function-bind/implementation.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/function-bind/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/has/src/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/get-intrinsic/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/call-bind/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/call-bind/callBound.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/object-inspect/util.inspect.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/object-inspect/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/side-channel/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/qs/lib/formats.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/qs/lib/utils.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/qs/lib/stringify.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/qs/lib/parse.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/qs/lib/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/ejs/lib/utils.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/ejs/lib/ejs.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/options.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/showdown.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/helpers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/converter.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/anchors.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/autoLinks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/blockGamut.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/blockQuotes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/codeBlocks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/codeSpans.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/completeHTMLDocument.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/detab.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/ellipsis.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/emoji.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/encodeAmpsAndAngles.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/encodeBackslashEscapes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/encodeCode.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/escapeSpecialCharsWithinTagAttributes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/githubCodeBlocks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashBlock.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashCodeTags.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashElement.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashHTMLBlocks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashHTMLSpans.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/hashPreCodeTags.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/headers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/horizontalRule.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/images.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/italicsAndBold.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/lists.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/metadata.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/outdent.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/paragraphs.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/runExtension.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/spanGamut.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/strikethrough.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/stripLinkDefinitions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/tables.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/underline.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/unescapeSpecialChars.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/blockquote.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/codeBlock.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/codeSpan.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/emphasis.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/header.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/hr.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/image.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/links.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/list.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/listItem.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/node.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/paragraph.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/pre.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/strikethrough.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/strong.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/table.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/tableCell.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/subParsers/makeMarkdown/txt.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/showdown/src/loader.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/fetch/cookies.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/fetch/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/shared/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-funcs/mime-types.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/base64/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/qp/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-funcs/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/addressparser/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-node/last-newline.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-node/le-windows.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-node/le-unix.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mime-node/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mail-composer/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/dkim/message-parser.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/dkim/relaxed-body.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/dkim/sign.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/dkim/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mailer/mail-message.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/mailer/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-connection/data-stream.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-connection/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/xoauth2/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-pool/pool-resource.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/well-known/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-pool/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/smtp-transport/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/sendmail-transport/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/stream-transport/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/json-transport/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/ses-transport/index.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/nodemailer/lib/nodemailer.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/complete.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/licenseOptions.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/src/util/getLicenseData.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/platform/NodePlatformFunctions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/crypto/NodeCryptoProvider.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/crypto/CryptoProvider.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/net/NodeHttpClient.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/net/HttpClient.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/net/FetchHttpClient.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/crypto/SubtleCryptoProvider.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/platform/PlatformFunctions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/Error.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/utils.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/apiVersion.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/ResourceNamespace.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/autoPagination.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/StripeMethod.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/StripeResource.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/FinancialConnections/Accounts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Issuing/Authorizations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Tax/Calculations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Issuing/Cardholders.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Issuing/Cards.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Issuing/Cards.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/BillingPortal/Configurations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Terminal/Configurations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Terminal/ConnectionTokens.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/CreditReversals.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Customers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/DebitReversals.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Issuing/Disputes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Radar/EarlyFraudWarnings.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/FinancialAccounts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Treasury/InboundTransfers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/InboundTransfers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Terminal/Locations.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundPayments.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/OutboundPayments.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundTransfers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/OutboundTransfers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Terminal/Readers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Terminal/Readers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedCredits.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/ReceivedCredits.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedDebits.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/ReceivedDebits.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/Refunds.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Reporting/ReportRuns.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Reporting/ReportTypes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Sigma/ScheduledQueryRuns.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Apps/Secrets.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/BillingPortal/Sessions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Checkout/Sessions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/FinancialConnections/Sessions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Tax/Settings.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TestHelpers/TestClocks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/TransactionEntries.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Issuing/Transactions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Tax/Transactions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Treasury/Transactions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Radar/ValueListItems.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Radar/ValueLists.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Identity/VerificationReports.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Identity/VerificationSessions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Accounts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/AccountLinks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/ApplePayDomains.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/ApplicationFees.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Balance.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/BalanceTransactions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Charges.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/CountrySpecs.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Coupons.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/CreditNotes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Customers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Disputes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/EphemeralKeys.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Events.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/ExchangeRates.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/FileLinks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/multipart.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Files.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/InvoiceItems.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Invoices.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Mandates.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/OAuth.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/PaymentIntents.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/PaymentLinks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/PaymentMethods.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Payouts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Plans.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Prices.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Products.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/PromotionCodes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Quotes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Refunds.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Reviews.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/SetupAttempts.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/SetupIntents.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/ShippingRates.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Sources.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/SubscriptionItems.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/SubscriptionSchedules.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Subscriptions.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TaxCodes.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/TaxRates.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Tokens.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Topups.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/Transfers.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/resources/WebhookEndpoints.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/RequestSender.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/Webhooks.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/stripe.core.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/node_modules/stripe/esm/stripe.esm.node.js", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/src/util/sendEmails.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/src/constants/email.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/src/util/isProduction.ts", "../../../../../../Users/ahmacarthur/apps/typeit-site-astro/functions/src/constants/defaultHeaders.ts"],
  "sourceRoot": "/var/folders/sf/s3sysww51_vdxvn7v5t2v92h0000gn/T/tmp-77561-cUQgnjeGR8KR",
  "sourcesContent": ["module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.METADATA_VERSION = exports.HTTP_STATUS_OK = exports.HTTP_STATUS_METHOD_NOT_ALLOWED = exports.BUILDER_FUNCTIONS_FLAG = void 0;\nconst BUILDER_FUNCTIONS_FLAG = true;\nexports.BUILDER_FUNCTIONS_FLAG = BUILDER_FUNCTIONS_FLAG;\nconst HTTP_STATUS_METHOD_NOT_ALLOWED = 405;\nexports.HTTP_STATUS_METHOD_NOT_ALLOWED = HTTP_STATUS_METHOD_NOT_ALLOWED;\nconst HTTP_STATUS_OK = 200;\nexports.HTTP_STATUS_OK = HTTP_STATUS_OK;\nconst METADATA_VERSION = 1;\nexports.METADATA_VERSION = METADATA_VERSION;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.builder = void 0;\nconst is_promise_1 = __importDefault(require(\"is-promise\"));\nconst consts_js_1 = require(\"./consts.js\");\nconst augmentResponse = (response) => {\n    if (!response) {\n        return response;\n    }\n    const metadata = { version: consts_js_1.METADATA_VERSION, builder_function: consts_js_1.BUILDER_FUNCTIONS_FLAG, ttl: response.ttl || 0 };\n    return {\n        ...response,\n        metadata,\n    };\n};\nconst wrapHandler = (handler) => \n// eslint-disable-next-line promise/prefer-await-to-callbacks\n(event, context, callback) => {\n    if (event.httpMethod !== 'GET' && event.httpMethod !== 'HEAD') {\n        return Promise.resolve({\n            body: 'Method Not Allowed',\n            statusCode: consts_js_1.HTTP_STATUS_METHOD_NOT_ALLOWED,\n        });\n    }\n    // Removing query string parameters from the builder function.\n    const modifiedEvent = {\n        ...event,\n        multiValueQueryStringParameters: {},\n        queryStringParameters: {},\n    };\n    const wrappedCallback = (error, response) => \n    // eslint-disable-next-line promise/prefer-await-to-callbacks\n    callback ? callback(error, augmentResponse(response)) : null;\n    const execution = handler(modifiedEvent, context, wrappedCallback);\n    if ((0, is_promise_1.default)(execution)) {\n        // eslint-disable-next-line promise/prefer-await-to-then\n        return execution.then(augmentResponse);\n    }\n    return execution;\n};\nexports.builder = wrapHandler;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.schedule = void 0;\n/**\n * Declares a function to run on a cron schedule.\n * Not reachable via HTTP.\n *\n * @example\n * ```\n * export const handler = cron(\"5 4 * * *\", async () => {\n *   // ...\n * })\n * ```\n *\n * @param schedule expressed as cron string.\n * @param handler\n * @see https://ntl.fyi/sched-func\n */\nconst schedule = (cron, handler) => handler;\nexports.schedule = schedule;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stream = void 0;\nconst node_stream_1 = require(\"node:stream\");\nconst node_util_1 = require(\"node:util\");\n// Node v14 doesn't have node:stream/promises\nconst pipeline = (0, node_util_1.promisify)(node_stream_1.pipeline);\n/**\n * Enables streaming responses. `body` accepts a Node.js `Readable` stream or a WHATWG `ReadableStream`.\n *\n * @example\n * ```\n * const { Readable } = require('stream');\n *\n * export const handler = stream(async (event, context) => {\n *   const stream = Readable.from(Buffer.from(JSON.stringify(event)))\n *   return {\n *     statusCode: 200,\n *     body: stream,\n *   }\n * })\n * ```\n *\n * @example\n * ```\n * export const handler = stream(async (event, context) => {\n *   const response = await fetch('https://api.openai.com/', { ... })\n *   // ...\n *   return {\n *     statusCode: 200,\n *     body: response.body, // Web stream\n *   }\n * })\n * ```\n *\n * @param handler\n * @see https://ntl.fyi/streaming-func\n */\nconst stream = (handler) => awslambda.streamifyResponse(async (event, responseStream, context) => {\n    const { body, ...httpResponseMetadata } = await handler(event, context);\n    const responseBody = awslambda.HttpResponseStream.from(responseStream, httpResponseMetadata);\n    if (typeof body === 'undefined') {\n        responseBody.end();\n    }\n    else if (typeof body === 'string') {\n        responseBody.write(body);\n        responseBody.end();\n    }\n    else {\n        await pipeline(body, responseBody);\n    }\n});\nexports.stream = stream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stream = exports.schedule = exports.builder = void 0;\nvar builder_js_1 = require(\"./lib/builder.js\");\nObject.defineProperty(exports, \"builder\", { enumerable: true, get: function () { return builder_js_1.builder; } });\nvar schedule_js_1 = require(\"./lib/schedule.js\");\nObject.defineProperty(exports, \"schedule\", { enumerable: true, get: function () { return schedule_js_1.schedule; } });\nvar stream_js_1 = require(\"./lib/stream.js\");\nObject.defineProperty(exports, \"stream\", { enumerable: true, get: function () { return stream_js_1.stream; } });\n__exportStar(require(\"./function/index.js\"), exports);\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n", "import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      hint.originalException as ExtendedError,\n      key,\n      event.exception.values,\n      originalException,\n      0,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n", "import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n", "import type { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = (typeof CONSOLE_LEVELS)[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<(typeof CONSOLE_LEVELS)[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as (typeof CONSOLE_LEVELS)[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (__DEBUG_BUILD__) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n", "import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!__DEBUG_BUILD__) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n", "import type { ConsoleLevel } from './logger';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n", "import { isRegExp, isString } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n", "// This code was originally forked from https://github.com/felixge/node-stack-trace\n// Since then it has been highly modified to fit our needs.\n\n// Copyright (c) 2011 Felix Geisend\u00F6rfer (felix@debuggable.com)//\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions://\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.//\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport type { StackLineParserFn } from '@sentry/types';\n\nexport type GetModuleFn = (filename: string | undefined) => string | undefined;\n\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nexport function node(getModule?: GetModuleFn): StackLineParserFn {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line: string) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object: string | undefined;\n      let method: string | undefined;\n      let functionName: string | undefined;\n      let typeName: string | undefined;\n      let methodName: string | undefined;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      const isInternal =\n        isNative ||\n        (filename &&\n          // It's not internal if it's an absolute linux path\n          !filename.startsWith('/') &&\n          // It's not internal if it's an absolute windows path\n          !filename.includes(':\\\\') &&\n          // It's not internal if the path is starting with a dot\n          !filename.startsWith('.') &&\n          // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n          !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n      // in_app is all that's not an internal Node function or a module within node_modules\n      // note that isNative appears to return true even for node core libraries\n      // see https://github.com/getsentry/raven-node/issues/176\n\n      const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app,\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n", "import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { node } from './node-stack-trace';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = stack.slice(0, STACKTRACE_FRAME_LIMIT);\n\n  const lastFrameFunction = localStack[localStack.length - 1].function;\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (lastFrameFunction && /sentryWrapped/.test(lastFrameFunction)) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  const firstFrameFunction = localStack[localStack.length - 1].function;\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (firstFrameFunction && /captureMessage|captureException/.test(firstFrameFunction)) {\n    localStack.pop();\n  }\n\n  return localStack.map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n", "import { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n", "// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type {\n  HandlerDataFetch,\n  HandlerDataXhr,\n  SentryWrappedXMLHttpRequest,\n  SentryXhrData,\n  WrappedFunction,\n} from '@sentry/types';\n\nimport { isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      const xhrInfo: SentryXhrData = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args as [string, string],\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } as HandlerDataXhr);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs as [string, string];\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: (typeof WINDOW)['onerror'] | null = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg: unknown, url: unknown, line: unknown, column: unknown, error: unknown): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler: (typeof WINDOW)['onunhandledrejection'] | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n", "/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-ignore __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n", "import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n", "// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n", "/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: \u00AF\\_(\u30C4)_/\u00AF\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n", "import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n", "type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n", "// TODO: Remove this file once equivalent integration is used everywhere\n\n/* eslint-disable complexity */\n/**\n * The functions here, which enrich an event with request data, are mostly for use in Node, but are safe for use in a\n * browser context. They live here in `@sentry/utils` rather than in `@sentry/node` so that they can be used in\n * frameworks (like nextjs), which, because of SSR, run the same code in both Node and browser contexts.\n *\n * TODO (v8 / #5257): Remove the note below\n * Note that for now, the tests for this code have to live in `@sentry/node`, since they test both these functions and\n * the backwards-compatibility-preserving wrappers which still live in `handlers.ts` there.\n */\n\n/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type {\n  Event,\n  ExtractedNodeRequestData,\n  PolymorphicRequest,\n  Transaction,\n  TransactionSource,\n} from '@sentry/types';\n\nimport { isPlainObject, isString } from './is';\nimport { normalize } from './normalize';\nimport { stripUrlQueryAndFragment } from './url';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\ntype InjectedNodeDeps = {\n  cookie: {\n    parse: (cookieStr: string) => Record<string, string>;\n  };\n  url: {\n    parse: (urlStr: string) => {\n      query: string | null;\n    };\n  };\n};\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nexport function addRequestDataToTransaction(\n  transaction: Transaction | undefined,\n  req: PolymorphicRequest,\n  deps?: InjectedNodeDeps,\n): void {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nexport function extractPathForTransaction(\n  req: PolymorphicRequest,\n  options: { path?: boolean; method?: boolean; customRoute?: string } = {},\n): [string, TransactionSource] {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source: TransactionSource = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\ntype TransactionNamingScheme = 'path' | 'methodPath' | 'handler';\n\n/** JSDoc */\nfunction extractTransaction(req: PolymorphicRequest, type: boolean | TransactionNamingScheme): string {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user: {\n    [key: string]: any;\n  },\n  keys: boolean | string[],\n): { [key: string]: any } {\n  const extractedUser: { [key: string]: any } = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nexport function extractRequestData(\n  req: PolymorphicRequest,\n  options?: {\n    include?: string[];\n    deps?: InjectedNodeDeps;\n  },\n): ExtractedNodeRequestData {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData: { [key: string]: any } = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {}) as {\n    host?: string;\n    cookie?: string;\n  };\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req as { [key: string]: any })[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\nexport interface AddRequestDataToEventOptions {\n  /** Flags controlling whether each type of data should be added to the event */\n  include?: {\n    ip?: boolean;\n    request?: boolean | string[];\n    transaction?: boolean | TransactionNamingScheme;\n    user?: boolean | string[];\n  };\n\n  /** Injected platform-specific dependencies */\n  deps?: {\n    cookie: {\n      parse: (cookieStr: string) => Record<string, string>;\n    };\n    url: {\n      parse: (urlStr: string) => {\n        query: string | null;\n      };\n    };\n  };\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nexport function addRequestDataToEvent(\n  event: Event,\n  req: PolymorphicRequest,\n  options?: AddRequestDataToEventOptions,\n): Event {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req: PolymorphicRequest,\n  deps?: InjectedNodeDeps,\n): string | Record<string, unknown> | undefined {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n", "/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n", "import { dynamicRequire, isNodeEnv } from './node';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n", "import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      __DEBUG_BUILD__ &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n", "import type { DynamicSamplingContext, PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext: PropagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled === undefined ? false : parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext as DynamicSamplingContext;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n", "import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n", "import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n", "import type { TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, category: string): number {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, category: string, now: number = Date.now()): boolean {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n", "import type { Integration } from '@sentry/types';\n\nexport type UserIntegrationsFunction = (integrations: Integration[]) => Integration[];\nexport type UserIntegrations = Integration[] | UserIntegrationsFunction;\nexport type IntegrationWithExclusionOption = Integration & {\n  /**\n   * Allow the user to exclude this integration by not returning it from a function provided as the `integrations` option\n   * in `Sentry.init()`. Meant to be used with default integrations, the idea being that if a user has actively filtered\n   * an integration out, we should be able to respect that choice if we wish.\n   */\n  allowExclusionByUser?: boolean;\n};\n\ntype ForcedIntegrationOptions = {\n  [keyPath: string]: unknown;\n};\n\n/**\n * Recursively traverses an object to update an existing nested key.\n * Note: The provided key path must include existing properties,\n * the function will not create objects while traversing.\n *\n * @param obj An object to update\n * @param value The value to update the nested key with\n * @param keyPath The path to the key to update ex. fizz.buzz.foo\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setNestedKey(obj: Record<string, any>, keyPath: string, value: unknown): void {\n  // Ex. foo.bar.zoop will extract foo and bar.zoop\n  const match = keyPath.match(/([a-z_]+)\\.(.*)/i);\n  // The match will be null when there's no more recursing to do, i.e., when we've reached the right level of the object\n  if (match === null) {\n    obj[keyPath] = value;\n  } else {\n    // `match[1]` is the initial segment of the path, and `match[2]` is the remainder of the path\n    const innerObj = obj[match[1]];\n    setNestedKey(innerObj, match[2], value);\n  }\n}\n\n/**\n * Enforces inclusion of a given integration with specified options in an integration array originally determined by the\n * user, by either including the given default instance or by patching an existing user instance with the given options.\n *\n * Ideally this would happen when integrations are set up, but there isn't currently a mechanism there for merging\n * options from a default integration instance with those from a user-provided instance of the same integration, only\n * for allowing the user to override a default instance entirely. (TODO: Fix that.)\n *\n * @param defaultIntegrationInstance An instance of the integration with the correct options already set\n * @param userIntegrations Integrations defined by the user.\n * @param forcedOptions Options with which to patch an existing user-derived instance on the integration.\n * @returns A final integrations array.\n */\nexport function addOrUpdateIntegration<T extends UserIntegrations>(\n  defaultIntegrationInstance: Integration,\n  userIntegrations: T,\n  forcedOptions: ForcedIntegrationOptions = {},\n): T {\n  return (\n    Array.isArray(userIntegrations)\n      ? addOrUpdateIntegrationInArray(defaultIntegrationInstance, userIntegrations, forcedOptions)\n      : addOrUpdateIntegrationInFunction(\n          defaultIntegrationInstance,\n          // Somehow TS can't figure out that not being an array makes this necessarily a function\n          userIntegrations as UserIntegrationsFunction,\n          forcedOptions,\n        )\n  ) as T;\n}\n\nfunction addOrUpdateIntegrationInArray(\n  defaultIntegrationInstance: Integration,\n  userIntegrations: Integration[],\n  forcedOptions: ForcedIntegrationOptions,\n): Integration[] {\n  const userInstance = userIntegrations.find(integration => integration.name === defaultIntegrationInstance.name);\n\n  if (userInstance) {\n    for (const [keyPath, value] of Object.entries(forcedOptions)) {\n      setNestedKey(userInstance, keyPath, value);\n    }\n\n    return userIntegrations;\n  }\n\n  return [...userIntegrations, defaultIntegrationInstance];\n}\n\nfunction addOrUpdateIntegrationInFunction(\n  defaultIntegrationInstance: IntegrationWithExclusionOption,\n  userIntegrationsFunc: UserIntegrationsFunction,\n  forcedOptions: ForcedIntegrationOptions,\n): UserIntegrationsFunction {\n  const wrapper: UserIntegrationsFunction = defaultIntegrations => {\n    const userFinalIntegrations = userIntegrationsFunc(defaultIntegrations);\n\n    // There are instances where we want the user to be able to prevent an integration from appearing at all, which they\n    // would do by providing a function which filters out the integration in question. If that's happened in one of\n    // those cases, don't add our default back in.\n    if (defaultIntegrationInstance.allowExclusionByUser) {\n      const userFinalInstance = userFinalIntegrations.find(\n        integration => integration.name === defaultIntegrationInstance.name,\n      );\n      if (!userFinalInstance) {\n        return userFinalIntegrations;\n      }\n    }\n\n    return addOrUpdateIntegrationInArray(defaultIntegrationInstance, userFinalIntegrations, forcedOptions);\n  };\n\n  return wrapper;\n}\n", "/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nexport function makeFifoCache<Key extends string, Value>(\n  size: number,\n): {\n  get: (key: Key) => Value | undefined;\n  add: (key: Key, value: Value) => void;\n  delete: (key: Key) => boolean;\n  clear: () => void;\n  size: () => number;\n} {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder: Key[] = [];\n  let cache: Record<string, Value> = {};\n\n  return {\n    add(key: Key, value: Value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key: Key): Value | undefined {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key: Key): boolean {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n", "// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 12+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nexport function escapeStringForRegex(regexString: string): string {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst aggregateErrors = require('./aggregate-errors.js');\nconst browser = require('./browser.js');\nconst dsn = require('./dsn.js');\nconst error = require('./error.js');\nconst worldwide = require('./worldwide.js');\nconst instrument = require('./instrument.js');\nconst is = require('./is.js');\nconst logger = require('./logger.js');\nconst memo = require('./memo.js');\nconst misc = require('./misc.js');\nconst node = require('./node.js');\nconst normalize = require('./normalize.js');\nconst object = require('./object.js');\nconst path = require('./path.js');\nconst promisebuffer = require('./promisebuffer.js');\nconst requestdata = require('./requestdata.js');\nconst severity = require('./severity.js');\nconst stacktrace = require('./stacktrace.js');\nconst string = require('./string.js');\nconst supports = require('./supports.js');\nconst syncpromise = require('./syncpromise.js');\nconst time = require('./time.js');\nconst tracing = require('./tracing.js');\nconst env = require('./env.js');\nconst envelope = require('./envelope.js');\nconst clientreport = require('./clientreport.js');\nconst ratelimit = require('./ratelimit.js');\nconst baggage = require('./baggage.js');\nconst url = require('./url.js');\nconst userIntegrations = require('./userIntegrations.js');\nconst cache = require('./cache.js');\nconst escapeStringForRegex = require('./vendor/escapeStringForRegex.js');\nconst supportsHistory = require('./vendor/supportsHistory.js');\n\n\n\nexports.applyAggregateErrorsToEvent = aggregateErrors.applyAggregateErrorsToEvent;\nexports.getDomElement = browser.getDomElement;\nexports.getLocationHref = browser.getLocationHref;\nexports.htmlTreeAsString = browser.htmlTreeAsString;\nexports.dsnFromString = dsn.dsnFromString;\nexports.dsnToString = dsn.dsnToString;\nexports.makeDsn = dsn.makeDsn;\nexports.SentryError = error.SentryError;\nexports.GLOBAL_OBJ = worldwide.GLOBAL_OBJ;\nexports.getGlobalObject = worldwide.getGlobalObject;\nexports.getGlobalSingleton = worldwide.getGlobalSingleton;\nexports.SENTRY_XHR_DATA_KEY = instrument.SENTRY_XHR_DATA_KEY;\nexports.addInstrumentationHandler = instrument.addInstrumentationHandler;\nexports.parseFetchArgs = instrument.parseFetchArgs;\nexports.isDOMError = is.isDOMError;\nexports.isDOMException = is.isDOMException;\nexports.isElement = is.isElement;\nexports.isError = is.isError;\nexports.isErrorEvent = is.isErrorEvent;\nexports.isEvent = is.isEvent;\nexports.isInstanceOf = is.isInstanceOf;\nexports.isNaN = is.isNaN;\nexports.isPlainObject = is.isPlainObject;\nexports.isPrimitive = is.isPrimitive;\nexports.isRegExp = is.isRegExp;\nexports.isString = is.isString;\nexports.isSyntheticEvent = is.isSyntheticEvent;\nexports.isThenable = is.isThenable;\nexports.CONSOLE_LEVELS = logger.CONSOLE_LEVELS;\nexports.consoleSandbox = logger.consoleSandbox;\nObject.defineProperty(exports, 'logger', {\n\tenumerable: true,\n\tget: () => logger.logger\n});\nexports.memoBuilder = memo.memoBuilder;\nexports.addContextToFrame = misc.addContextToFrame;\nexports.addExceptionMechanism = misc.addExceptionMechanism;\nexports.addExceptionTypeValue = misc.addExceptionTypeValue;\nexports.arrayify = misc.arrayify;\nexports.checkOrSetAlreadyCaught = misc.checkOrSetAlreadyCaught;\nexports.getEventDescription = misc.getEventDescription;\nexports.parseSemver = misc.parseSemver;\nexports.uuid4 = misc.uuid4;\nexports.dynamicRequire = node.dynamicRequire;\nexports.isNodeEnv = node.isNodeEnv;\nexports.loadModule = node.loadModule;\nexports.normalize = normalize.normalize;\nexports.normalizeToSize = normalize.normalizeToSize;\nexports.walk = normalize.walk;\nexports.addNonEnumerableProperty = object.addNonEnumerableProperty;\nexports.convertToPlainObject = object.convertToPlainObject;\nexports.dropUndefinedKeys = object.dropUndefinedKeys;\nexports.extractExceptionKeysForMessage = object.extractExceptionKeysForMessage;\nexports.fill = object.fill;\nexports.getOriginalFunction = object.getOriginalFunction;\nexports.markFunctionWrapped = object.markFunctionWrapped;\nexports.objectify = object.objectify;\nexports.urlEncode = object.urlEncode;\nexports.basename = path.basename;\nexports.dirname = path.dirname;\nexports.isAbsolute = path.isAbsolute;\nexports.join = path.join;\nexports.normalizePath = path.normalizePath;\nexports.relative = path.relative;\nexports.resolve = path.resolve;\nexports.makePromiseBuffer = promisebuffer.makePromiseBuffer;\nexports.addRequestDataToEvent = requestdata.addRequestDataToEvent;\nexports.addRequestDataToTransaction = requestdata.addRequestDataToTransaction;\nexports.extractPathForTransaction = requestdata.extractPathForTransaction;\nexports.extractRequestData = requestdata.extractRequestData;\nexports.severityFromString = severity.severityFromString;\nexports.severityLevelFromString = severity.severityLevelFromString;\nexports.validSeverityLevels = severity.validSeverityLevels;\nexports.createStackParser = stacktrace.createStackParser;\nexports.getFunctionName = stacktrace.getFunctionName;\nexports.nodeStackLineParser = stacktrace.nodeStackLineParser;\nexports.stackParserFromStackParserOptions = stacktrace.stackParserFromStackParserOptions;\nexports.stripSentryFramesAndReverse = stacktrace.stripSentryFramesAndReverse;\nexports.isMatchingPattern = string.isMatchingPattern;\nexports.safeJoin = string.safeJoin;\nexports.snipLine = string.snipLine;\nexports.stringMatchesSomePattern = string.stringMatchesSomePattern;\nexports.truncate = string.truncate;\nexports.isNativeFetch = supports.isNativeFetch;\nexports.supportsDOMError = supports.supportsDOMError;\nexports.supportsDOMException = supports.supportsDOMException;\nexports.supportsErrorEvent = supports.supportsErrorEvent;\nexports.supportsFetch = supports.supportsFetch;\nexports.supportsNativeFetch = supports.supportsNativeFetch;\nexports.supportsReferrerPolicy = supports.supportsReferrerPolicy;\nexports.supportsReportingObserver = supports.supportsReportingObserver;\nexports.SyncPromise = syncpromise.SyncPromise;\nexports.rejectedSyncPromise = syncpromise.rejectedSyncPromise;\nexports.resolvedSyncPromise = syncpromise.resolvedSyncPromise;\nObject.defineProperty(exports, '_browserPerformanceTimeOriginMode', {\n\tenumerable: true,\n\tget: () => time._browserPerformanceTimeOriginMode\n});\nexports.browserPerformanceTimeOrigin = time.browserPerformanceTimeOrigin;\nexports.dateTimestampInSeconds = time.dateTimestampInSeconds;\nexports.timestampInSeconds = time.timestampInSeconds;\nexports.timestampWithMs = time.timestampWithMs;\nexports.usingPerformanceAPI = time.usingPerformanceAPI;\nexports.TRACEPARENT_REGEXP = tracing.TRACEPARENT_REGEXP;\nexports.extractTraceparentData = tracing.extractTraceparentData;\nexports.generateSentryTraceHeader = tracing.generateSentryTraceHeader;\nexports.tracingContextFromHeaders = tracing.tracingContextFromHeaders;\nexports.getSDKSource = env.getSDKSource;\nexports.isBrowserBundle = env.isBrowserBundle;\nexports.addItemToEnvelope = envelope.addItemToEnvelope;\nexports.createAttachmentEnvelopeItem = envelope.createAttachmentEnvelopeItem;\nexports.createEnvelope = envelope.createEnvelope;\nexports.createEventEnvelopeHeaders = envelope.createEventEnvelopeHeaders;\nexports.envelopeContainsItemType = envelope.envelopeContainsItemType;\nexports.envelopeItemTypeToDataCategory = envelope.envelopeItemTypeToDataCategory;\nexports.forEachEnvelopeItem = envelope.forEachEnvelopeItem;\nexports.getSdkMetadataForEnvelopeHeader = envelope.getSdkMetadataForEnvelopeHeader;\nexports.parseEnvelope = envelope.parseEnvelope;\nexports.serializeEnvelope = envelope.serializeEnvelope;\nexports.createClientReportEnvelope = clientreport.createClientReportEnvelope;\nexports.DEFAULT_RETRY_AFTER = ratelimit.DEFAULT_RETRY_AFTER;\nexports.disabledUntil = ratelimit.disabledUntil;\nexports.isRateLimited = ratelimit.isRateLimited;\nexports.parseRetryAfterHeader = ratelimit.parseRetryAfterHeader;\nexports.updateRateLimits = ratelimit.updateRateLimits;\nexports.BAGGAGE_HEADER_NAME = baggage.BAGGAGE_HEADER_NAME;\nexports.MAX_BAGGAGE_STRING_LENGTH = baggage.MAX_BAGGAGE_STRING_LENGTH;\nexports.SENTRY_BAGGAGE_KEY_PREFIX = baggage.SENTRY_BAGGAGE_KEY_PREFIX;\nexports.SENTRY_BAGGAGE_KEY_PREFIX_REGEX = baggage.SENTRY_BAGGAGE_KEY_PREFIX_REGEX;\nexports.baggageHeaderToDynamicSamplingContext = baggage.baggageHeaderToDynamicSamplingContext;\nexports.dynamicSamplingContextToSentryBaggageHeader = baggage.dynamicSamplingContextToSentryBaggageHeader;\nexports.getNumberOfUrlSegments = url.getNumberOfUrlSegments;\nexports.getSanitizedUrlString = url.getSanitizedUrlString;\nexports.parseUrl = url.parseUrl;\nexports.stripUrlQueryAndFragment = url.stripUrlQueryAndFragment;\nexports.addOrUpdateIntegration = userIntegrations.addOrUpdateIntegration;\nexports.makeFifoCache = cache.makeFifoCache;\nexports.escapeStringForRegex = escapeStringForRegex.escapeStringForRegex;\nexports.supportsHistory = supportsHistory.supportsHistory;\n//# sourceMappingURL=index.js.map\n", "export const DEFAULT_ENVIRONMENT = 'production';\n", "import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. \u2014 Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport {\n  arrayify,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isPlainObject,\n  isThenable,\n  logger,\n  SyncPromise,\n  uuid4,\n} from '@sentry/utils';\n\nimport { updateSession } from './session';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getAttachments(): Attachment[] {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint: EventHint = {}): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n\n        __DEBUG_BUILD__ &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: false,\n  };\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalSingleton, GLOBAL_OBJ, logger, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (__DEBUG_BUILD__ && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n  public shouldSendDefaultPii(): boolean {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _withClient(callback: (client: Client, scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    __DEBUG_BUILD__ && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n", "import type { Options } from '@sentry/types';\n\nimport { getCurrentHub } from '../hub';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getCurrentHub().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n", "import type { Transaction } from '@sentry/types';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope.getTransaction() as T | undefined;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n", "import { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport type { SpanStatusType } from './span';\nimport { getActiveTransaction } from './utils';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n", "/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Primitive,\n  Span as SpanInterface,\n  SpanContext,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[] = [];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string = uuid4();\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string = uuid4().substring(16);\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatusType | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number = timestampInSeconds();\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive } = {};\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any } = {};\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   */\n  public instrumenter: Instrumenter = 'sentry';\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext?: SpanContext) {\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if (__DEBUG_BUILD__ && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): void {\n    if (\n      __DEBUG_BUILD__ &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampInSeconds();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    return generateSentryTraceHeader(this.traceId, this.spanId, this.sampled);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): TraceContext {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n", "import type { Client, DynamicSamplingContext, Scope } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n", "import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  Event,\n  Measurements,\n  MeasurementUnit,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { getDynamicSamplingContextFromClient } from './dynamicSamplingContext';\nimport { Span as SpanClass, SpanRecorder } from './span';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  public metadata: TransactionMetadata;\n\n  /**\n   * The reference to the current hub.\n   */\n  public _hub: Hub;\n\n  private _name: string;\n\n  private _measurements: Measurements = {};\n\n  private _contexts: Contexts = {};\n\n  private _trimEnd?: boolean;\n\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined = undefined;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n  public get name(): string {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n  public set name(newName: string) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): string | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      __DEBUG_BUILD__ && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      __DEBUG_BUILD__ && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev: SpanClass, current: SpanClass) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction: Event = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      __DEBUG_BUILD__ &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || getCurrentHub();\n    const client = hub.getClient();\n\n    if (!client) return {};\n\n    const scope = hub.getScope();\n    const dsc = getDynamicSamplingContextFromClient(this.traceId, client, scope);\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    if (maybeSampleRate !== undefined) {\n      dsc.sample_rate = `${maybeSampleRate}`;\n    }\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const source = this.metadata.source;\n    if (source && source !== 'url') {\n      dsc.transaction = this.name;\n    }\n\n    if (this.sampled !== undefined) {\n      dsc.sampled = String(this.sampled);\n    }\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  public setHub(hub: Hub): void {\n    this._hub = hub;\n  }\n}\n", "/* eslint-disable max-lines */\nimport type { TransactionContext } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp?: number) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampInSeconds();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean> = {};\n\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number = 0;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean = false;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean = false;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[] = [];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  private _finishReason: (typeof IDLE_TRANSACTION_FINISH_REASONS)[number] = IDLE_TRANSACTION_FINISH_REASONS[4];\n\n  public constructor(\n    transactionContext: TransactionContext,\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      __DEBUG_BUILD__ && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public finish(endTimestamp: number = timestampInSeconds()): string | undefined {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.op === 'ui.action.click') {\n      this.setTag(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    if (this.spanRecorder) {\n      __DEBUG_BUILD__ &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          __DEBUG_BUILD__ &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          __DEBUG_BUILD__ &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      __DEBUG_BUILD__ && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      __DEBUG_BUILD__ && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      const scope = this._idleHub.getScope();\n      if (scope.getTransaction() === this) {\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      __DEBUG_BUILD__ && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['finish']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n  public setFinishReason(reason: string): void {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['finish']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    __DEBUG_BUILD__ && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    __DEBUG_BUILD__ && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      __DEBUG_BUILD__ && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      __DEBUG_BUILD__ && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      __DEBUG_BUILD__ && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    __DEBUG_BUILD__ && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n", "import type { ClientOptions, CustomSamplingContext, Options, SamplingContext, TransactionContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    __DEBUG_BUILD__ && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    __DEBUG_BUILD__ &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    __DEBUG_BUILD__ &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  __DEBUG_BUILD__ && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    __DEBUG_BUILD__ &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n): IdleTransaction {\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n", "/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n", "import type { TransactionContext } from '@sentry/types';\nimport { isThenable } from '@sentry/utils';\n\nimport { getCurrentHub } from '../hub';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport type { Span } from './span';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n */\nexport function trace<T>(\n  context: TransactionContext,\n  callback: (span?: Span) => T,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError: (error: unknown) => void = () => {},\n): T {\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n\n  const parentSpan = scope.getSpan();\n\n  function getActiveSpan(): Span | undefined {\n    if (!hasTracingEnabled()) {\n      return undefined;\n    }\n    return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n  }\n\n  const activeSpan = getActiveSpan();\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan(): void {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    onError(e);\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      e => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        onError(e);\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n", "import type {\n  Breadcrumb,\n  CaptureContext,\n  CheckIn,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  MonitorConfig,\n  Primitive,\n  Severity,\n  SeverityLevel,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { logger, uuid4 } from '@sentry/utils';\n\nimport type { Hub } from './hub';\nimport { getCurrentHub } from './hub';\nimport type { Scope } from './scope';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): ReturnType<Hub['captureException']> {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): ReturnType<Hub['captureMessage']> {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event, hint?: EventHint): ReturnType<Hub['captureEvent']> {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): ReturnType<Hub['addBreadcrumb']> {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): ReturnType<Hub['withScope']> {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): ReturnType<Hub['startTransaction']> {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    __DEBUG_BUILD__ && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    __DEBUG_BUILD__ && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n", "import type {\n  AggregationCounts,\n  Client,\n  RequestSessionStatus,\n  SessionAggregates,\n  SessionFlusherLike,\n} from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { getCurrentHub } from './hub';\n\ntype ReleaseHealthAttributes = {\n  environment?: string;\n  release: string;\n};\n\n/**\n * @inheritdoc\n */\nexport class SessionFlusher implements SessionFlusherLike {\n  public readonly flushTimeout: number = 60;\n  private _pendingAggregates: Record<number, AggregationCounts> = {};\n  private _sessionAttrs: ReleaseHealthAttributes;\n  private _intervalId: ReturnType<typeof setInterval>;\n  private _isEnabled: boolean = true;\n  private _client: Client;\n\n  public constructor(client: Client, attrs: ReleaseHealthAttributes) {\n    this._client = client;\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n  public flush(): void {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n  public getSessionAggregates(): SessionAggregates {\n    const aggregates: AggregationCounts[] = Object.keys(this._pendingAggregates).map((key: string) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates: SessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return dropUndefinedKeys(sessionAggregates);\n  }\n\n  /** JSDoc */\n  public close(): void {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n  public incrementSessionStatusCount(): void {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = getCurrentHub().getScope();\n    const requestSession = scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      scope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n  private _incrementSessionStatusCount(status: RequestSessionStatus, date: Date): number {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts: AggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n", "import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n", "import type {\n  DsnComponents,\n  Event,\n  EventEnvelope,\n  EventItem,\n  SdkInfo,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  SessionEnvelope,\n  SessionItem,\n} from '@sentry/types';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  dsnToString,\n  getSdkMetadataForEnvelopeHeader,\n} from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n", "import type { Integration, Options } from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { getCurrentHub } from './hub';\nimport { addGlobalEventProcessor } from './scope';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(integration: Integration, integrationIndex: IntegrationIndex): void {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    __DEBUG_BUILD__ && logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n", "import type { ClientOptions, Event, EventHint, StackFrame, StackParser } from '@sentry/types';\nimport { dateTimestampInSeconds, GLOBAL_OBJ, normalize, resolvedSyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { Scope } from '../scope';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise<Event | null>(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n", "/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Outcome,\n  PropagationContext,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n  SentryError,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean = false;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number = 0;\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number } = {};\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]> = {};\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      __DEBUG_BUILD__ && logger.warn('No DSN provided, client will not do anything.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!this._isEnabled()) {\n      __DEBUG_BUILD__ && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      __DEBUG_BUILD__ && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    setupIntegration(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      const promise = this._sendEnvelope(env);\n      if (promise) {\n        promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      void this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, _event?: Event): void {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      __DEBUG_BUILD__ && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction' | 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction' | 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return prepareEvent(options, event, hint, scope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext as PropagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (__DEBUG_BUILD__) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    if (this._transport && this._dsn) {\n      this.emit('beforeEnvelope', envelope);\n\n      return this._transport.send(envelope).then(null, reason => {\n        __DEBUG_BUILD__ && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      __DEBUG_BUILD__ && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n", "import type { Client, ClientOptions } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { getCurrentHub } from './hub';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): void {\n  if (options.debug === true) {\n    if (__DEBUG_BUILD__) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n", "import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  SentryError,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            __DEBUG_BUILD__ && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          __DEBUG_BUILD__ && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n", "import type { Envelope, InternalBaseTransportOptions, Transport, TransportMakeRequestResponse } from '@sentry/types';\nimport { envelopeContainsItemType, logger, parseRetryAfterHeader } from '@sentry/utils';\n\nexport const MIN_DELAY = 100; // 100 ms\nexport const START_DELAY = 5_000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\nfunction log(msg: string, error?: Error): void {\n  __DEBUG_BUILD__ && logger.info(`[Offline]: ${msg}`, error);\n}\n\nexport interface OfflineStore {\n  insert(env: Envelope): Promise<void>;\n  pop(): Promise<Envelope | undefined>;\n}\n\nexport type CreateOfflineStore = (options: OfflineTransportOptions) => OfflineStore;\n\nexport interface OfflineTransportOptions extends InternalBaseTransportOptions {\n  /**\n   * A function that creates the offline store instance.\n   */\n  createStore?: CreateOfflineStore;\n\n  /**\n   * Flush the offline store shortly after startup.\n   *\n   * Defaults: false\n   */\n  flushAtStartup?: boolean;\n\n  /**\n   * Called before an event is stored.\n   *\n   * Return false to drop the envelope rather than store it.\n   *\n   * @param envelope The envelope that failed to send.\n   * @param error The error that occurred.\n   * @param retryDelay The current retry delay in milliseconds.\n   */\n  shouldStore?: (envelope: Envelope, error: Error, retryDelay: number) => boolean | Promise<boolean>;\n}\n\ntype Timer = number | { unref?: () => void };\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nexport function makeOfflineTransport<TO>(\n  createTransport: (options: TO) => Transport,\n): (options: TO & OfflineTransportOptions) => Transport {\n  return options => {\n    const transport = createTransport(options);\n    const store = options.createStore ? options.createStore(options) : undefined;\n\n    let retryDelay = START_DELAY;\n    let flushTimer: Timer | undefined;\n\n    function shouldQueue(env: Envelope, error: Error, retryDelay: number): boolean | Promise<boolean> {\n      // We don't queue Session Replay envelopes because they are:\n      // - Ordered and Replay relies on the response status to know when they're successfully sent.\n      // - Likely to fill the queue quickly and block other events from being sent.\n      // We also want to drop client reports because they can be generated when we retry sending events while offline.\n      if (envelopeContainsItemType(env, ['replay_event', 'replay_recording', 'client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay: number): void {\n      if (!store) {\n        return;\n      }\n\n      if (flushTimer) {\n        clearTimeout(flushTimer as ReturnType<typeof setTimeout>);\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.pop();\n        if (found) {\n          log('Attempting to send previously queued event');\n          void send(found).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) as Timer;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff(): void {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope: Envelope): Promise<void | TransportMakeRequestResponse> {\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = parseRetryAfterHeader(result.headers['retry-after']);\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (store && (await shouldQueue(envelope, e as Error, retryDelay))) {\n          await store.insert(envelope);\n          flushWithBackOff();\n          log('Error sending. Event queued', e as Error);\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n", "import type {\n  BaseTransportOptions,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventItem,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport { dsnFromString, forEachEnvelopeItem } from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from '../api';\n\ninterface MatchParam {\n  /** The envelope to be sent */\n  envelope: Envelope;\n  /**\n   * A function that returns an event from the envelope if one exists. You can optionally pass an array of envelope item\n   * types to filter by - only envelopes matching the given types will be multiplexed.\n   * Allowed values are: 'event', 'transaction', 'profile', 'replay_event'\n   *\n   * @param types Defaults to ['event']\n   */\n  getEvent(types?: EnvelopeItemType[]): Event | undefined;\n}\n\ntype Matcher = (param: MatchParam) => string[];\n\nfunction eventFromEnvelope(env: Envelope, types: EnvelopeItemType[]): Event | undefined {\n  let event: Event | undefined;\n\n  forEachEnvelopeItem(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item as EventItem)[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nexport function makeMultiplexedTransport<TO extends BaseTransportOptions>(\n  createTransport: (options: TO) => Transport,\n  matcher: Matcher,\n): (options: TO) => Transport {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports: Record<string, Transport> = {};\n\n    function getTransport(dsn: string): Transport | undefined {\n      if (!otherTransports[dsn]) {\n        const validatedDsn = dsnFromString(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = getEnvelopeEndpointWithUrlEncodedAuth(validatedDsn);\n        otherTransports[dsn] = createTransport({ ...options, url });\n      }\n\n      return otherTransports[dsn];\n    }\n\n    async function send(envelope: Envelope): Promise<void | TransportMakeRequestResponse> {\n      function getEvent(types?: EnvelopeItemType[]): Event | undefined {\n        const eventTypes: EnvelopeItemType[] = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(dsn => getTransport(dsn))\n        .filter((t): t is Transport => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      if (transports.length === 0) {\n        transports.push(fallbackTransport);\n      }\n\n      const results = await Promise.all(transports.map(transport => transport.send(envelope)));\n\n      return results[0];\n    }\n\n    async function flush(timeout: number | undefined): Promise<boolean> {\n      const allTransports = [...Object.keys(otherTransports).map(dsn => otherTransports[dsn]), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n", "export const SDK_VERSION = '7.58.1';\n", "import type { Integration, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch {\n      // ignore errors here, just don't patch this\n    }\n  }\n}\n", "import type { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*healthcheck.*$/,\n  /^.*healthy.*$/,\n  /^.*live.*$/,\n  /^.*ready.*$/,\n  /^.*heartbeat.*$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (processor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcess: EventProcessor = (event: Event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n}\n\n/** JSDoc */\nexport function _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nexport function _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    const { values } = event.exception;\n    try {\n      const { type = '', value = '' } = (values && values[values.length - 1]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      __DEBUG_BUILD__ && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    __DEBUG_BUILD__ && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst functiontostring = require('./functiontostring.js');\nconst inboundfilters = require('./inboundfilters.js');\n\n\n\nexports.FunctionToString = functiontostring.FunctionToString;\nexports.InboundFilters = inboundfilters.InboundFilters;\n//# sourceMappingURL=index.js.map\n", "import type {\n  CheckInEvelope,\n  CheckInItem,\n  DsnComponents,\n  DynamicSamplingContext,\n  SdkMetadata,\n  SerializedCheckIn,\n} from '@sentry/types';\nimport { createEnvelope, dropUndefinedKeys, dsnToString } from '@sentry/utils';\n\n/**\n * Create envelope from check in item.\n */\nexport function createCheckInEnvelope(\n  checkIn: SerializedCheckIn,\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n  dsn?: DsnComponents,\n): CheckInEvelope {\n  const headers: CheckInEvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = dropUndefinedKeys(dynamicSamplingContext) as DynamicSamplingContext;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope<CheckInEvelope>(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn: SerializedCheckIn): CheckInItem {\n  const checkInHeaders: CheckInItem[0] = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst hubextensions = require('./tracing/hubextensions.js');\nconst idletransaction = require('./tracing/idletransaction.js');\nconst span = require('./tracing/span.js');\nconst transaction = require('./tracing/transaction.js');\nconst utils$1 = require('./tracing/utils.js');\nconst spanstatus = require('./tracing/spanstatus.js');\nconst trace = require('./tracing/trace.js');\nconst dynamicSamplingContext = require('./tracing/dynamicSamplingContext.js');\nconst exports$1 = require('./exports.js');\nconst hub = require('./hub.js');\nconst session = require('./session.js');\nconst sessionflusher = require('./sessionflusher.js');\nconst scope = require('./scope.js');\nconst api = require('./api.js');\nconst baseclient = require('./baseclient.js');\nconst sdk = require('./sdk.js');\nconst base = require('./transports/base.js');\nconst offline = require('./transports/offline.js');\nconst multiplexed = require('./transports/multiplexed.js');\nconst version = require('./version.js');\nconst integration = require('./integration.js');\nconst index = require('./integrations/index.js');\nconst prepareEvent = require('./utils/prepareEvent.js');\nconst checkin = require('./checkin.js');\nconst hasTracingEnabled = require('./utils/hasTracingEnabled.js');\nconst constants = require('./constants.js');\nconst functiontostring = require('./integrations/functiontostring.js');\nconst inboundfilters = require('./integrations/inboundfilters.js');\nconst utils = require('@sentry/utils');\n\n\n\nexports.addTracingExtensions = hubextensions.addTracingExtensions;\nexports.startIdleTransaction = hubextensions.startIdleTransaction;\nexports.IdleTransaction = idletransaction.IdleTransaction;\nexports.TRACING_DEFAULTS = idletransaction.TRACING_DEFAULTS;\nexports.Span = span.Span;\nexports.spanStatusfromHttpCode = span.spanStatusfromHttpCode;\nexports.Transaction = transaction.Transaction;\nexports.getActiveTransaction = utils$1.getActiveTransaction;\nObject.defineProperty(exports, 'SpanStatus', {\n  enumerable: true,\n  get: () => spanstatus.SpanStatus\n});\nexports.trace = trace.trace;\nexports.getDynamicSamplingContextFromClient = dynamicSamplingContext.getDynamicSamplingContextFromClient;\nexports.addBreadcrumb = exports$1.addBreadcrumb;\nexports.captureCheckIn = exports$1.captureCheckIn;\nexports.captureEvent = exports$1.captureEvent;\nexports.captureException = exports$1.captureException;\nexports.captureMessage = exports$1.captureMessage;\nexports.configureScope = exports$1.configureScope;\nexports.setContext = exports$1.setContext;\nexports.setExtra = exports$1.setExtra;\nexports.setExtras = exports$1.setExtras;\nexports.setTag = exports$1.setTag;\nexports.setTags = exports$1.setTags;\nexports.setUser = exports$1.setUser;\nexports.startTransaction = exports$1.startTransaction;\nexports.withScope = exports$1.withScope;\nexports.Hub = hub.Hub;\nexports.ensureHubOnCarrier = hub.ensureHubOnCarrier;\nexports.getCurrentHub = hub.getCurrentHub;\nexports.getHubFromCarrier = hub.getHubFromCarrier;\nexports.getMainCarrier = hub.getMainCarrier;\nexports.makeMain = hub.makeMain;\nexports.runWithAsyncContext = hub.runWithAsyncContext;\nexports.setAsyncContextStrategy = hub.setAsyncContextStrategy;\nexports.setHubOnCarrier = hub.setHubOnCarrier;\nexports.closeSession = session.closeSession;\nexports.makeSession = session.makeSession;\nexports.updateSession = session.updateSession;\nexports.SessionFlusher = sessionflusher.SessionFlusher;\nexports.Scope = scope.Scope;\nexports.addGlobalEventProcessor = scope.addGlobalEventProcessor;\nexports.getEnvelopeEndpointWithUrlEncodedAuth = api.getEnvelopeEndpointWithUrlEncodedAuth;\nexports.getReportDialogEndpoint = api.getReportDialogEndpoint;\nexports.BaseClient = baseclient.BaseClient;\nexports.initAndBind = sdk.initAndBind;\nexports.createTransport = base.createTransport;\nexports.makeOfflineTransport = offline.makeOfflineTransport;\nexports.makeMultiplexedTransport = multiplexed.makeMultiplexedTransport;\nexports.SDK_VERSION = version.SDK_VERSION;\nexports.getIntegrationsToSetup = integration.getIntegrationsToSetup;\nexports.Integrations = index;\nexports.prepareEvent = prepareEvent.prepareEvent;\nexports.createCheckInEnvelope = checkin.createCheckInEnvelope;\nexports.hasTracingEnabled = hasTracingEnabled.hasTracingEnabled;\nexports.DEFAULT_ENVIRONMENT = constants.DEFAULT_ENVIRONMENT;\nexports.FunctionToString = functiontostring.FunctionToString;\nexports.InboundFilters = inboundfilters.InboundFilters;\nexports.extractTraceparentData = utils.extractTraceparentData;\n//# sourceMappingURL=index.js.map\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { _nullishCoalesce } from './_nullishCoalesce';\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport async function _asyncNullishCoalesce(lhs: unknown, rhsFn: () => unknown): Promise<unknown> {\n  return _nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport async function _asyncOptionalChain(ops: unknown[]): Promise<unknown> {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => Promise<unknown>;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { _asyncOptionalChain } from './_asyncOptionalChain';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nexport async function _asyncOptionalChainDelete(ops: unknown[]): Promise<boolean> {\n  const result = (await _asyncOptionalChain(ops)) as Promise<boolean | null>;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result as Promise<boolean>);\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy a property from the given object into `exports`, under the given name.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the property to copy.\n * @param localName The name under which to export the property\n * @param importedName The name under which the property lives in `obj`\n */\nexport function _createNamedExportFrom(obj: GenericObject, localName: string, importedName: string): void {\n  exports[localName] = obj[importedName];\n}\n\n// Sucrase version:\n// function _createNamedExportFrom(obj, localName, importedName) {\n//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericObject } from './types';\n\ndeclare const exports: GenericObject;\n\n/**\n * Copy properties from an object into `exports`.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the properties to copy.\n */\nexport function _createStarExport(obj: GenericObject): void {\n  Object.keys(obj)\n    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))\n    .forEach(key => (exports[key] = obj[key]));\n}\n\n// Sucrase version:\n// function _createStarExport(obj) {\n//   Object.keys(obj)\n//     .filter(key => key !== 'default' && key !== '__esModule')\n//     .forEach(key => {\n//       if (exports.hasOwnProperty(key)) {\n//         return;\n//       }\n//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });\n//     });\n// }\n", "// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Unwraps a module if it has been wrapped in an object under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns The full module, unwrapped if necessary.\n */\nexport function _interopDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? (requireResult.default as RequireResult) : requireResult;\n}\n\n// Rollup version:\n// function _interopDefault(e) {\n//   return e && e.__esModule ? e['default'] : e;\n// }\n", "// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopNamespace(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)\n// function _interopNamespace(e) {\n//   if (e && e.__esModule) return e;\n//   var n = Object.create(null);\n//   if (e) {\n//     for (var k in e) {\n//       n[k] = e[k];\n//     }\n//   }\n//   n[\"default\"] = e;\n//   return n;\n// }\n", "// https://github.com/rollup/rollup/tree/c2cda424e69686671ba010d628c0f70c43a563f8\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wrap a module in an object, as the value under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns An object containing the key-value pair (`default`, `requireResult`)\n */\nexport function _interopNamespaceDefaultOnly(requireResult: RequireResult): RequireResult {\n  return {\n    __proto__: null,\n    default: requireResult,\n  };\n}\n\n// Rollup version\n// function _interopNamespaceDefaultOnly(e) {\n//   return {\n//     __proto__: null,\n//     'default': e\n//   };\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`\n */\nexport function _interopRequireDefault(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireDefault(obj) {\n//   return obj && obj.__esModule ? obj : { default: obj };\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { RequireResult } from './types';\n\n/**\n * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nexport function _interopRequireWildcard(requireResult: RequireResult): RequireResult {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireWildcard(obj) {\n//   if (obj && obj.__esModule) {\n//     return obj;\n//   } else {\n//     var newObj = {};\n//     if (obj != null) {\n//       for (var key in obj) {\n//         if (Object.prototype.hasOwnProperty.call(obj, key)) {\n//           newObj[key] = obj[key];\n//         }\n//       }\n//     }\n//     newObj.default = obj;\n//     return newObj;\n//   }\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n", "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { _optionalChain } from './_optionalChain';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nexport function _optionalChainDelete(ops: unknown[]): boolean {\n  const result = _optionalChain(ops) as boolean | null;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst _asyncNullishCoalesce = require('./_asyncNullishCoalesce.js');\nconst _asyncOptionalChain = require('./_asyncOptionalChain.js');\nconst _asyncOptionalChainDelete = require('./_asyncOptionalChainDelete.js');\nconst _createNamedExportFrom = require('./_createNamedExportFrom.js');\nconst _createStarExport = require('./_createStarExport.js');\nconst _interopDefault$1 = require('./_interopDefault.js');\nconst _interopNamespace$1 = require('./_interopNamespace.js');\nconst _interopNamespaceDefaultOnly$1 = require('./_interopNamespaceDefaultOnly.js');\nconst _interopRequireDefault = require('./_interopRequireDefault.js');\nconst _interopRequireWildcard = require('./_interopRequireWildcard.js');\nconst _nullishCoalesce = require('./_nullishCoalesce.js');\nconst _optionalChain = require('./_optionalChain.js');\nconst _optionalChainDelete = require('./_optionalChainDelete.js');\n\n\n\nexports._asyncNullishCoalesce = _asyncNullishCoalesce._asyncNullishCoalesce;\nexports._asyncOptionalChain = _asyncOptionalChain._asyncOptionalChain;\nexports._asyncOptionalChainDelete = _asyncOptionalChainDelete._asyncOptionalChainDelete;\nexports._createNamedExportFrom = _createNamedExportFrom._createNamedExportFrom;\nexports._createStarExport = _createStarExport._createStarExport;\nexports._interopDefault = _interopDefault$1._interopDefault;\nexports._interopNamespace = _interopNamespace$1._interopNamespace;\nexports._interopNamespaceDefaultOnly = _interopNamespaceDefaultOnly$1._interopNamespaceDefaultOnly;\nexports._interopRequireDefault = _interopRequireDefault._interopRequireDefault;\nexports._interopRequireWildcard = _interopRequireWildcard._interopRequireWildcard;\nexports._nullishCoalesce = _nullishCoalesce._nullishCoalesce;\nexports._optionalChain = _optionalChain._optionalChain;\nexports._optionalChainDelete = _optionalChainDelete._optionalChainDelete;\n//# sourceMappingURL=index.js.map\n", "import type { Hub } from '@sentry/types';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nexport function shouldDisableAutoInstrumentation(getCurrentHub: () => Hub): boolean {\n  const clientOptions = getCurrentHub().getClient()?.getOptions();\n  const instrumenter = clientOptions?.instrumenter || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n", "/* eslint-disable max-lines */\nimport type { Hub, Integration, PolymorphicRequest, Transaction } from '@sentry/types';\nimport {\n  extractPathForTransaction,\n  getNumberOfUrlSegments,\n  isRegExp,\n  logger,\n  stripUrlQueryAndFragment,\n} from '@sentry/utils';\n\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype Method =\n  | 'all'\n  | 'get'\n  | 'post'\n  | 'put'\n  | 'delete'\n  | 'patch'\n  | 'options'\n  | 'head'\n  | 'checkout'\n  | 'copy'\n  | 'lock'\n  | 'merge'\n  | 'mkactivity'\n  | 'mkcol'\n  | 'move'\n  | 'm-search'\n  | 'notify'\n  | 'purge'\n  | 'report'\n  | 'search'\n  | 'subscribe'\n  | 'trace'\n  | 'unlock'\n  | 'unsubscribe'\n  | 'use';\n\ntype Router = {\n  [method in Method]: (...args: any) => any; // eslint-disable-line @typescript-eslint/no-explicit-any\n};\n\n/* Extend the PolymorphicRequest type with a patched parameter to build a reconstructed route */\ntype PatchedRequest = PolymorphicRequest & { _reconstructedRoute?: string; _hasParameters?: boolean };\n\n/* Types used for patching the express router prototype */\ntype ExpressRouter = Router & {\n  _router?: ExpressRouter;\n  stack?: Layer[];\n  lazyrouter?: () => void;\n  settings?: unknown;\n  process_params: (\n    layer: Layer,\n    called: unknown,\n    req: PatchedRequest,\n    res: ExpressResponse,\n    done: () => void,\n  ) => unknown;\n};\n\ntype Layer = {\n  match: (path: string) => boolean;\n  handle_request: (req: PatchedRequest, res: ExpressResponse, next: () => void) => void;\n  route?: { path: RouteType | RouteType[] };\n  path?: string;\n};\n\ntype RouteType = string | RegExp;\n\ninterface ExpressResponse {\n  once(name: string, callback: () => void): void;\n}\n\n/**\n * Internal helper for `__sentry_transaction`\n * @hidden\n */\ninterface SentryTracingResponse {\n  __sentry_transaction?: Transaction;\n}\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nexport class Express implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Express';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Express.id;\n\n  /**\n   * Express App instance\n   */\n  private readonly _router?: Router;\n  private readonly _methods?: Method[];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { app?: Router; router?: Router; methods?: Method[] } = {}) {\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: unknown, getCurrentHub: () => Hub): void {\n    if (!this._router) {\n      __DEBUG_BUILD__ && logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router as ExpressRouter);\n  }\n}\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn: Function, method: Method): (...args: any[]) => void {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function (this: NodeJS.Global, req: unknown, res: ExpressResponse & SentryTracingResponse): void {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n        this: NodeJS.Global,\n        req: unknown,\n        res: ExpressResponse & SentryTracingResponse,\n        next: () => void,\n      ): void {\n        const transaction = res.__sentry_transaction;\n        const span = transaction?.startChild({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        });\n        fn.call(this, req, res, function (this: NodeJS.Global, ...args: unknown[]): void {\n          span?.finish();\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n        this: NodeJS.Global,\n        err: Error,\n        req: Request,\n        res: Response & SentryTracingResponse,\n        next: () => void,\n      ): void {\n        const transaction = res.__sentry_transaction;\n        const span = transaction?.startChild({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        });\n        fn.call(this, err, req, res, function (this: NodeJS.Global, ...args: unknown[]): void {\n          span?.finish();\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args: unknown[], method: Method): unknown[] {\n  return args.map((arg: unknown) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a: unknown) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router: Router, method: Method): Router {\n  const originalCallback = router[method];\n\n  router[method] = function (...args: unknown[]): void {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router: Router, methods: Method[] = []): void {\n  methods.forEach((method: Method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter: ExpressRouter): void {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    __DEBUG_BUILD__ && logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    __DEBUG_BUILD__ && logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) as ExpressRouter;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer: Layer,\n    called: unknown,\n    req: PatchedRequest,\n    res: ExpressResponse & SentryTracingResponse,\n    done: () => unknown,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments }: LayerRoutePathInfo = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    const partialRoute = layerRoutePath || layer.path || '';\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = getNumberOfUrlSegments(req.originalUrl || '') + numExtraSegments;\n    const routeLength = getNumberOfUrlSegments(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl ? stripUrlQueryAndFragment(req.originalUrl) : req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      if (transaction && transaction.metadata.source !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        transaction.setName(...extractPathForTransaction(req, { path: true, method: true, customRoute: finalRoute }));\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\ntype LayerRoutePathInfo = {\n  layerRoutePath?: string;\n  isRegex: boolean;\n  isArray: boolean;\n  numExtraSegments: number;\n};\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer: Layer): LayerRoutePathInfo {\n  const lrp = layer.route?.path;\n\n  const isRegex = isRegExp(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp as RouteType[]) - getNumberOfUrlSegments(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray: RouteType[]): number {\n  return routesArray.reduce((accNumSegments: number, currentRoute: RouteType) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + getNumberOfUrlSegments(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray: boolean, lrp?: RouteType | RouteType[]): string | undefined {\n  if (isArray) {\n    return (lrp as RouteType[]).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n", "import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ninterface PgClient {\n  prototype: {\n    query: () => void | Promise<unknown>;\n  };\n}\n\ninterface PgOptions {\n  usePgNative?: boolean;\n}\n\ntype PGModule = { Client: PgClient; native: { Client: PgClient } };\n\n/** Tracing integration for node-postgres package */\nexport class Postgres implements LazyLoadedIntegration<PGModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Postgres';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Postgres.id;\n\n  private _usePgNative: boolean;\n\n  private _module?: PGModule;\n\n  public constructor(options: PgOptions = {}) {\n    this._usePgNative = !!options.usePgNative;\n  }\n\n  /** @inheritdoc */\n  public loadDependency(): PGModule | undefined {\n    return (this._module = this._module || loadModule('pg'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      __DEBUG_BUILD__ && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !pkg.native?.Client) {\n      __DEBUG_BUILD__ && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    const { Client } = this._usePgNative ? pkg.native : pkg;\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, config: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof config === 'string' ? config : (config as { text: string }).text,\n          op: 'db',\n          data: {\n            'db.system': 'postgresql',\n          },\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err: Error, result: unknown) {\n            span?.finish();\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err: Error, result: unknown) {\n            span?.finish();\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.finish();\n            return res;\n          });\n        }\n\n        span?.finish();\n        return rv;\n      };\n    });\n  }\n}\n", "import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { fill, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ninterface MysqlConnection {\n  createQuery: () => void;\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements LazyLoadedIntegration<MysqlConnection> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mysql.id;\n\n  private _module?: MysqlConnection;\n\n  /** @inheritdoc */\n  public loadDependency(): MysqlConnection | undefined {\n    return (this._module = this._module || loadModule('mysql/lib/Connection.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      __DEBUG_BUILD__ && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig: () => void) {\n      return function (this: unknown, options: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: 'db',\n          data: {\n            'db.system': 'mysql',\n          },\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}\n", "import type { Hub } from '@sentry/core';\nimport type { EventProcessor, SpanContext } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\ntype Operation = (typeof OPERATIONS)[number];\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] as const;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES: {\n  [op in Operation]?: string[];\n} = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\ninterface MongoCollection {\n  collectionName: string;\n  dbName: string;\n  namespace: string;\n  prototype: {\n    [operation in Operation]: (...args: unknown[]) => unknown;\n  };\n}\n\ninterface MongoOptions {\n  operations?: Operation[];\n  describeOperations?: boolean | Operation[];\n  useMongoose?: boolean;\n}\n\ninterface MongoCursor {\n  once(event: 'close', listener: () => void): void;\n}\n\nfunction isCursor(maybeCursor: MongoCursor): maybeCursor is MongoCursor {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\ntype MongoModule = { Collection: MongoCollection };\n\n/** Tracing integration for mongo package */\nexport class Mongo implements LazyLoadedIntegration<MongoModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mongo';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mongo.id;\n\n  private _operations: Operation[];\n  private _describeOperations?: boolean | Operation[];\n  private _useMongoose: boolean;\n\n  private _module?: MongoModule;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: MongoOptions = {}) {\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS as unknown as Operation[]);\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /** @inheritdoc */\n  public loadDependency(): MongoModule | undefined {\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    return (this._module = this._module || loadModule(moduleName));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n      __DEBUG_BUILD__ && logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n  private _instrumentOperations(collection: MongoCollection, operations: Operation[], getCurrentHub: () => Hub): void {\n    operations.forEach((operation: Operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n  private _patchOperation(collection: MongoCollection, operation: Operation, getCurrentHub: () => Hub): void {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    fill(collection.prototype, operation, function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, ...args: unknown[]) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = parentSpan?.startChild(getSpanContext(this, operation, args));\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if (isThenable(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res: unknown) => {\n              span?.finish();\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor as MongoCursor;\n\n            try {\n              cursor.once('close', () => {\n                span?.finish();\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              span?.finish();\n            }\n\n            return cursor;\n          } else {\n            span?.finish();\n            return maybePromiseOrCursor;\n          }\n        }\n\n        const span = parentSpan?.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n\n        return orig.call(this, ...args.slice(0, -1), function (err: Error, result: unknown) {\n          span?.finish();\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n  private _getSpanContextFromOperationArguments(\n    collection: MongoCollection,\n    operation: Operation,\n    args: unknown[],\n  ): SpanContext {\n    const data: { [key: string]: string } = {\n      collectionName: collection.collectionName,\n      dbName: collection.dbName,\n      namespace: collection.namespace,\n      'db.system': 'mongodb',\n    };\n    const spanContext: SpanContext = {\n      op: 'db',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args as { name?: string }[];\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[signature[i]] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}\n", "import { getCurrentHub, trace } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { addNonEnumerableProperty, logger } from '@sentry/utils';\n\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype PrismaAction =\n  | 'findUnique'\n  | 'findMany'\n  | 'findFirst'\n  | 'create'\n  | 'createMany'\n  | 'update'\n  | 'updateMany'\n  | 'upsert'\n  | 'delete'\n  | 'deleteMany'\n  | 'executeRaw'\n  | 'queryRaw'\n  | 'aggregate'\n  | 'count'\n  | 'runCommandRaw';\n\ninterface PrismaMiddlewareParams {\n  model?: unknown;\n  action: PrismaAction;\n  args: unknown;\n  dataPath: string[];\n  runInTransaction: boolean;\n}\n\ntype PrismaMiddleware<T = unknown> = (\n  params: PrismaMiddlewareParams,\n  next: (params: PrismaMiddlewareParams) => Promise<T>,\n) => Promise<T>;\n\ninterface PrismaClient {\n  _sentryInstrumented?: boolean;\n  $use: (cb: PrismaMiddleware) => void;\n}\n\nfunction isValidPrismaClient(possibleClient: unknown): possibleClient is PrismaClient {\n  return !!possibleClient && !!(possibleClient as PrismaClient)['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nexport class Prisma implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Prisma';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Prisma.id;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { client?: unknown } = {}) {\n    // We instrument the PrismaClient inside the constructor and not inside `setupOnce` because in some cases of server-side\n    // bundling (Next.js) multiple Prisma clients can be instantiated, even though users don't intend to. When instrumenting\n    // in setupOnce we can only ever instrument one client.\n    // https://github.com/getsentry/sentry-javascript/issues/7216#issuecomment-1602375012\n    // In the future we might explore providing a dedicated PrismaClient middleware instead of this hack.\n    if (isValidPrismaClient(options.client) && !options.client._sentryInstrumented) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      addNonEnumerableProperty(options.client as any, '_sentryInstrumented', true);\n\n      options.client.$use((params, next: (params: PrismaMiddlewareParams) => Promise<unknown>) => {\n        if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n          return next(params);\n        }\n\n        const action = params.action;\n        const model = params.model;\n        return trace(\n          { name: model ? `${model} ${action}` : action, op: 'db.sql.prisma', data: { 'db.system': 'prisma' } },\n          () => next(params),\n        );\n      });\n    } else {\n      __DEBUG_BUILD__ &&\n        logger.warn(\n          `Unsupported Prisma client provided to PrismaIntegration. Provided client: ${JSON.stringify(options.client)}`,\n        );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // Noop - here for backwards compatibility\n  }\n}\n", "import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype GraphQLModule = {\n  [method: string]: (...args: unknown[]) => unknown;\n};\n\n/** Tracing integration for graphql package */\nexport class GraphQL implements LazyLoadedIntegration<GraphQLModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GraphQL';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GraphQL.id;\n\n  private _module?: GraphQLModule;\n\n  /** @inheritdoc */\n  public loadDependency(): GraphQLModule | undefined {\n    return (this._module = this._module || loadModule('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      __DEBUG_BUILD__ && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, ...args: unknown[]) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n\n        const span = parentSpan?.startChild({\n          description: 'execute',\n          op: 'graphql.execute',\n        });\n\n        scope?.setSpan(span);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.finish();\n            scope?.setSpan(parentSpan);\n\n            return res;\n          });\n        }\n\n        span?.finish();\n        scope?.setSpan(parentSpan);\n        return rv;\n      };\n    });\n  }\n}\n", "import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { arrayify, fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ninterface ApolloOptions {\n  useNestjs?: boolean;\n}\n\ntype ApolloResolverGroup = {\n  [key: string]: () => unknown;\n};\n\ntype ApolloModelResolvers = {\n  [key: string]: ApolloResolverGroup;\n};\n\ntype GraphQLModule = {\n  GraphQLFactory: {\n    prototype: {\n      create: (resolvers: ApolloModelResolvers[]) => unknown;\n    };\n  };\n};\n\ntype ApolloModule = {\n  ApolloServerBase: {\n    prototype: {\n      constructSchema: (config: unknown) => unknown;\n    };\n  };\n};\n\n/** Tracing integration for Apollo */\nexport class Apollo implements LazyLoadedIntegration<GraphQLModule & ApolloModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Apollo';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Apollo.id;\n\n  private readonly _useNest: boolean;\n\n  private _module?: GraphQLModule & ApolloModule;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    options: ApolloOptions = {\n      useNestjs: false,\n    },\n  ) {\n    this._useNest = !!options.useNestjs;\n  }\n\n  /** @inheritdoc */\n  public loadDependency(): (GraphQLModule & ApolloModule) | undefined {\n    if (this._useNest) {\n      this._module = this._module || loadModule('@nestjs/graphql');\n    } else {\n      this._module = this._module || loadModule('apollo-server-core');\n    }\n\n    return this._module;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        __DEBUG_BUILD__ && logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      fill(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig: (this: unknown, ...args: unknown[]) => unknown) {\n          return function (\n            this: { resolversExplorerService: { explore: () => ApolloModelResolvers[] } },\n            ...args: unknown[]\n          ) {\n            fill(this.resolversExplorerService, 'explore', function (orig: () => ApolloModelResolvers[]) {\n              return function (this: unknown) {\n                const resolvers = arrayify(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        __DEBUG_BUILD__ && logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      fill(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig: (config: unknown) => unknown) {\n        return function (this: {\n          config: { resolvers?: ApolloModelResolvers[]; schema?: unknown; modules?: unknown };\n        }) {\n          if (!this.config.resolvers) {\n            if (__DEBUG_BUILD__) {\n              if (this.config.schema) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                logger.warn();\n              } else if (this.config.modules) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = arrayify(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}\n\nfunction instrumentResolvers(resolvers: ApolloModelResolvers[], getCurrentHub: () => Hub): ApolloModelResolvers[] {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model: ApolloModelResolvers,\n  resolverGroupName: string,\n  resolverName: string,\n  getCurrentHub: () => Hub,\n): void {\n  fill(model[resolverGroupName], resolverName, function (orig: () => unknown | Promise<unknown>) {\n    return function (this: unknown, ...args: unknown[]) {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = scope?.getSpan();\n      const span = parentSpan?.startChild({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n      });\n\n      const rv = orig.call(this, ...args);\n\n      if (isThenable(rv)) {\n        return rv.then((res: unknown) => {\n          span?.finish();\n          return res;\n        });\n      }\n\n      span?.finish();\n\n      return rv;\n    };\n  });\n}\n", "import type { Integration, IntegrationClass } from '@sentry/types';\nimport { dynamicRequire } from '@sentry/utils';\n\nexport interface LazyLoadedIntegration<T = object> extends Integration {\n  /**\n   * Loads the integration's dependency and caches it so it doesn't have to be loaded again.\n   *\n   * If this returns undefined, the dependency could not be loaded.\n   */\n  loadDependency(): T | undefined;\n}\n\nexport const lazyLoadedNodePerformanceMonitoringIntegrations: (() => LazyLoadedIntegration)[] = [\n  () => {\n    const integration = dynamicRequire(module, './apollo') as {\n      Apollo: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Apollo();\n  },\n  () => {\n    const integration = dynamicRequire(module, './apollo') as {\n      Apollo: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Apollo({ useNestjs: true });\n  },\n  () => {\n    const integration = dynamicRequire(module, './graphql') as {\n      GraphQL: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.GraphQL();\n  },\n  () => {\n    const integration = dynamicRequire(module, './mongo') as {\n      Mongo: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Mongo();\n  },\n  () => {\n    const integration = dynamicRequire(module, './mongo') as {\n      Mongo: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Mongo({ mongoose: true });\n  },\n  () => {\n    const integration = dynamicRequire(module, './mysql') as {\n      Mysql: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Mysql();\n  },\n  () => {\n    const integration = dynamicRequire(module, './postgres') as {\n      Postgres: IntegrationClass<LazyLoadedIntegration>;\n    };\n    return new integration.Postgres();\n  },\n];\n", "import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n", "import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        __DEBUG_BUILD__ &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    __DEBUG_BUILD__ &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n", "/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n", "/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page\u2014including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (onReport: ReportCallback): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): number => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n", "/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n", "import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n", "/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport type { Measurements } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, logger } from '@sentry/utils';\n\nimport { WINDOW } from '../types';\nimport { onCLS } from '../web-vitals/getCLS';\nimport { onFID } from '../web-vitals/getFID';\nimport { onLCP } from '../web-vitals/getLCP';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport { observe } from '../web-vitals/lib/observe';\nimport type { NavigatorDeviceMemory, NavigatorNetworkInformation } from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-ignore we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-ignore we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return (): void => {\n      if (clsCallback) {\n        clsCallback();\n      }\n      if (lcpCallback) {\n        lcpCallback();\n      }\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  const entryHandler = (entries: PerformanceEntry[]): void => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  };\n\n  observe('longtask', entryHandler);\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  const entryHandler = (entries: PerformanceEventTiming[]): void => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  };\n\n  observe('event', entryHandler, { durationThreshold: 0 });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): ReturnType<typeof onCLS> {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  return onCLS(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): ReturnType<typeof onLCP> {\n  return onLCP(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): void {\n  onFID(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  __DEBUG_BUILD__ && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp: number | undefined;\n  let requestStartTimestamp: number | undefined;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          __DEBUG_BUILD__ && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          __DEBUG_BUILD__ && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name as string).replace(WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      __DEBUG_BUILD__ && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      __DEBUG_BUILD__ &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceName: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  if ('transferSize' in entry) {\n    data['http.response_transfer_size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['http.response_content_length'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['http.decoded_response_content_length'] = entry.decodedBodySize;\n  }\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    __DEBUG_BUILD__ && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n", "/* eslint-disable max-lines */\nimport { getCurrentHub, getDynamicSamplingContextFromClient, hasTracingEnabled } from '@sentry/core';\nimport type { Client, Scope, Span } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  BAGGAGE_HEADER_NAME,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  isInstanceOf,\n  SENTRY_XHR_DATA_KEY,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * Allow experiments for the request instrumentation.\n   */\n  _experiments: Partial<{\n    enableHTTPTimings: boolean;\n  }>;\n\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * Default: ['localhost', /^\\//] {@see DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\n/** Data returned from fetch callback */\nexport interface FetchData {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: any[]; // the arguments passed to the fetch call itself\n  fetchData?: {\n    method: string;\n    url: string;\n    // span_id\n    __span?: string;\n  };\n\n  // TODO Should this be unknown instead? If we vendor types, make it a Response\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  response?: any;\n  error?: unknown;\n\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\n/** Data returned from XHR request */\nexport interface XHRData {\n  xhr?: {\n    [SENTRY_XHR_DATA_KEY]?: {\n      method: string;\n      url: string;\n      status_code: number;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: Record<string, any>;\n    };\n    __sentry_xhr_span_id__?: string;\n    setRequestHeader?: (key: string, val: string) => void;\n    getRequestHeader?: (key: string) => string;\n    __sentry_own_request__?: boolean;\n  };\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string | null | undefined;\n    };\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  _experiments: {},\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceFetch, traceXHR, tracePropagationTargets, tracingOrigins, shouldCreateSpanForRequest, _experiments } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData: FetchData) => {\n      const createdSpan = fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (_experiments?.enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData: XHRData) => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (_experiments?.enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const url = span.data.url;\n  const observer = new PerformanceObserver(list => {\n    const entries = list.getEntries() as PerformanceResourceTiming[];\n    entries.forEach(entry => {\n      if ((entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest') && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setData(...data));\n        observer.disconnect();\n      }\n    });\n  });\n  observer.observe({\n    entryTypes: ['resource'],\n  });\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const version = resourceTiming.nextHopProtocol.split('/')[1] || 'none';\n\n  const timingSpanData: [string, string | number][] = [];\n  if (version) {\n    timingSpanData.push(['network.protocol.version', version]);\n  }\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.connect_start', (browserPerformanceTimeOrigin + resourceTiming.connectStart) / 1000],\n    ['http.request.request_start', (browserPerformanceTimeOrigin + resourceTiming.requestStart) / 1000],\n    ['http.request.response_start', (browserPerformanceTimeOrigin + resourceTiming.responseStart) / 1000],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function fetchCallback(\n  handlerData: FetchData,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n\n        const contentLength: string =\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n        const contentLengthNum = parseInt(contentLength);\n        if (contentLengthNum > 0) {\n          span.setData('http.response_content_length', contentLengthNum);\n        }\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  const parentSpan = scope.getSpan();\n\n  const { method, url } = handlerData.fetchData;\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n          },\n          description: `${method} ${url}`,\n          op: 'http.client',\n        })\n      : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nexport function addTracingHeadersToFetchRequest(\n  request: string | unknown, // unknown is actually type Request but we can't export DOM types from this package,\n  client: Client,\n  scope: Scope,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | PolymorphicRequestHeaders;\n  },\n): PolymorphicRequestHeaders | undefined {\n  const span = scope.getSpan();\n\n  const transaction = span && span.transaction;\n\n  const { traceId, sampled, dsc } = scope.getPropagationContext();\n\n  const sentryTraceHeader = span ? span.toTraceparent() : generateSentryTraceHeader(traceId, undefined, sampled);\n  const dynamicSamplingContext = transaction\n    ? transaction.getDynamicSamplingContext()\n    : dsc\n    ? dsc\n    : getDynamicSamplingContextFromClient(traceId, client, scope);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n  const headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nexport function xhrCallback(\n  handlerData: XHRData,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || (xhr && xhr.__sentry_own_request__) || !xhr || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(sentryXhrData.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            ...sentryXhrData.data,\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            url: sentryXhrData.url,\n          },\n          description: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          op: 'http.client',\n        })\n      : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url)) {\n    if (span) {\n      const transaction = span && span.transaction;\n      const dynamicSamplingContext = transaction && transaction.getDynamicSamplingContext();\n      const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, span.toTraceparent(), sentryBaggageHeader);\n    } else {\n      const client = hub.getClient();\n      const { traceId, sampled, dsc } = scope.getPropagationContext();\n      const sentryTraceHeader = generateSentryTraceHeader(traceId, undefined, sampled);\n      const dynamicSamplingContext =\n        dsc || (client ? getDynamicSamplingContextFromClient(traceId, client, scope) : undefined);\n      const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n    }\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr: NonNullable<XHRData['xhr']>,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n", "import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    __DEBUG_BUILD__ && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }: { to: string; from?: string }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          __DEBUG_BUILD__ && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n", "/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { addTracingExtensions, getActiveTransaction, startIdleTransaction, TRACING_DEFAULTS } from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getDomElement, logger, tracingContextFromHeaders } from '@sentry/utils';\n\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport {\n  addPerformanceEntries,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    enableHTTPTimings: boolean;\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = BROWSER_TRACING_INTEGRATION_ID;\n\n  private _getCurrentHub?: () => Hub;\n\n  private _latestRouteName?: string;\n  private _latestRouteSource?: TransactionSource;\n\n  private _collectWebVitals: () => void;\n\n  private _hasSetTracePropagationTargets: boolean = false;\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    addTracingExtensions();\n\n    if (__DEBUG_BUILD__) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (__DEBUG_BUILD__ && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      _experiments: {\n        enableHTTPTimings: _experiments.enableHTTPTimings,\n      },\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      __DEBUG_BUILD__ &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n    const baggage = isPageloadTransaction ? getMetaContent('baggage') : '';\n    const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n      sentryTrace,\n      baggage,\n    );\n\n    const expandedContext: TransactionContext = {\n      ...context,\n      ...traceparentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      __DEBUG_BUILD__ &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    __DEBUG_BUILD__ && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n\n    const scope = hub.getScope();\n\n    // If it's a pageload and there is a meta tag set\n    // use the traceparentData as the propagation context\n    if (isPageloadTransaction && traceparentData) {\n      scope.setPropagationContext(propagationContext);\n    } else {\n      // Navigation transactions should set a new propagation context based on the\n      // created idle transaction.\n      scope.setPropagationContext({\n        traceId: idleTransaction.traceId,\n        spanId: idleTransaction.spanId,\n        parentSpanId: idleTransaction.parentSpanId,\n        sampled: !!idleTransaction.sampled,\n      });\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        __DEBUG_BUILD__ &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        __DEBUG_BUILD__ && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        __DEBUG_BUILD__ &&\n          logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n", "import { addTracingExtensions, getMainCarrier } from '@sentry/core';\nimport type { Integration, IntegrationClass } from '@sentry/types';\nimport { dynamicRequire, isNodeEnv, loadModule } from '@sentry/utils';\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping: Record<string, () => Integration> = {\n    mongodb() {\n      const integration = dynamicRequire(module, './node/integrations/mongo') as {\n        Mongo: IntegrationClass<Integration>;\n      };\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = dynamicRequire(module, './node/integrations/mongo') as {\n        Mongo: IntegrationClass<Integration>;\n      };\n      return new integration.Mongo();\n    },\n    mysql() {\n      const integration = dynamicRequire(module, './node/integrations/mysql') as {\n        Mysql: IntegrationClass<Integration>;\n      };\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = dynamicRequire(module, './node/integrations/postgres') as {\n        Postgres: IntegrationClass<Integration>;\n      };\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) as Integration[];\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods(): void {\n  addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n}\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst core = require('@sentry/core');\nconst utils = require('@sentry/utils');\nconst express = require('./node/integrations/express.js');\nconst postgres = require('./node/integrations/postgres.js');\nconst mysql = require('./node/integrations/mysql.js');\nconst mongo = require('./node/integrations/mongo.js');\nconst prisma = require('./node/integrations/prisma.js');\nconst graphql = require('./node/integrations/graphql.js');\nconst apollo = require('./node/integrations/apollo.js');\nconst lazy = require('./node/integrations/lazy.js');\nconst browsertracing = require('./browser/browsertracing.js');\nconst request = require('./browser/request.js');\nconst extensions = require('./extensions.js');\n\n\n\nexports.IdleTransaction = core.IdleTransaction;\nexports.Span = core.Span;\nexports.SpanStatus = core.SpanStatus;\nexports.Transaction = core.Transaction;\nexports.extractTraceparentData = core.extractTraceparentData;\nexports.getActiveTransaction = core.getActiveTransaction;\nexports.hasTracingEnabled = core.hasTracingEnabled;\nexports.spanStatusfromHttpCode = core.spanStatusfromHttpCode;\nexports.startIdleTransaction = core.startIdleTransaction;\nexports.TRACEPARENT_REGEXP = utils.TRACEPARENT_REGEXP;\nexports.stripUrlQueryAndFragment = utils.stripUrlQueryAndFragment;\nexports.Express = express.Express;\nexports.Postgres = postgres.Postgres;\nexports.Mysql = mysql.Mysql;\nexports.Mongo = mongo.Mongo;\nexports.Prisma = prisma.Prisma;\nexports.GraphQL = graphql.GraphQL;\nexports.Apollo = apollo.Apollo;\nexports.lazyLoadedNodePerformanceMonitoringIntegrations = lazy.lazyLoadedNodePerformanceMonitoringIntegrations;\nexports.BROWSER_TRACING_INTEGRATION_ID = browsertracing.BROWSER_TRACING_INTEGRATION_ID;\nexports.BrowserTracing = browsertracing.BrowserTracing;\nexports.addTracingHeadersToFetchRequest = request.addTracingHeadersToFetchRequest;\nexports.defaultRequestInstrumentationOptions = request.defaultRequestInstrumentationOptions;\nexports.instrumentOutgoingRequests = request.instrumentOutgoingRequests;\nexports.addExtensionMethods = extensions.addExtensionMethods;\n//# sourceMappingURL=index.js.map\n", "import type { LazyLoadedIntegration } from '@sentry-internal/tracing';\nimport { lazyLoadedNodePerformanceMonitoringIntegrations } from '@sentry-internal/tracing';\nimport type { Integration } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/**\n * Automatically detects and returns integrations that will work with your dependencies.\n */\nexport function autoDiscoverNodePerformanceMonitoringIntegrations(): Integration[] {\n  const loadedIntegrations = lazyLoadedNodePerformanceMonitoringIntegrations\n    .map(tryLoad => {\n      try {\n        return tryLoad();\n      } catch (_) {\n        return undefined;\n      }\n    })\n    .filter(integration => !!integration) as LazyLoadedIntegration[];\n\n  if (loadedIntegrations.length === 0) {\n    logger.warn('Performance monitoring integrations could not be automatically loaded.');\n  }\n\n  // Only return integrations where their dependencies loaded successfully.\n  return loadedIntegrations.filter(integration => !!integration.loadDependency());\n}\n", "import { getCurrentHub } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  Mechanism,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isError,\n  isPlainObject,\n  normalizeToSize,\n} from '@sentry/utils';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nexport function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nexport function exceptionFromError(stackParser: StackParser, error: Error): Exception {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromUnknownInput(stackParser: StackParser, exception: unknown, hint?: EventHint): Event {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let ex: unknown = exception;\n  const providedMechanism: Mechanism | undefined =\n    hint && hint.data && (hint.data as { mechanism: Mechanism }).mechanism;\n  const mechanism: Mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      const message = `Non-Error exception captured with keys: ${extractExceptionKeysForMessage(exception)}`;\n\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));\n      });\n\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex as Error).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception as string);\n      (ex as Error).message = exception as string;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex as Error)],\n    },\n  };\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n", "import type { Scope } from '@sentry/core';\nimport {\n  addTracingExtensions,\n  BaseClient,\n  createCheckInEnvelope,\n  getDynamicSamplingContextFromClient,\n  SDK_VERSION,\n  SessionFlusher,\n} from '@sentry/core';\nimport type {\n  CheckIn,\n  DynamicSamplingContext,\n  Event,\n  EventHint,\n  MonitorConfig,\n  SerializedCheckIn,\n  Severity,\n  SeverityLevel,\n  TraceContext,\n} from '@sentry/types';\nimport { logger, resolvedSyncPromise, uuid4 } from '@sentry/utils';\nimport * as os from 'os';\nimport { TextEncoder } from 'util';\n\nimport { eventFromMessage, eventFromUnknownInput } from './eventbuilder';\nimport type { NodeClientOptions } from './types';\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class NodeClient extends BaseClient<NodeClientOptions> {\n  protected _sessionFlusher: SessionFlusher | undefined;\n\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: NodeClientOptions) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.node',\n      packages: [\n        {\n          name: 'npm:@sentry/node',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    // The Node client always supports tracing\n    addTracingExtensions();\n\n    super(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const requestSession = scope.getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = scope.getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    this._sessionFlusher?.close();\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n  public initSessionFlusher(): void {\n    const { release, environment } = this._options;\n    if (!release) {\n      __DEBUG_BUILD__ && logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public eventFromException(exception: any, hint?: EventHint): PromiseLike<Event> {\n    return resolvedSyncPromise(eventFromUnknownInput(this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return resolvedSyncPromise(\n      eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   * @returns A string representing the id of the check in.\n   */\n  public captureCheckIn(checkIn: CheckIn, monitorConfig?: MonitorConfig, scope?: Scope): string {\n    const id = checkIn.status !== 'in_progress' && checkIn.checkInId ? checkIn.checkInId : uuid4();\n    if (!this._isEnabled()) {\n      __DEBUG_BUILD__ && logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn: SerializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if (checkIn.status !== 'in_progress') {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = createCheckInEnvelope(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    __DEBUG_BUILD__ && logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n    void this._sendEnvelope(envelope);\n    return id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'node';\n    event.contexts = {\n      ...event.contexts,\n      runtime: event.contexts?.runtime || {\n        name: 'node',\n        version: global.process.version,\n      },\n    };\n    event.server_name =\n      event.server_name || this.getOptions().serverName || global.process.env.SENTRY_NAME || os.hostname();\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n  protected _captureRequestSession(): void {\n    if (!this._sessionFlusher) {\n      __DEBUG_BUILD__ && logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /** Extract trace information from scope */\n  private _getTraceInfoFromScope(\n    scope: Scope | undefined,\n  ): [dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined, traceContext: TraceContext | undefined] {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    const span = scope.getSpan();\n    if (span) {\n      return [span?.transaction?.getDynamicSamplingContext(), span?.getTraceContext()];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext: TraceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [getDynamicSamplingContextFromClient(traceId, this, scope), traceContext];\n  }\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n", "'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", null, null, null, null, null, "import { createTransport } from '@sentry/core';\nimport type {\n  BaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequest,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\n\nimport type { HTTPModule } from './http-module';\n\nexport interface NodeTransportOptions extends BaseTransportOptions {\n  /** Define custom headers */\n  headers?: Record<string, string>;\n  /** Set a proxy that should be used for outbound requests. */\n  proxy?: string;\n  /** HTTPS proxy CA certificates */\n  caCerts?: string | Buffer | Array<string | Buffer>;\n  /** Custom HTTP module. Defaults to the native 'http' and 'https' modules. */\n  httpModule?: HTTPModule;\n  /** Allow overriding connection keepAlive, defaults to false */\n  keepAlive?: boolean;\n}\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body: Uint8Array | string): Readable {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nexport function makeNodeTransport(options: NodeTransportOptions): Transport {\n  let urlSegments: URL;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n    );\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) as http.Agent)\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, options.httpModule ?? nativeHttpModule, agent);\n  return createTransport(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments: URL, proxy: string | undefined): string | undefined {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options: NodeTransportOptions,\n  httpModule: HTTPModule,\n  agent: http.Agent,\n): TransportRequestExecutor {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request: TransportRequest): Promise<TransportMakeRequestResponse> {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers: Record<string, string> = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = res.headers['retry-after'] ?? null;\n          const rateLimitsHeader = res.headers['x-sentry-rate-limits'] ?? null;\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n", "import { parseSemver } from '@sentry/utils';\n\nexport const NODE_VERSION: ReturnType<typeof parseSemver> = parseSemver(process.versions.node);\n", "import type { Carrier, Hub, RunWithAsyncContextOptions } from '@sentry/core';\nimport { ensureHubOnCarrier, getHubFromCarrier, setAsyncContextStrategy, setHubOnCarrier } from '@sentry/core';\nimport * as domain from 'domain';\n\nfunction getActiveDomain<T>(): T | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return (domain as any).active as T | undefined;\n}\n\nfunction getCurrentHub(): Hub | undefined {\n  const activeDomain = getActiveDomain<Carrier>();\n\n  // If there's no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  ensureHubOnCarrier(activeDomain);\n\n  return getHubFromCarrier(activeDomain);\n}\n\nfunction createNewHub(parent: Hub | undefined): Hub {\n  const carrier: Carrier = {};\n  ensureHubOnCarrier(carrier, parent);\n  return getHubFromCarrier(carrier);\n}\n\nfunction runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T {\n  const activeDomain = getActiveDomain<domain.Domain & Carrier>();\n\n  if (activeDomain && options?.reuseExisting) {\n    // We're already in a domain, so we don't need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain.create() as domain.Domain & Carrier;\n\n  const parentHub = activeDomain ? getHubFromCarrier(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  setHubOnCarrier(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nexport function setDomainAsyncContextStrategy(): void {\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n", "import type { Carrier, Hub, RunWithAsyncContextOptions } from '@sentry/core';\nimport { ensureHubOnCarrier, getHubFromCarrier, setAsyncContextStrategy } from '@sentry/core';\nimport * as async_hooks from 'async_hooks';\n\ninterface AsyncLocalStorage<T> {\n  getStore(): T | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  run<R, TArgs extends any[]>(store: T, callback: (...args: TArgs) => R, ...args: TArgs): R;\n}\n\ntype AsyncLocalStorageConstructor = { new <T>(): AsyncLocalStorage<T> };\n// AsyncLocalStorage only exists in async_hook after Node v12.17.0 or v13.10.0\ntype NewerAsyncHooks = typeof async_hooks & { AsyncLocalStorage: AsyncLocalStorageConstructor };\n\n/**\n * Sets the async context strategy to use AsyncLocalStorage which requires Node v12.17.0 or v13.10.0.\n */\nexport function setHooksAsyncContextStrategy(): void {\n  const asyncStorage = new (async_hooks as NewerAsyncHooks).AsyncLocalStorage<Hub>();\n\n  function getCurrentHub(): Hub | undefined {\n    return asyncStorage.getStore();\n  }\n\n  function createNewHub(parent: Hub | undefined): Hub {\n    const carrier: Carrier = {};\n    ensureHubOnCarrier(carrier, parent);\n    return getHubFromCarrier(carrier);\n  }\n\n  function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T {\n    const existingHub = getCurrentHub();\n\n    if (existingHub && options?.reuseExisting) {\n      // We're already in an async context, so we don't need to create a new one\n      // just call the callback with the current hub\n      return callback();\n    }\n\n    const newHub = createNewHub(existingHub);\n\n    return asyncStorage.run(newHub, () => {\n      return callback();\n    });\n  }\n\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n", "import { NODE_VERSION } from '../nodeVersion';\nimport { setDomainAsyncContextStrategy } from './domain';\nimport { setHooksAsyncContextStrategy } from './hooks';\n\n/**\n * Sets the correct async context strategy for Node.js\n *\n * Node.js >= 14 uses AsyncLocalStorage\n * Node.js < 14 uses domains\n */\nexport function setNodeAsyncContextStrategy(): void {\n  if (NODE_VERSION.major && NODE_VERSION.major >= 14) {\n    setHooksAsyncContextStrategy();\n  } else {\n    setDomainAsyncContextStrategy();\n  }\n}\n", "import { getCurrentHub } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { fill, severityLevelFromString } from '@sentry/utils';\nimport * as util from 'util';\n\n/** Console module integration */\nexport class Console implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Console';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Console.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    for (const level of ['debug', 'info', 'warn', 'error', 'log']) {\n      fill(console, level, createConsoleWrapper(level));\n    }\n  }\n}\n\n/**\n * Wrapper function that'll be used for every console level\n */\nfunction createConsoleWrapper(level: string): (originalConsoleMethod: () => void) => void {\n  return function consoleWrapper(originalConsoleMethod: () => void): () => void {\n    const sentryLevel = severityLevelFromString(level);\n\n    /* eslint-disable prefer-rest-params */\n    return function (this: typeof console): void {\n      if (getCurrentHub().getIntegration(Console)) {\n        getCurrentHub().addBreadcrumb(\n          {\n            category: 'console',\n            level: sentryLevel,\n            message: util.format.apply(undefined, arguments),\n          },\n          {\n            input: [...arguments],\n            level,\n          },\n        );\n      }\n\n      originalConsoleMethod.apply(this, arguments);\n    };\n    /* eslint-enable prefer-rest-params */\n  };\n}\n", "/**\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n * recently used items while discarding least recently used items when its limit\n * is reached.\n *\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n * See README.md for details.\n *\n * Illustration of the design:\n *\n *       entry             entry             entry             entry\n *       ______            ______            ______            ______\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\n *      |  A   |          |  B   |          |  C   |          |  D   |\n *      |______| <= older.|______| <= older.|______| <= older.|______|\n *\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n */\n(function(g,f){\n  const e = typeof exports == 'object' ? exports : typeof g == 'object' ? g : {};\n  f(e);\n  if (typeof define == 'function' && define.amd) { define('lru', e); }\n})(this, function(exports) {\n\nconst NEWER = Symbol('newer');\nconst OLDER = Symbol('older');\n\nfunction LRUMap(limit, entries) {\n  if (typeof limit !== 'number') {\n    // called as (entries)\n    entries = limit;\n    limit = 0;\n  }\n\n  this.size = 0;\n  this.limit = limit;\n  this.oldest = this.newest = undefined;\n  this._keymap = new Map();\n\n  if (entries) {\n    this.assign(entries);\n    if (limit < 1) {\n      this.limit = this.size;\n    }\n  }\n}\n\nexports.LRUMap = LRUMap;\n\nfunction Entry(key, value) {\n  this.key = key;\n  this.value = value;\n  this[NEWER] = undefined;\n  this[OLDER] = undefined;\n}\n\n\nLRUMap.prototype._markEntryAsUsed = function(entry) {\n  if (entry === this.newest) {\n    // Already the most recenlty used entry, so no need to update the list\n    return;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry[NEWER]) {\n    if (entry === this.oldest) {\n      this.oldest = entry[NEWER];\n    }\n    entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\n  }\n  if (entry[OLDER]) {\n    entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\n  }\n  entry[NEWER] = undefined; // D --x\n  entry[OLDER] = this.newest; // D. --> E\n  if (this.newest) {\n    this.newest[NEWER] = entry; // E. <-- D\n  }\n  this.newest = entry;\n};\n\nLRUMap.prototype.assign = function(entries) {\n  let entry, limit = this.limit || Number.MAX_VALUE;\n  this._keymap.clear();\n  let it = entries[Symbol.iterator]();\n  for (let itv = it.next(); !itv.done; itv = it.next()) {\n    let e = new Entry(itv.value[0], itv.value[1]);\n    this._keymap.set(e.key, e);\n    if (!entry) {\n      this.oldest = e;\n    } else {\n      entry[NEWER] = e;\n      e[OLDER] = entry;\n    }\n    entry = e;\n    if (limit-- == 0) {\n      throw new Error('overflow');\n    }\n  }\n  this.newest = entry;\n  this.size = this._keymap.size;\n};\n\nLRUMap.prototype.get = function(key) {\n  // First, find our cache entry\n  var entry = this._keymap.get(key);\n  if (!entry) return; // Not cached. Sorry.\n  // As <key> was found in the cache, register it as being requested recently\n  this._markEntryAsUsed(entry);\n  return entry.value;\n};\n\nLRUMap.prototype.set = function(key, value) {\n  var entry = this._keymap.get(key);\n\n  if (entry) {\n    // update existing\n    entry.value = value;\n    this._markEntryAsUsed(entry);\n    return this;\n  }\n\n  // new entry\n  this._keymap.set(key, (entry = new Entry(key, value)));\n\n  if (this.newest) {\n    // link previous tail to the new tail (entry)\n    this.newest[NEWER] = entry;\n    entry[OLDER] = this.newest;\n  } else {\n    // we're first in -- yay\n    this.oldest = entry;\n  }\n\n  // add new entry to the end of the linked list -- it's now the freshest entry.\n  this.newest = entry;\n  ++this.size;\n  if (this.size > this.limit) {\n    // we hit the limit -- remove the head\n    this.shift();\n  }\n\n  return this;\n};\n\nLRUMap.prototype.shift = function() {\n  // todo: handle special case when limit == 1\n  var entry = this.oldest;\n  if (entry) {\n    if (this.oldest[NEWER]) {\n      // advance the list\n      this.oldest = this.oldest[NEWER];\n      this.oldest[OLDER] = undefined;\n    } else {\n      // the cache is exhausted\n      this.oldest = undefined;\n      this.newest = undefined;\n    }\n    // Remove last strong reference to <entry> and remove links from the purged\n    // entry being returned:\n    entry[NEWER] = entry[OLDER] = undefined;\n    this._keymap.delete(entry.key);\n    --this.size;\n    return [entry.key, entry.value];\n  }\n};\n\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n\nLRUMap.prototype.find = function(key) {\n  let e = this._keymap.get(key);\n  return e ? e.value : undefined;\n};\n\nLRUMap.prototype.has = function(key) {\n  return this._keymap.has(key);\n};\n\nLRUMap.prototype['delete'] = function(key) {\n  var entry = this._keymap.get(key);\n  if (!entry) return;\n  this._keymap.delete(entry.key);\n  if (entry[NEWER] && entry[OLDER]) {\n    // relink the older entry with the newer entry\n    entry[OLDER][NEWER] = entry[NEWER];\n    entry[NEWER][OLDER] = entry[OLDER];\n  } else if (entry[NEWER]) {\n    // remove the link to us\n    entry[NEWER][OLDER] = undefined;\n    // link the newer entry to head\n    this.oldest = entry[NEWER];\n  } else if (entry[OLDER]) {\n    // remove the link to us\n    entry[OLDER][NEWER] = undefined;\n    // link the newer entry to head\n    this.newest = entry[OLDER];\n  } else {// if(entry[OLDER] === undefined && entry.newer === undefined) {\n    this.oldest = this.newest = undefined;\n  }\n\n  this.size--;\n  return entry.value;\n};\n\nLRUMap.prototype.clear = function() {\n  // Not clearing links should be safe, as we don't expose live links to user\n  this.oldest = this.newest = undefined;\n  this.size = 0;\n  this._keymap.clear();\n};\n\n\nfunction EntryIterator(oldestEntry) { this.entry = oldestEntry; }\nEntryIterator.prototype[Symbol.iterator] = function() { return this; }\nEntryIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: [ent.key, ent.value] };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n\nfunction KeyIterator(oldestEntry) { this.entry = oldestEntry; }\nKeyIterator.prototype[Symbol.iterator] = function() { return this; }\nKeyIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.key };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\nfunction ValueIterator(oldestEntry) { this.entry = oldestEntry; }\nValueIterator.prototype[Symbol.iterator] = function() { return this; }\nValueIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.value };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n\nLRUMap.prototype.keys = function() {\n  return new KeyIterator(this.oldest);\n};\n\nLRUMap.prototype.values = function() {\n  return new ValueIterator(this.oldest);\n};\n\nLRUMap.prototype.entries = function() {\n  return this;\n};\n\nLRUMap.prototype[Symbol.iterator] = function() {\n  return new EntryIterator(this.oldest);\n};\n\nLRUMap.prototype.forEach = function(fun, thisObj) {\n  if (typeof thisObj !== 'object') {\n    thisObj = this;\n  }\n  let entry = this.oldest;\n  while (entry) {\n    fun.call(thisObj, entry.value, entry.key, this);\n    entry = entry[NEWER];\n  }\n};\n\n/** Returns a JSON (array) representation */\nLRUMap.prototype.toJSON = function() {\n  var s = new Array(this.size), i = 0, entry = this.oldest;\n  while (entry) {\n    s[i++] = { key: entry.key, value: entry.value };\n    entry = entry[NEWER];\n  }\n  return s;\n};\n\n/** Returns a String representation */\nLRUMap.prototype.toString = function() {\n  var s = '', entry = this.oldest;\n  while (entry) {\n    s += String(entry.key)+':'+entry.value;\n    entry = entry[NEWER];\n    if (entry) {\n      s += ' < ';\n    }\n  }\n  return s;\n};\n\n});\n", "import { getCurrentHub } from '@sentry/core';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport { URL } from 'url';\n\nimport { NODE_VERSION } from '../../nodeVersion';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n */\nexport function isSentryRequest(url: string): boolean {\n  const dsn = getCurrentHub().getClient()?.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nexport function extractRawUrl(requestOptions: RequestOptions): string {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 ? '' : `:${requestOptions.port}`;\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nexport function extractUrl(requestOptions: RequestOptions): string {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 ? '' : `:${requestOptions.port}`;\n  // do not include search or hash in span descriptions, per https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const path = requestOptions.pathname || '/';\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth: string): string {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nexport function cleanSpanDescription(\n  description: string | undefined,\n  requestOptions: RequestOptions,\n  request: http.ClientRequest,\n): string | undefined {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = (request as any)?.agent?.protocol; // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if (requestUrl?.startsWith('///')) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\nexport type RequestOptions = http.RequestOptions & { hash?: string; search?: string; pathname?: string; href?: string };\ntype RequestCallback = (response: http.IncomingMessage) => void;\nexport type RequestMethodArgs =\n  | [RequestOptions | string | URL, RequestCallback?]\n  | [string | URL, RequestOptions, RequestCallback?];\nexport type RequestMethod = (...args: RequestMethodArgs) => http.ClientRequest;\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nexport function urlToOptions(url: URL): RequestOptions {\n  const options: RequestOptions = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nexport function normalizeRequestArgs(\n  httpModule: typeof http | typeof https,\n  requestArgs: RequestMethodArgs,\n): [RequestOptions] | [RequestOptions, RequestCallback] {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() as RequestCallback;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (NODE_VERSION.major && NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        (httpModule?.globalAgent as any)?.protocol ||\n        (requestOptions.agent as any)?.protocol ||\n        (requestOptions._defaultAgent as any)?.protocol;\n    } else {\n      requestOptions.protocol =\n        (requestOptions.agent as any)?.protocol ||\n        (requestOptions._defaultAgent as any)?.protocol ||\n        (httpModule?.globalAgent as any)?.protocol;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n", "import type { Hub } from '@sentry/core';\nimport { getCurrentHub, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport type {\n  DynamicSamplingContext,\n  EventProcessor,\n  Integration,\n  SanitizedRequestData,\n  TracePropagationTargets,\n} from '@sentry/types';\nimport {\n  dynamicSamplingContextToSentryBaggageHeader,\n  fill,\n  generateSentryTraceHeader,\n  logger,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport { LRUMap } from 'lru_map';\n\nimport type { NodeClient } from '../client';\nimport { NODE_VERSION } from '../nodeVersion';\nimport type { RequestMethod, RequestMethodArgs, RequestOptions } from './utils/http';\nimport { cleanSpanDescription, extractRawUrl, extractUrl, isSentryRequest, normalizeRequestArgs } from './utils/http';\n\ninterface TracingOptions {\n  /**\n   * List of strings/regex controlling to which outgoing requests\n   * the SDK will attach tracing headers.\n   *\n   * By default the SDK will attach those headers to all outgoing\n   * requests. If this option is provided, the SDK will match the\n   * request URL of outgoing requests against the items in this\n   * array, and only attach tracing headers if a match was found.\n   *\n   * @deprecated Use top level `tracePropagationTargets` option instead.\n   * ```\n   * Sentry.init({\n   *   tracePropagationTargets: ['api.site.com'],\n   * })\n   */\n  tracePropagationTargets?: TracePropagationTargets;\n\n  /**\n   * Function determining whether or not to create spans to track outgoing requests to the given URL.\n   * By default, spans will be created for all outgoing requests.\n   */\n  shouldCreateSpanForRequest?: (url: string) => boolean;\n}\n\ninterface HttpOptions {\n  /**\n   * Whether breadcrumbs should be recorded for requests\n   * Defaults to true\n   */\n  breadcrumbs?: boolean;\n\n  /**\n   * Whether tracing spans should be created for requests\n   * Defaults to false\n   */\n  tracing?: TracingOptions | boolean;\n}\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, transactions for outgoing\n * http requests and attaches trace data when tracing is enabled via its `tracing` option.\n */\nexport class Http implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Http';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Http.id;\n\n  private readonly _breadcrumbs: boolean;\n  private readonly _tracing: TracingOptions | undefined;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: HttpOptions = {}) {\n    this._breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n    this._tracing = !options.tracing ? undefined : options.tracing === true ? {} : options.tracing;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(\n    _addGlobalEventProcessor: (callback: EventProcessor) => void,\n    setupOnceGetCurrentHub: () => Hub,\n  ): void {\n    // No need to instrument if we don't want to track anything\n    if (!this._breadcrumbs && !this._tracing) {\n      return;\n    }\n\n    const clientOptions = setupOnceGetCurrentHub().getClient<NodeClient>()?.getOptions();\n\n    // Do not auto-instrument for other instrumenter\n    if (clientOptions && clientOptions.instrumenter !== 'sentry') {\n      __DEBUG_BUILD__ && logger.log('HTTP Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const shouldCreateSpanForRequest =\n      // eslint-disable-next-line deprecation/deprecation\n      this._tracing?.shouldCreateSpanForRequest || clientOptions?.shouldCreateSpanForRequest;\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptions?.tracePropagationTargets || this._tracing?.tracePropagationTargets;\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const httpModule = require('http');\n    const wrappedHttpHandlerMaker = _createWrappedRequestMethodFactory(\n      httpModule,\n      this._breadcrumbs,\n      shouldCreateSpanForRequest,\n      tracePropagationTargets,\n    );\n    fill(httpModule, 'get', wrappedHttpHandlerMaker);\n    fill(httpModule, 'request', wrappedHttpHandlerMaker);\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // If we do, we'd get double breadcrumbs and double spans for `https` calls.\n    // It has been changed in Node 9, so for all versions equal and above, we patch `https` separately.\n    if (NODE_VERSION.major && NODE_VERSION.major > 8) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const httpsModule = require('https');\n      const wrappedHttpsHandlerMaker = _createWrappedRequestMethodFactory(\n        httpsModule,\n        this._breadcrumbs,\n        shouldCreateSpanForRequest,\n        tracePropagationTargets,\n      );\n      fill(httpsModule, 'get', wrappedHttpsHandlerMaker);\n      fill(httpsModule, 'request', wrappedHttpsHandlerMaker);\n    }\n  }\n}\n\n// for ease of reading below\ntype OriginalRequestMethod = RequestMethod;\ntype WrappedRequestMethod = RequestMethod;\ntype WrappedRequestMethodFactory = (original: OriginalRequestMethod) => WrappedRequestMethod;\n\n/**\n * Function which creates a function which creates wrapped versions of internal `request` and `get` calls within `http`\n * and `https` modules. (NB: Not a typo - this is a creator^2!)\n *\n * @param breadcrumbsEnabled Whether or not to record outgoing requests as breadcrumbs\n * @param tracingEnabled Whether or not to record outgoing requests as tracing spans\n *\n * @returns A function which accepts the exiting handler and returns a wrapped handler\n */\nfunction _createWrappedRequestMethodFactory(\n  httpModule: typeof http | typeof https,\n  breadcrumbsEnabled: boolean,\n  shouldCreateSpanForRequest: ((url: string) => boolean) | undefined,\n  tracePropagationTargets: TracePropagationTargets | undefined,\n): WrappedRequestMethodFactory {\n  // We're caching results so we don't have to recompute regexp every time we create a request.\n  const createSpanUrlMap = new LRUMap<string, boolean>(100);\n  const headersUrlMap = new LRUMap<string, boolean>(100);\n\n  const shouldCreateSpan = (url: string): boolean => {\n    if (shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = shouldCreateSpanForRequest(url);\n    createSpanUrlMap.set(url, decision);\n    return decision;\n  };\n\n  const shouldAttachTraceData = (url: string): boolean => {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = headersUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n    headersUrlMap.set(url, decision);\n    return decision;\n  };\n\n  /**\n   * Captures Breadcrumb based on provided request/response pair\n   */\n  function addRequestBreadcrumb(\n    event: string,\n    requestSpanData: SanitizedRequestData,\n    req: http.ClientRequest,\n    res?: http.IncomingMessage,\n  ): void {\n    if (!getCurrentHub().getIntegration(Http)) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'http',\n        data: {\n          status_code: res && res.statusCode,\n          ...requestSpanData,\n        },\n        type: 'http',\n      },\n      {\n        event,\n        request: req,\n        response: res,\n      },\n    );\n  }\n\n  return function wrappedRequestMethodFactory(originalRequestMethod: OriginalRequestMethod): WrappedRequestMethod {\n    return function wrappedMethod(this: unknown, ...args: RequestMethodArgs): http.ClientRequest {\n      const requestArgs = normalizeRequestArgs(httpModule, args);\n      const requestOptions = requestArgs[0];\n      // eslint-disable-next-line deprecation/deprecation\n      const rawRequestUrl = extractRawUrl(requestOptions);\n      const requestUrl = extractUrl(requestOptions);\n\n      // we don't want to record requests to Sentry as either breadcrumbs or spans, so just use the original method\n      if (isSentryRequest(requestUrl)) {\n        return originalRequestMethod.apply(httpModule, requestArgs);\n      }\n\n      const hub = getCurrentHub();\n      const scope = hub.getScope();\n      const parentSpan = scope.getSpan();\n\n      const data = getRequestSpanData(requestUrl, requestOptions);\n\n      const requestSpan = shouldCreateSpan(rawRequestUrl)\n        ? parentSpan?.startChild({\n            op: 'http.client',\n            description: `${data['http.method']} ${data.url}`,\n            data,\n          })\n        : undefined;\n\n      if (shouldAttachTraceData(rawRequestUrl)) {\n        if (requestSpan) {\n          const sentryTraceHeader = requestSpan.toTraceparent();\n          const dynamicSamplingContext = requestSpan?.transaction?.getDynamicSamplingContext();\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        } else {\n          const client = hub.getClient();\n          const { traceId, sampled, dsc } = scope.getPropagationContext();\n          const sentryTraceHeader = generateSentryTraceHeader(traceId, undefined, sampled);\n          const dynamicSamplingContext =\n            dsc || (client ? getDynamicSamplingContextFromClient(traceId, client, scope) : undefined);\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        }\n      } else {\n        __DEBUG_BUILD__ &&\n          logger.log(\n            `[Tracing] Not adding sentry-trace header to outgoing request (${requestUrl}) due to mismatching tracePropagationTargets option.`,\n          );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalRequestMethod\n        .apply(httpModule, requestArgs)\n        .once('response', function (this: http.ClientRequest, res: http.IncomingMessage): void {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('response', data, req, res);\n          }\n          if (requestSpan) {\n            if (res.statusCode) {\n              requestSpan.setHttpStatus(res.statusCode);\n            }\n            requestSpan.description = cleanSpanDescription(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        })\n        .once('error', function (this: http.ClientRequest): void {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('error', data, req);\n          }\n          if (requestSpan) {\n            requestSpan.setHttpStatus(500);\n            requestSpan.description = cleanSpanDescription(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        });\n    };\n  };\n}\n\nfunction addHeadersToRequestOptions(\n  requestOptions: RequestOptions,\n  requestUrl: string,\n  sentryTraceHeader: string,\n  dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined,\n): void {\n  __DEBUG_BUILD__ &&\n    logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${requestUrl}\": `);\n  const sentryBaggage = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  const sentryBaggageHeader = normalizeBaggageHeader(requestOptions, sentryBaggage);\n  requestOptions.headers = {\n    ...requestOptions.headers,\n    'sentry-trace': sentryTraceHeader,\n    // Setting a header to `undefined` will crash in node so we only set the baggage header when it's defined\n    ...(sentryBaggageHeader && { baggage: sentryBaggageHeader }),\n  };\n}\n\nfunction getRequestSpanData(requestUrl: string, requestOptions: RequestOptions): SanitizedRequestData {\n  const method = requestOptions.method || 'GET';\n  const data: SanitizedRequestData = {\n    url: requestUrl,\n    'http.method': method,\n  };\n  if (requestOptions.hash) {\n    // strip leading \"#\"\n    data['http.fragment'] = requestOptions.hash.substring(1);\n  }\n  if (requestOptions.search) {\n    // strip leading \"?\"\n    data['http.query'] = requestOptions.search.substring(1);\n  }\n  return data;\n}\n\nfunction normalizeBaggageHeader(\n  requestOptions: RequestOptions,\n  sentryBaggageHeader: string | undefined,\n): string | string[] | undefined {\n  if (!requestOptions.headers || !requestOptions.headers.baggage) {\n    return sentryBaggageHeader;\n  } else if (!sentryBaggageHeader) {\n    return requestOptions.headers.baggage as string | string[];\n  } else if (Array.isArray(requestOptions.headers.baggage)) {\n    return [...requestOptions.headers.baggage, sentryBaggageHeader];\n  }\n\n  // Type-cast explanation:\n  // Technically this the following could be of type `(number | string)[]` but for the sake of simplicity\n  // we say this is undefined behaviour, since it would not be baggage spec conform if the user did this.\n  return [requestOptions.headers.baggage, sentryBaggageHeader] as string[];\n}\n", "import { getCurrentHub } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport type { NodeClient } from '../../client';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nexport function logAndExitProcess(error: Error): void {\n  // eslint-disable-next-line no-console\n  console.error(error && error.stack ? error.stack : error);\n\n  const client = getCurrentHub().getClient<NodeClient>();\n\n  if (client === undefined) {\n    __DEBUG_BUILD__ && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result: boolean) => {\n      if (!result) {\n        __DEBUG_BUILD__ && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      __DEBUG_BUILD__ && logger.error(error);\n    },\n  );\n}\n", "import type { Scope } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport type { NodeClient } from '../client';\nimport { logAndExitProcess } from './utils/errorhandling';\n\ntype OnFatalErrorHandler = (firstError: Error, secondError?: Error) => void;\n\ntype TaggedListener = NodeJS.UncaughtExceptionListener & {\n  tag?: string;\n};\n\n// CAREFUL: Please think twice before updating the way _options looks because the Next.js SDK depends on it in `index.server.ts`\ninterface OnUncaughtExceptionOptions {\n  // TODO(v8): Evaluate whether we should switch the default behaviour here.\n  // Also, we can evaluate using https://nodejs.org/api/process.html#event-uncaughtexceptionmonitor per default, and\n  // falling back to current behaviour when that's not available.\n  /**\n   * Controls if the SDK should register a handler to exit the process on uncaught errors:\n   * - `true`: The SDK will exit the process on all uncaught errors.\n   * - `false`: The SDK will only exit the process when there are no other `uncaughtException` handlers attached.\n   *\n   * Default: `true`\n   */\n  exitEvenIfOtherHandlersAreRegistered: boolean;\n\n  /**\n   * This is called when an uncaught error would cause the process to exit.\n   *\n   * @param firstError Uncaught error causing the process to exit\n   * @param secondError Will be set if the handler was called multiple times. This can happen either because\n   * `onFatalError` itself threw, or because an independent error happened somewhere else while `onFatalError`\n   * was running.\n   */\n  onFatalError?(this: void, firstError: Error, secondError?: Error): void;\n}\n\n/** Global Exception handler */\nexport class OnUncaughtException implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'OnUncaughtException';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = OnUncaughtException.id;\n\n  /**\n   * @inheritDoc\n   */\n  public readonly handler: (error: Error) => void = this._makeErrorHandler();\n\n  // CAREFUL: Please think twice before updating the way _options looks because the Next.js SDK depends on it in `index.server.ts`\n  private readonly _options: OnUncaughtExceptionOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<OnUncaughtExceptionOptions> = {}) {\n    this._options = {\n      exitEvenIfOtherHandlersAreRegistered: true,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    global.process.on('uncaughtException', this.handler);\n  }\n\n  /**\n   * @hidden\n   */\n  private _makeErrorHandler(): (error: Error) => void {\n    const timeout = 2000;\n    let caughtFirstError: boolean = false;\n    let caughtSecondError: boolean = false;\n    let calledFatalError: boolean = false;\n    let firstError: Error;\n\n    return (error: Error): void => {\n      let onFatalError: OnFatalErrorHandler = logAndExitProcess;\n      const client = getCurrentHub().getClient<NodeClient>();\n\n      if (this._options.onFatalError) {\n        onFatalError = this._options.onFatalError;\n      } else if (client && client.getOptions().onFatalError) {\n        onFatalError = client.getOptions().onFatalError as OnFatalErrorHandler;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (\n        global.process.listeners('uncaughtException') as TaggedListener[]\n      ).reduce<number>((acc, listener) => {\n        if (\n          // There are 3 listeners we ignore:\n          listener.name === 'domainUncaughtExceptionClear' || // as soon as we're using domains this listener is attached by node itself\n          (listener.tag && listener.tag === 'sentry_tracingErrorCallback') || // the handler we register for tracing\n          listener === this.handler // the handler we register in this integration\n        ) {\n          return acc;\n        } else {\n          return acc + 1;\n        }\n      }, 0);\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = this._options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        const hub = getCurrentHub();\n\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if (hub.getIntegration(OnUncaughtException)) {\n          hub.withScope((scope: Scope) => {\n            scope.setLevel('fatal');\n            hub.captureException(error, {\n              originalException: error,\n              data: { mechanism: { handled: false, type: 'onuncaughtexception' } },\n            });\n            if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n              calledFatalError = true;\n              onFatalError(error);\n            }\n          });\n        } else {\n          if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n            calledFatalError = true;\n            onFatalError(error);\n          }\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            __DEBUG_BUILD__ &&\n              logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            logAndExitProcess(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              } else {\n                // it was probably case 2, our first error finished capturing while we waited, cool, do nothing\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    };\n  }\n}\n", "import type { Scope } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\nimport { logAndExitProcess } from './utils/errorhandling';\n\ntype UnhandledRejectionMode = 'none' | 'warn' | 'strict';\n\n/** Global Promise Rejection handler */\nexport class OnUnhandledRejection implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'OnUnhandledRejection';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = OnUnhandledRejection.id;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly _options: {\n      /**\n       * Option deciding what to do after capturing unhandledRejection,\n       * that mimicks behavior of node's --unhandled-rejection flag.\n       */\n      mode: UnhandledRejectionMode;\n    } = { mode: 'warn' },\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    global.process.on('unhandledRejection', this.sendUnhandledPromise.bind(this));\n  }\n\n  /**\n   * Send an exception with reason\n   * @param reason string\n   * @param promise promise\n   */\n  public sendUnhandledPromise(reason: unknown, promise: unknown): void {\n    const hub = getCurrentHub();\n    if (hub.getIntegration(OnUnhandledRejection)) {\n      hub.withScope((scope: Scope) => {\n        scope.setExtra('unhandledPromiseRejection', true);\n        hub.captureException(reason, {\n          originalException: promise,\n          data: { mechanism: { handled: false, type: 'onunhandledrejection' } },\n        });\n      });\n    }\n    this._handleRejection(reason);\n  }\n\n  /**\n   * Handler for `mode` option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _handleRejection(reason: any): void {\n    // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n    const rejectionWarning =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason:';\n\n    /* eslint-disable no-console */\n    if (this._options.mode === 'warn') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(reason && reason.stack ? reason.stack : reason);\n      });\n    } else if (this._options.mode === 'strict') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n      });\n      logAndExitProcess(reason);\n    }\n    /* eslint-enable no-console */\n  }\n}\n", "import type { Event, EventProcessor, Integration, StackFrame } from '@sentry/types';\nimport { addContextToFrame } from '@sentry/utils';\nimport { readFile } from 'fs';\nimport { LRUMap } from 'lru_map';\n\nconst FILE_CONTENT_CACHE = new LRUMap<string, string[] | null>(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    readFile(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\n/**\n * Resets the file cache. Exists for testing purposes.\n * @hidden\n */\nexport function resetFileContentCache(): void {\n  FILE_CONTENT_CACHE.clear();\n}\n\ninterface ContextLinesOptions {\n  /**\n   * Sets the number of context lines for each frame when loading a file.\n   * Defaults to 7.\n   *\n   * Set to 0 to disable loading and inclusion of source files.\n   **/\n  frameContextLines?: number;\n}\n\n/** Add node modules / packages to the event */\nexport class ContextLines implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ContextLines';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = ContextLines.id;\n\n  public constructor(private readonly _options: ContextLinesOptions = {}) {}\n\n  /** Get's the number of context lines to add */\n  private get _contextLines(): number {\n    return this._options.frameContextLines !== undefined ? this._options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void): void {\n    addGlobalEventProcessor(event => this.addSourceContext(event));\n  }\n\n  /** Processes an event and adds context lines */\n  public async addSourceContext(event: Event): Promise<Event> {\n    // keep a lookup map of which files we've already enqueued to read,\n    // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n    const enqueuedReadSourceFileTasks: Record<string, number> = {};\n    const readSourceFileTasks: Promise<string[] | null>[] = [];\n\n    if (this._contextLines > 0 && event.exception?.values) {\n      for (const exception of event.exception.values) {\n        if (!exception.stacktrace?.frames) {\n          continue;\n        }\n\n        // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n        // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n        for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n          const frame = exception.stacktrace.frames[i];\n          // Call cache.get to bump the file to the top of the cache and ensure we have not already\n          // enqueued a read operation for this filename\n          if (\n            frame.filename &&\n            !enqueuedReadSourceFileTasks[frame.filename] &&\n            !FILE_CONTENT_CACHE.get(frame.filename)\n          ) {\n            readSourceFileTasks.push(_readSourceFile(frame.filename));\n            enqueuedReadSourceFileTasks[frame.filename] = 1;\n          }\n        }\n      }\n    }\n\n    // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n    // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n    // are guarding from that by wrapping the i/o read operation in a try/catch.\n    if (readSourceFileTasks.length > 0) {\n      await Promise.all(readSourceFileTasks);\n    }\n\n    // Perform the same loop as above, but this time we can assume all files are in the cache\n    // and attempt to add source context to frames.\n    if (this._contextLines > 0 && event.exception?.values) {\n      for (const exception of event.exception.values) {\n        if (exception.stacktrace && exception.stacktrace.frames) {\n          await this.addSourceContextToFrames(exception.stacktrace.frames);\n        }\n      }\n    }\n\n    return event;\n  }\n\n  /** Adds context lines to frames */\n  public addSourceContextToFrames(frames: StackFrame[]): void {\n    for (const frame of frames) {\n      // Only add context if we have a filename and it hasn't already been added\n      if (frame.filename && frame.context_line === undefined) {\n        const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n        if (sourceFileLines) {\n          try {\n            addContextToFrame(sourceFileLines, frame, this._contextLines);\n          } catch (e) {\n            // anomaly, being defensive in case\n            // unlikely to ever happen in practice but can definitely happen in theory\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename: string): Promise<string[] | null> {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content: string[] | null = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n", "import type { Event, EventHint, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\n\nimport { exceptionFromError } from '../eventbuilder';\nimport { ContextLines } from './contextlines';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(async (event: Event, hint?: EventHint) => {\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const self = hub.getIntegration(LinkedErrors);\n\n      if (!client || !self) {\n        return event;\n      }\n\n      applyAggregateErrorsToEvent(\n        exceptionFromError,\n        client.getOptions().stackParser,\n        self._key,\n        self._limit,\n        event,\n        hint,\n      );\n\n      // If the ContextLines integration is enabled, we add source code context to linked errors\n      // because we can't guarantee the order that integrations are run.\n      const contextLines = getCurrentHub().getIntegration(ContextLines);\n      if (contextLines) {\n        await contextLines.addSourceContext(event);\n      }\n\n      return event;\n    });\n  }\n}\n", "import type { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { existsSync, readFileSync } from 'fs';\nimport { dirname, join } from 'path';\n\nlet moduleCache: { [key: string]: string };\n\n/** Extract information about paths */\nfunction getPaths(): string[] {\n  try {\n    return require.cache ? Object.keys(require.cache as Record<string, unknown>) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules(): {\n  [name: string]: string;\n} {\n  const mainPaths = (require.main && require.main.paths) || [];\n  const paths = getPaths();\n  const infos: {\n    [name: string]: string;\n  } = {};\n  const seen: {\n    [path: string]: boolean;\n  } = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = (): void | (() => void) => {\n      const orig = dir;\n      dir = dirname(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = join(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!existsSync(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse(readFileSync(pkgfile, 'utf8')) as {\n          name: string;\n          version: string;\n        };\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Add node modules / packages to the event */\nexport class Modules implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Modules';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Modules.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      if (!getCurrentHub().getIntegration(Modules)) {\n        return event;\n      }\n      return {\n        ...event,\n        modules: {\n          ...event.modules,\n          ...this._getModules(),\n        },\n      };\n    });\n  }\n\n  /** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\n  private _getModules(): { [key: string]: string } {\n    if (!moduleCache) {\n      moduleCache = collectModules();\n    }\n    return moduleCache;\n  }\n}\n", "/* eslint-disable max-lines */\nimport type {\n  AppContext,\n  Contexts,\n  CultureContext,\n  DeviceContext,\n  Event,\n  EventProcessor,\n  Integration,\n  OsContext,\n} from '@sentry/types';\nimport { execFile } from 'child_process';\nimport { readdir, readFile } from 'fs';\nimport * as os from 'os';\nimport { join } from 'path';\nimport { promisify } from 'util';\n\n// TODO: Required until we drop support for Node v8\nexport const readFileAsync = promisify(readFile);\nexport const readDirAsync = promisify(readdir);\n\ninterface DeviceContextOptions {\n  cpu?: boolean;\n  memory?: boolean;\n}\n\ninterface ContextOptions {\n  app?: boolean;\n  os?: boolean;\n  device?: DeviceContextOptions | boolean;\n  culture?: boolean;\n}\n\n/** Add node modules / packages to the event */\nexport class Context implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Context';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Context.id;\n\n  /**\n   * Caches context so it's only evaluated once\n   */\n  private _cachedContext: Promise<Contexts> | undefined;\n\n  public constructor(private readonly _options: ContextOptions = { app: true, os: true, device: true, culture: true }) {\n    //\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void): void {\n    addGlobalEventProcessor(event => this.addContext(event));\n  }\n\n  /** Processes an event and adds context */\n  public async addContext(event: Event): Promise<Event> {\n    if (this._cachedContext === undefined) {\n      this._cachedContext = this._getContexts();\n    }\n\n    const updatedContext = this._updateContext(await this._cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ...event.contexts?.app },\n      os: { ...updatedContext.os, ...event.contexts?.os },\n      device: { ...updatedContext.device, ...event.contexts?.device },\n      culture: { ...updatedContext.culture, ...event.contexts?.culture },\n    };\n\n    return event;\n  }\n\n  /**\n   * Updates the context with dynamic values that can change\n   */\n  private _updateContext(contexts: Contexts): Contexts {\n    // Only update properties if they exist\n    if (contexts?.app?.app_memory) {\n      contexts.app.app_memory = process.memoryUsage().rss;\n    }\n\n    if (contexts?.device?.free_memory) {\n      contexts.device.free_memory = os.freemem();\n    }\n\n    return contexts;\n  }\n\n  /**\n   * Gets the contexts for the current environment\n   */\n  private async _getContexts(): Promise<Contexts> {\n    const contexts: Contexts = {};\n\n    if (this._options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (this._options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (this._options.device) {\n      contexts.device = getDeviceContext(this._options.device);\n    }\n\n    if (this._options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    return contexts;\n  }\n}\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext(): Promise<OsContext> {\n  const platformId = os.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os.release(),\n      };\n  }\n}\n\nfunction getCultureContext(): CultureContext | undefined {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions as unknown as any).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\nfunction getAppContext(): AppContext {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n\n  return { app_start_time, app_memory };\n}\n\n/**\n * Gets device information from os\n */\nexport function getDeviceContext(deviceOpt: DeviceContextOptions | true): DeviceContext {\n  const device: DeviceContext = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os.uptime && os.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os.totalmem();\n    device.free_memory = os.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo: os.CpuInfo[] | undefined = os.cpus();\n    if (cpuInfo && cpuInfo.length) {\n      const firstCpu = cpuInfo[0];\n\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES: { [platform: string]: string } = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\ninterface DistroFile {\n  /** The file name, located in `/etc`. */\n  name: string;\n  /** Potential distributions to check. */\n  distros: string[];\n}\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS: DistroFile[] = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS: {\n  [identifier: string]: (content: string) => string | undefined;\n} = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex: RegExp, text: string): string | undefined {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo(): Promise<OsContext> {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo: OsContext = {\n    kernel_version: os.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise<string>((resolve, reject) => {\n      execFile('/usr/bin/sw_vers', (error: Error | null, stdout: string) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name: string): string {\n  return name.split(' ')[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo(): Promise<OsContext> {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo: OsContext = {\n    kernel_version: os.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = join('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) as string).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id](contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "import type {\n  Event,\n  ExtractedNodeRequestData,\n  PolymorphicRequest,\n  Transaction,\n  TransactionSource,\n} from '@sentry/types';\nimport { isPlainObject, isString, normalize, stripUrlQueryAndFragment } from '@sentry/utils';\nimport * as cookie from 'cookie';\nimport * as url from 'url';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nexport const DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\nexport type AddRequestDataToEventOptions = {\n  /** Flags controlling whether each type of data should be added to the event */\n  include?: {\n    ip?: boolean;\n    request?: boolean | Array<(typeof DEFAULT_REQUEST_INCLUDES)[number]>;\n    transaction?: boolean | TransactionNamingScheme;\n    user?: boolean | Array<(typeof DEFAULT_USER_INCLUDES)[number]>;\n  };\n};\n\nexport type TransactionNamingScheme = 'path' | 'methodPath' | 'handler';\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nexport function addRequestDataToTransaction(transaction: Transaction | undefined, req: PolymorphicRequest): void {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nexport function extractPathForTransaction(\n  req: PolymorphicRequest,\n  options: { path?: boolean; method?: boolean; customRoute?: string } = {},\n): [string, TransactionSource] {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source: TransactionSource = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req: PolymorphicRequest, type: boolean | TransactionNamingScheme): string {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user: {\n    [key: string]: unknown;\n  },\n  keys: boolean | string[],\n): { [key: string]: unknown } {\n  const extractedUser: { [key: string]: unknown } = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n *\n * @returns An object containing normalized request data\n */\nexport function extractRequestData(\n  req: PolymorphicRequest,\n  options?: {\n    include?: string[];\n  },\n): ExtractedNodeRequestData {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options || {};\n  const requestData: { [key: string]: unknown } = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {}) as {\n    host?: string;\n    cookie?: string;\n  };\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers as { cookie?: string }).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req as { [key: string]: unknown })[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n *\n * @returns The mutated `Event` object\n */\nexport function addRequestDataToEvent(\n  event: Event,\n  req: PolymorphicRequest,\n  options?: AddRequestDataToEventOptions,\n): Event {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...options?.include,\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request })\n      : extractRequestData(req);\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req: PolymorphicRequest): string | Record<string, unknown> | undefined {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    url.parse(originalUrl).query ||\n    undefined\n  );\n}\n", "// TODO (v8 or v9): Whenever this becomes a default integration for `@sentry/browser`, move this to `@sentry/core`. For\n// now, we leave it in `@sentry/integrations` so that it doesn't contribute bytes to our CDN bundles.\n\nimport type { Event, EventProcessor, Hub, Integration, PolymorphicRequest, Transaction } from '@sentry/types';\nimport { extractPathForTransaction } from '@sentry/utils';\n\nimport type { AddRequestDataToEventOptions, TransactionNamingScheme } from '../requestdata';\nimport { addRequestDataToEvent } from '../requestdata';\n\nexport type RequestDataIntegrationOptions = {\n  /**\n   * Controls what data is pulled from the request and added to the event\n   */\n  include?: {\n    cookies?: boolean;\n    data?: boolean;\n    headers?: boolean;\n    ip?: boolean;\n    query_string?: boolean;\n    url?: boolean;\n    user?:\n      | boolean\n      | {\n          id?: boolean;\n          username?: boolean;\n          email?: boolean;\n        };\n  };\n\n  /** Whether to identify transactions by parameterized path, parameterized path with method, or handler name */\n  transactionNamingScheme?: TransactionNamingScheme;\n};\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\n/** Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`. */\nexport class RequestData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RequestData';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = RequestData.id;\n\n  /**\n   * Function for adding request data to event. Defaults to `addRequestDataToEvent` from `@sentry/node` for now, but\n   * left as a property so this integration can be moved to `@sentry/core` as a base class in case we decide to use\n   * something similar in browser-based SDKs in the future.\n   */\n  protected _addRequestData: (event: Event, req: PolymorphicRequest, options?: { [key: string]: unknown }) => Event;\n\n  private _options: Required<RequestDataIntegrationOptions>;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: RequestDataIntegrationOptions = {}) {\n    this._addRequestData = addRequestDataToEvent;\n    this._options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      include: {\n        // @ts-ignore It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n        // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n        method: true,\n        ...DEFAULT_OPTIONS.include,\n        ...options.include,\n        user:\n          options.include && typeof options.include.user === 'boolean'\n            ? options.include.user\n            : {\n                ...DEFAULT_OPTIONS.include.user,\n                // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n                ...((options.include || {}).user as Record<string, boolean>),\n              },\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (eventProcessor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n    // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n    // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n    // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n    const { transactionNamingScheme } = this._options;\n\n    addGlobalEventProcessor(event => {\n      const hub = getCurrentHub();\n      const self = hub.getIntegration(RequestData);\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      // If the globally installed instance of this integration isn't associated with the current hub, `self` will be\n      // undefined\n      if (!self || !req) {\n        return event;\n      }\n\n      // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n      // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n      // integration, so that all of this passing and conversion isn't necessary\n      const addRequestDataOptions =\n        sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n        sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n        convertReqDataIntegrationOptsToAddReqDataOpts(this._options);\n\n      const processedEvent = this._addRequestData(event, req, addRequestDataOptions);\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req as { _sentryTransaction?: Transaction };\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(hub) === 'sentry.javascript.nextjs'\n            ? transaction.name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = extractPathForTransaction(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: transaction.name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    });\n  }\n}\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions: Required<RequestDataIntegrationOptions>,\n): AddRequestDataToEventOptions {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys: string[] = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys: string[] = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(hub: Hub): string | undefined {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return hub.getClient()!.getOptions()!._metadata!.sdk!.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n", "import type { Event, EventProcessor, Exception, Hub, Integration, StackFrame, StackParser } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport type { Debugger, InspectorNotification, Runtime, Session } from 'inspector';\nimport { LRUMap } from 'lru_map';\n\nimport { NODE_VERSION } from '../nodeVersion';\nimport type { NodeClientOptions } from '../types';\n\ntype Variables = Record<string, unknown>;\ntype OnPauseEvent = InspectorNotification<Debugger.PausedEventDataType>;\nexport interface DebugSession {\n  /** Configures and connects to the debug session */\n  configureAndConnect(onPause: (message: OnPauseEvent, complete: () => void) => void, captureAll: boolean): void;\n  /** Gets local variables for an objectId */\n  getLocalVariables(objectId: string, callback: (vars: Variables) => void): void;\n}\n\ntype Next<T> = (result: T) => void;\ntype Add<T> = (fn: Next<T>) => void;\ntype CallbackWrapper<T> = { add: Add<T>; next: Next<T> };\n\n/** Creates a container for callbacks to be called sequentially */\nexport function createCallbackList<T>(complete: Next<T>): CallbackWrapper<T> {\n  // A collection of callbacks to be executed last to first\n  let callbacks: Next<T>[] = [];\n\n  let completedCalled = false;\n  function checkedComplete(result: T): void {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn: Next<T>): void {\n    callbacks.push(fn);\n  }\n\n  function next(result: T): void {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession implements DebugSession {\n  private readonly _session: Session;\n\n  /** Throws if inspector API is not available */\n  public constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = require('inspector');\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n  public configureAndConnect(onPause: (event: OnPauseEvent, complete: () => void) => void, captureAll: boolean): void {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n  public getLocalVariables(objectId: string, complete: (vars: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList<Variables>(complete);\n\n      for (const prop of props) {\n        if (prop?.value?.objectId && prop?.value.className === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (prop?.value?.objectId && prop?.value?.className === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (prop?.value?.value || prop?.value?.description) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n  private _getProperties(objectId: string, next: (result: Runtime.PropertyDescriptor[]) => void): void {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n  private _unrollArray(objectId: string, name: string, vars: Variables, next: (vars: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => v?.value?.value);\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n  private _unrollObject(objectId: string, name: string, vars: Variables, next: (obj: Variables) => void): void {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map<[string, unknown]>(v => [v.name, v?.value?.value])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} as Variables);\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n  private _unrollOther(prop: Runtime.PropertyDescriptor, vars: Variables, next: (vars: Variables) => void): void {\n    if (prop?.value?.value) {\n      vars[prop.name] = prop.value.value;\n    } else if (prop?.value?.description && prop?.value?.type !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession(): AsyncSession | undefined {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\n// Add types for the exception event data\ntype PausedExceptionEvent = Debugger.PausedEventDataType & {\n  data: {\n    // This contains error.stack\n    description: string;\n  };\n};\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name: string | undefined): boolean {\n  return name !== undefined && ['', '?', '<anonymous>'].includes(name);\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a: string | undefined, b: string | undefined): boolean {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames: StackFrame[] | undefined): string | undefined {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser: StackParser, stack: string | undefined): string | undefined {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\nexport interface FrameVariables {\n  function: string;\n  vars?: Variables;\n}\n\n/** There are no options yet. This allows them to be added later without breaking changes */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Options {\n  /**\n   * Capture local variables for both handled and unhandled exceptions\n   *\n   * Default: false - Only captures local variables for uncaught exceptions\n   */\n  captureAllExceptions?: boolean;\n}\n\n/**\n * Adds local variables to exception frames\n */\nexport class LocalVariables implements Integration {\n  public static id: string = 'LocalVariables';\n\n  public readonly name: string = LocalVariables.id;\n\n  private readonly _cachedFrames: LRUMap<string, FrameVariables[]> = new LRUMap(20);\n\n  public constructor(\n    private readonly _options: Options = {},\n    private readonly _session: DebugSession | undefined = tryNewAsyncSession(),\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._setup(addGlobalEventProcessor, getCurrentHub().getClient()?.getOptions());\n  }\n\n  /** Setup in a way that's easier to call from tests */\n  private _setup(\n    addGlobalEventProcessor: (callback: EventProcessor) => void,\n    clientOptions: NodeClientOptions | undefined,\n  ): void {\n    if (this._session && clientOptions?.includeLocalVariables) {\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = (NODE_VERSION.major || 0) < 18;\n\n      if (unsupportedNodeVersion) {\n        logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      this._session.configureAndConnect(\n        (ev, complete) =>\n          this._handlePaused(clientOptions.stackParser, ev as InspectorNotification<PausedExceptionEvent>, complete),\n        !!this._options.captureAllExceptions,\n      );\n\n      addGlobalEventProcessor(async event => this._addLocalVariables(event));\n    }\n  }\n\n  /**\n   * Handle the pause event\n   */\n  private _handlePaused(\n    stackParser: StackParser,\n    { params: { reason, data, callFrames } }: InspectorNotification<PausedExceptionEvent>,\n    complete: () => void,\n  ): void {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, data?.description);\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList<FrameVariables[]>(frames => {\n      this._cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if (localScope?.object.objectId === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          this._session?.getLocalVariables(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          }),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  /**\n   * Adds local variables event stack frames.\n   */\n  private _addLocalVariables(event: Event): Event {\n    for (const exception of event?.exception?.values || []) {\n      this._addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  /**\n   * Adds local variables to the exception stack frames.\n   */\n  private _addLocalVariablesToException(exception: Exception): void {\n    const hash = hashFrames(exception?.stacktrace?.frames);\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // delete is identical to get but also removes the entry from the cache\n    const cachedFrames = this._cachedFrames.delete(hash);\n\n    if (cachedFrames === undefined) {\n      return;\n    }\n\n    const frameCount = exception.stacktrace?.frames?.length || 0;\n\n    for (let i = 0; i < frameCount; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frameCount - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!exception?.stacktrace?.frames?.[frameIndex] || !cachedFrames[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrames[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        exception.stacktrace.frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(exception.stacktrace.frames[frameIndex].function, cachedFrames[i].function)\n      ) {\n        continue;\n      }\n\n      exception.stacktrace.frames[frameIndex].vars = cachedFrames[i].vars;\n    }\n  }\n}\n", "import { getCurrentHub, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport type { EventProcessor, Integration, Span } from '@sentry/types';\nimport {\n  dynamicRequire,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  getSanitizedUrlString,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\nimport { LRUMap } from 'lru_map';\n\nimport type { NodeClient } from '../../client';\nimport { NODE_VERSION } from '../../nodeVersion';\nimport { isSentryRequest } from '../utils/http';\nimport type {\n  DiagnosticsChannel,\n  RequestCreateMessage,\n  RequestEndMessage,\n  RequestErrorMessage,\n  RequestWithSentry,\n} from './types';\n\nexport enum ChannelName {\n  // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md#undicirequestcreate\n  RequestCreate = 'undici:request:create',\n  RequestEnd = 'undici:request:headers',\n  RequestError = 'undici:request:error',\n}\n\nexport interface UndiciOptions {\n  /**\n   * Whether breadcrumbs should be recorded for requests\n   * Defaults to true\n   */\n  breadcrumbs: boolean;\n  /**\n   * Function determining whether or not to create spans to track outgoing requests to the given URL.\n   * By default, spans will be created for all outgoing requests.\n   */\n  shouldCreateSpanForRequest?: (url: string) => boolean;\n}\n\n// Please note that you cannot use `console.log` to debug the callbacks registered to the `diagnostics_channel` API.\n// To debug, you can use `writeFileSync` to write to a file:\n// https://nodejs.org/api/async_hooks.html#printing-in-asynchook-callbacks\n//\n// import { writeFileSync } from 'fs';\n// import { format } from 'util';\n//\n// function debug(...args: any): void {\n//   // Use a function like this one when debugging inside an AsyncHook callback\n//   // @ts-ignore any\n//   writeFileSync('log.out', `${format(...args)}\\n`, { flag: 'a' });\n// }\n\n/**\n * Instruments outgoing HTTP requests made with the `undici` package via\n * Node's `diagnostics_channel` API.\n *\n * Supports Undici 4.7.0 or higher.\n *\n * Requires Node 16.17.0 or higher.\n */\nexport class Undici implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Undici';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Undici.id;\n\n  private readonly _options: UndiciOptions;\n\n  private readonly _createSpanUrlMap: LRUMap<string, boolean> = new LRUMap(100);\n  private readonly _headersUrlMap: LRUMap<string, boolean> = new LRUMap(100);\n\n  public constructor(_options: Partial<UndiciOptions> = {}) {\n    this._options = {\n      breadcrumbs: _options.breadcrumbs === undefined ? true : _options.breadcrumbs,\n      shouldCreateSpanForRequest: _options.shouldCreateSpanForRequest,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_addGlobalEventProcessor: (callback: EventProcessor) => void): void {\n    // Requires Node 16+ to use the diagnostics_channel API.\n    if (NODE_VERSION.major && NODE_VERSION.major < 16) {\n      return;\n    }\n\n    let ds: DiagnosticsChannel | undefined;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      ds = dynamicRequire(module, 'diagnostics_channel') as DiagnosticsChannel;\n    } catch (e) {\n      // no-op\n    }\n\n    if (!ds || !ds.subscribe) {\n      return;\n    }\n\n    // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md\n    ds.subscribe(ChannelName.RequestCreate, this._onRequestCreate);\n    ds.subscribe(ChannelName.RequestEnd, this._onRequestEnd);\n    ds.subscribe(ChannelName.RequestError, this._onRequestError);\n  }\n\n  /** Helper that wraps shouldCreateSpanForRequest option */\n  private _shouldCreateSpan(url: string): boolean {\n    if (this._options.shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = this._options.shouldCreateSpanForRequest(url);\n    this._createSpanUrlMap.set(url, decision);\n    return decision;\n  }\n\n  private _onRequestCreate = (message: unknown): void => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message as RequestCreateMessage;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequest(stringUrl) || request.__sentry_span__ !== undefined) {\n      return;\n    }\n\n    const client = hub.getClient<NodeClient>();\n    if (!client) {\n      return;\n    }\n\n    const clientOptions = client.getOptions();\n    const scope = hub.getScope();\n\n    const parentSpan = scope.getSpan();\n\n    const span = this._shouldCreateSpan(stringUrl) ? createRequestSpan(parentSpan, request, stringUrl) : undefined;\n    if (span) {\n      request.__sentry_span__ = span;\n    }\n\n    const shouldAttachTraceData = (url: string): boolean => {\n      if (clientOptions.tracePropagationTargets === undefined) {\n        return true;\n      }\n\n      const cachedDecision = this._headersUrlMap.get(url);\n      if (cachedDecision !== undefined) {\n        return cachedDecision;\n      }\n\n      const decision = stringMatchesSomePattern(url, clientOptions.tracePropagationTargets);\n      this._headersUrlMap.set(url, decision);\n      return decision;\n    };\n\n    if (shouldAttachTraceData(stringUrl)) {\n      if (span) {\n        const dynamicSamplingContext = span?.transaction?.getDynamicSamplingContext();\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        setHeadersOnRequest(request, span.toTraceparent(), sentryBaggageHeader);\n      } else {\n        const { traceId, sampled, dsc } = scope.getPropagationContext();\n        const sentryTrace = generateSentryTraceHeader(traceId, undefined, sampled);\n        const dynamicSamplingContext = dsc || getDynamicSamplingContextFromClient(traceId, client, scope);\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n        setHeadersOnRequest(request, sentryTrace, sentryBaggageHeader);\n      }\n    }\n  };\n\n  private _onRequestEnd = (message: unknown): void => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request, response } = message as RequestEndMessage;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequest(stringUrl)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setHttpStatus(response.statusCode);\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            status_code: response.statusCode,\n            url: stringUrl,\n          },\n          type: 'http',\n        },\n        {\n          event: 'response',\n          request,\n          response,\n        },\n      );\n    }\n  };\n\n  private _onRequestError = (message: unknown): void => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message as RequestErrorMessage;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequest(stringUrl)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setStatus('internal_error');\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            url: stringUrl,\n          },\n          level: 'error',\n          type: 'http',\n        },\n        {\n          event: 'error',\n          request,\n        },\n      );\n    }\n  };\n}\n\nfunction setHeadersOnRequest(\n  request: RequestWithSentry,\n  sentryTrace: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  if (request.__sentry_has_headers__) {\n    return;\n  }\n\n  request.addHeader('sentry-trace', sentryTrace);\n  if (sentryBaggageHeader) {\n    request.addHeader('baggage', sentryBaggageHeader);\n  }\n\n  request.__sentry_has_headers__ = true;\n}\n\nfunction createRequestSpan(\n  activeSpan: Span | undefined,\n  request: RequestWithSentry,\n  stringUrl: string,\n): Span | undefined {\n  const url = parseUrl(stringUrl);\n\n  const method = request.method || 'GET';\n  const data: Record<string, unknown> = {\n    'http.method': method,\n  };\n  if (url.search) {\n    data['http.query'] = url.search;\n  }\n  if (url.hash) {\n    data['http.fragment'] = url.hash;\n  }\n  return activeSpan?.startChild({\n    op: 'http.client',\n    description: `${method} ${getSanitizedUrlString(url)}`,\n    data,\n  });\n}\n", "import { posix, sep } from 'path';\n\nconst isWindowsPlatform = sep === '\\\\';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path: string): string {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Gets the module from a filename */\nexport function getModuleFromFilename(\n  filename: string | undefined,\n  normalizeWindowsPathSeparator: boolean = isWindowsPlatform,\n): string | undefined {\n  if (!filename) {\n    return;\n  }\n\n  const normalizedFilename = normalizeWindowsPathSeparator ? normalizeWindowsPath(filename) : filename;\n\n  // eslint-disable-next-line prefer-const\n  let { root, dir, base: basename, ext } = posix.parse(normalizedFilename);\n\n  const base = (require && require.main && require.main.filename && dir) || global.process.cwd();\n\n  const normalizedBase = `${base}/`;\n\n  // It's specifically a module\n  let file = basename;\n\n  if (ext === '.js') {\n    file = file.slice(0, file.length - '.js'.length);\n  }\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    dir = '.';\n  }\n\n  let n = dir.lastIndexOf('/node_modules/');\n  if (n > -1) {\n    // /node_modules/ is 14 chars\n    return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n  }\n  // Let's see if it's a part of the main module\n  // To be a part of main module, it has to share the same base\n  n = `${dir}/`.lastIndexOf(normalizedBase, 0);\n\n  if (n === 0) {\n    let moduleName = dir.slice(normalizedBase.length).replace(/\\//g, '.');\n    if (moduleName) {\n      moduleName += ':';\n    }\n    moduleName += file;\n    return moduleName;\n  }\n  return file;\n}\n", "/* eslint-disable max-lines */\nimport {\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getMainCarrier,\n  initAndBind,\n  Integrations as CoreIntegrations,\n} from '@sentry/core';\nimport type { SessionStatus, StackParser } from '@sentry/types';\nimport {\n  createStackParser,\n  GLOBAL_OBJ,\n  logger,\n  nodeStackLineParser,\n  stackParserFromStackParserOptions,\n  tracingContextFromHeaders,\n} from '@sentry/utils';\n\nimport { setNodeAsyncContextStrategy } from './async';\nimport { NodeClient } from './client';\nimport {\n  Console,\n  Context,\n  ContextLines,\n  Http,\n  LinkedErrors,\n  LocalVariables,\n  Modules,\n  OnUncaughtException,\n  OnUnhandledRejection,\n  RequestData,\n  Undici,\n} from './integrations';\nimport { getModuleFromFilename } from './module';\nimport { makeNodeTransport } from './transports';\nimport type { NodeClientOptions, NodeOptions } from './types';\n\nexport const defaultIntegrations = [\n  // Common\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  // Native Wrappers\n  new Console(),\n  new Http(),\n  new Undici(),\n  // Global Handlers\n  new OnUncaughtException(),\n  new OnUnhandledRejection(),\n  // Event Info\n  new ContextLines(),\n  new LocalVariables(),\n  new Context(),\n  new Modules(),\n  new RequestData(),\n  // Misc\n  new LinkedErrors(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\nexport function init(options: NodeOptions = {}): void {\n  const carrier = getMainCarrier();\n\n  setNodeAsyncContextStrategy();\n\n  const autoloadedIntegrations = carrier.__SENTRY__?.integrations || [];\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [\n          ...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations),\n          ...autoloadedIntegrations,\n        ];\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions: NodeClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeNodeTransport,\n  };\n\n  initAndBind(NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<NodeClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<NodeClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nexport function isAutoSessionTrackingEnabled(client?: NodeClient): boolean {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nexport function getSentryRelease(fallback?: string): string | undefined {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nexport const defaultStackParser: StackParser = createStackParser(nodeStackLineParser(getModuleFromFilename));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking(): void {\n  const hub = getCurrentHub();\n  hub.startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = hub.getScope().getSession();\n    const terminalStates: SessionStatus[] = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) hub.endSession();\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables(): void {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const { propagationContext } = tracingContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentHub().getScope().setPropagationContext(propagationContext);\n  }\n}\n", "import * as fs from 'fs';\nimport * as path from 'path';\n\n/**\n * Recursively read the contents of a directory.\n *\n * @param targetDir Absolute or relative path of the directory to scan. All returned paths will be relative to this\n * directory.\n * @returns Array holding all relative paths\n */\nexport function deepReadDirSync(targetDir: string): string[] {\n  const targetDirAbsPath = path.resolve(targetDir);\n\n  if (!fs.existsSync(targetDirAbsPath)) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}. Directory does not exist.`);\n  }\n\n  if (!fs.statSync(targetDirAbsPath).isDirectory()) {\n    throw new Error(`Cannot read contents of ${targetDirAbsPath}, because it is not a directory.`);\n  }\n\n  // This does the same thing as its containing function, `deepReadDirSync` (except that - purely for convenience - it\n  // deals in absolute paths rather than relative ones). We need this to be separate from the outer function to preserve\n  // the difference between `targetDirAbsPath` and `currentDirAbsPath`.\n  const deepReadCurrentDir = (currentDirAbsPath: string): string[] => {\n    return fs.readdirSync(currentDirAbsPath).reduce((absPaths: string[], itemName: string) => {\n      const itemAbsPath = path.join(currentDirAbsPath, itemName);\n\n      if (fs.statSync(itemAbsPath).isDirectory()) {\n        return absPaths.concat(deepReadCurrentDir(itemAbsPath));\n      }\n\n      absPaths.push(itemAbsPath);\n      return absPaths;\n    }, []);\n  };\n\n  return deepReadCurrentDir(targetDirAbsPath).map(absPath => path.relative(targetDirAbsPath, absPath));\n}\n", "/**\n * Deprecated functions which are slated for removal in v8. When the time comes, this entire file can be deleted.\n *\n * See https://github.com/getsentry/sentry-javascript/pull/5257.\n */\n\n/* eslint-disable deprecation/deprecation */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, ExtractedNodeRequestData, PolymorphicRequest } from '@sentry/types';\n\nimport type { AddRequestDataToEventOptions } from './requestdata';\nimport { addRequestDataToEvent, extractRequestData as _extractRequestData } from './requestdata';\n\n/**\n * @deprecated `Handlers.ExpressRequest` is deprecated and will be removed in v8. Use `PolymorphicRequest` instead.\n */\nexport type ExpressRequest = PolymorphicRequest;\n\n/**\n * Normalizes data from the request object, accounting for framework differences.\n *\n * @deprecated `Handlers.extractRequestData` is deprecated and will be removed in v8. Use `extractRequestData` instead.\n *\n * @param req The request object from which to extract data\n * @param keys An optional array of keys to include in the normalized data.\n * @returns An object containing normalized request data\n */\nexport function extractRequestData(req: { [key: string]: any }, keys?: string[]): ExtractedNodeRequestData {\n  return _extractRequestData(req, { include: keys });\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n *\n * @deprecated `Handlers.ParseRequestOptions` is deprecated and will be removed in v8. Use\n * `AddRequestDataToEventOptions` in `@sentry/utils` instead.\n */\nexport type ParseRequestOptions = AddRequestDataToEventOptions['include'] & {\n  serverName?: boolean;\n  version?: boolean;\n};\n\n/**\n * Enriches passed event with request data.\n *\n * @deprecated `Handlers.parseRequest` is deprecated and will be removed in v8. Use `addRequestDataToEvent` instead.\n *\n * @param event Will be mutated and enriched with req data\n * @param req Request object\n * @param options object containing flags to enable functionality\n * @hidden\n */\nexport function parseRequest(event: Event, req: ExpressRequest, options: ParseRequestOptions = {}): Event {\n  return addRequestDataToEvent(event, req, { include: options });\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  captureException,\n  getCurrentHub,\n  hasTracingEnabled,\n  runWithAsyncContext,\n  startTransaction,\n  withScope,\n} from '@sentry/core';\nimport type { Span } from '@sentry/types';\nimport type { AddRequestDataToEventOptions } from '@sentry/utils';\nimport {\n  addExceptionMechanism,\n  addRequestDataToTransaction,\n  dropUndefinedKeys,\n  extractPathForTransaction,\n  isString,\n  logger,\n  normalize,\n  tracingContextFromHeaders,\n} from '@sentry/utils';\nimport type * as http from 'http';\n\nimport type { NodeClient } from './client';\nimport { extractRequestData } from './requestdata';\n// TODO (v8 / XXX) Remove this import\nimport type { ParseRequestOptions } from './requestDataDeprecated';\nimport { flush, isAutoSessionTrackingEnabled } from './sdk';\n\n/**\n * Express-compatible tracing handler.\n * @see Exposed as `Handlers.tracingHandler`\n */\nexport function tracingHandler(): (\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error?: any) => void,\n) => void {\n  return function sentryTracingMiddleware(\n    req: http.IncomingMessage,\n    res: http.ServerResponse,\n    next: (error?: any) => void,\n  ): void {\n    const hub = getCurrentHub();\n    const options = hub.getClient()?.getOptions();\n\n    if (\n      !options ||\n      options.instrumenter !== 'sentry' ||\n      req.method?.toUpperCase() === 'OPTIONS' ||\n      req.method?.toUpperCase() === 'HEAD'\n    ) {\n      return next();\n    }\n\n    const sentryTrace = req.headers && isString(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined;\n    const baggage = req.headers?.baggage;\n    const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n      sentryTrace,\n      baggage,\n    );\n    hub.getScope().setPropagationContext(propagationContext);\n\n    if (!hasTracingEnabled(options)) {\n      return next();\n    }\n\n    const [name, source] = extractPathForTransaction(req, { path: true, method: true });\n    const transaction = startTransaction(\n      {\n        name,\n        op: 'http.server',\n        ...traceparentData,\n        metadata: {\n          dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n          // The request should already have been stored in `scope.sdkProcessingMetadata` (which will become\n          // `event.sdkProcessingMetadata` the same way the metadata here will) by `sentryRequestMiddleware`, but on the\n          // off chance someone is using `sentryTracingMiddleware` without `sentryRequestMiddleware`, it doesn't hurt to\n          // be sure\n          request: req,\n          source,\n        },\n      },\n      // extra context passed to the tracesSampler\n      { request: extractRequestData(req) },\n    );\n\n    // We put the transaction on the scope so users can attach children to it\n    hub.configureScope(scope => {\n      scope.setSpan(transaction);\n    });\n\n    // We also set __sentry_transaction on the response so people can grab the transaction there to add\n    // spans to it later.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (res as any).__sentry_transaction = transaction;\n\n    res.once('finish', () => {\n      // Push `transaction.finish` to the next event loop so open spans have a chance to finish before the transaction\n      // closes\n      setImmediate(() => {\n        addRequestDataToTransaction(transaction, req);\n        transaction.setHttpStatus(res.statusCode);\n        transaction.finish();\n      });\n    });\n\n    next();\n  };\n}\n\nexport type RequestHandlerOptions =\n  // TODO (v8 / XXX) Remove ParseRequestOptions type and eslint override\n  // eslint-disable-next-line deprecation/deprecation\n  | (ParseRequestOptions | AddRequestDataToEventOptions) & {\n      flushTimeout?: number;\n    };\n\n/**\n * Backwards compatibility shim which can be removed in v8. Forces the given options to follow the\n * `AddRequestDataToEventOptions` interface.\n *\n * TODO (v8): Get rid of this, and stop passing `requestDataOptionsFromExpressHandler` to `setSDKProcessingMetadata`.\n */\nfunction convertReqHandlerOptsToAddReqDataOpts(\n  reqHandlerOptions: RequestHandlerOptions = {},\n): AddRequestDataToEventOptions | undefined {\n  let addRequestDataOptions: AddRequestDataToEventOptions | undefined;\n\n  if ('include' in reqHandlerOptions) {\n    addRequestDataOptions = { include: reqHandlerOptions.include };\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ip, request, transaction, user } = reqHandlerOptions as ParseRequestOptions;\n\n    if (ip || request || transaction || user) {\n      addRequestDataOptions = { include: dropUndefinedKeys({ ip, request, transaction, user }) };\n    }\n  }\n\n  return addRequestDataOptions;\n}\n\n/**\n * Express compatible request handler.\n * @see Exposed as `Handlers.requestHandler`\n */\nexport function requestHandler(\n  options?: RequestHandlerOptions,\n): (req: http.IncomingMessage, res: http.ServerResponse, next: (error?: any) => void) => void {\n  // TODO (v8): Get rid of this\n  const requestDataOptions = convertReqHandlerOptsToAddReqDataOpts(options);\n\n  const currentHub = getCurrentHub();\n  const client = currentHub.getClient<NodeClient>();\n  // Initialise an instance of SessionFlusher on the client when `autoSessionTracking` is enabled and the\n  // `requestHandler` middleware is used indicating that we are running in SessionAggregates mode\n  if (client && isAutoSessionTrackingEnabled(client)) {\n    client.initSessionFlusher();\n\n    // If Scope contains a Single mode Session, it is removed in favor of using Session Aggregates mode\n    const scope = currentHub.getScope();\n    if (scope.getSession()) {\n      scope.setSession();\n    }\n  }\n\n  return function sentryRequestMiddleware(\n    req: http.IncomingMessage,\n    res: http.ServerResponse,\n    next: (error?: any) => void,\n  ): void {\n    if (options && options.flushTimeout && options.flushTimeout > 0) {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _end = res.end;\n      res.end = function (chunk?: any | (() => void), encoding?: string | (() => void), cb?: () => void): void {\n        void flush(options.flushTimeout)\n          .then(() => {\n            _end.call(this, chunk, encoding, cb);\n          })\n          .then(null, e => {\n            __DEBUG_BUILD__ && logger.error(e);\n            _end.call(this, chunk, encoding, cb);\n          });\n      };\n    }\n    runWithAsyncContext(() => {\n      const currentHub = getCurrentHub();\n      currentHub.configureScope(scope => {\n        scope.setSDKProcessingMetadata({\n          request: req,\n          // TODO (v8): Stop passing this\n          requestDataOptionsFromExpressHandler: requestDataOptions,\n        });\n\n        const client = currentHub.getClient<NodeClient>();\n        if (isAutoSessionTrackingEnabled(client)) {\n          const scope = currentHub.getScope();\n          if (scope) {\n            // Set `status` of `RequestSession` to Ok, at the beginning of the request\n            scope.setRequestSession({ status: 'ok' });\n          }\n        }\n      });\n\n      res.once('finish', () => {\n        const client = currentHub.getClient<NodeClient>();\n        if (isAutoSessionTrackingEnabled(client)) {\n          setImmediate(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (client && (client as any)._captureRequestSession) {\n              // Calling _captureRequestSession to capture request session at the end of the request by incrementing\n              // the correct SessionAggregates bucket i.e. crashed, errored or exited\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n              (client as any)._captureRequestSession();\n            }\n          });\n        }\n      });\n      next();\n    });\n  };\n}\n\n/** JSDoc */\ninterface MiddlewareError extends Error {\n  status?: number | string;\n  statusCode?: number | string;\n  status_code?: number | string;\n  output?: {\n    statusCode?: number | string;\n  };\n}\n\n/** JSDoc */\nfunction getStatusCodeFromResponse(error: MiddlewareError): number {\n  const statusCode = error.status || error.statusCode || error.status_code || (error.output && error.output.statusCode);\n  return statusCode ? parseInt(statusCode as string, 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error: MiddlewareError): boolean {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n\n/**\n * Express compatible error handler.\n * @see Exposed as `Handlers.errorHandler`\n */\nexport function errorHandler(options?: {\n  /**\n   * Callback method deciding whether error should be captured and sent to Sentry\n   * @param error Captured middleware error\n   */\n  shouldHandleError?(this: void, error: MiddlewareError): boolean;\n}): (\n  error: MiddlewareError,\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error: MiddlewareError) => void,\n) => void {\n  return function sentryErrorMiddleware(\n    error: MiddlewareError,\n    _req: http.IncomingMessage,\n    res: http.ServerResponse,\n    next: (error: MiddlewareError) => void,\n  ): void {\n    const shouldHandleError = (options && options.shouldHandleError) || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      withScope(_scope => {\n        // The request should already have been stored in `scope.sdkProcessingMetadata` by `sentryRequestMiddleware`,\n        // but on the off chance someone is using `sentryErrorMiddleware` without `sentryRequestMiddleware`, it doesn't\n        // hurt to be sure\n        _scope.setSDKProcessingMetadata({ request: _req });\n\n        // For some reason we need to set the transaction on the scope again\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const transaction = (res as any).__sentry_transaction as Span;\n        if (transaction && _scope.getSpan() === undefined) {\n          _scope.setSpan(transaction);\n        }\n\n        const client = getCurrentHub().getClient<NodeClient>();\n        if (client && isAutoSessionTrackingEnabled(client)) {\n          // Check if the `SessionFlusher` is instantiated on the client to go into this branch that marks the\n          // `requestSession.status` as `Crashed`, and this check is necessary because the `SessionFlusher` is only\n          // instantiated when the the`requestHandler` middleware is initialised, which indicates that we should be\n          // running in SessionAggregates mode\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          const isSessionAggregatesMode = (client as any)._sessionFlusher !== undefined;\n          if (isSessionAggregatesMode) {\n            const requestSession = _scope.getRequestSession();\n            // If an error bubbles to the `errorHandler`, then this is an unhandled error, and should be reported as a\n            // Crashed session. The `_requestSession.status` is checked to ensure that this error is happening within\n            // the bounds of a request, and if so the status is updated\n            if (requestSession && requestSession.status !== undefined) {\n              requestSession.status = 'crashed';\n            }\n          }\n        }\n\n        _scope.addEventProcessor(event => {\n          addExceptionMechanism(event, { type: 'middleware', handled: false });\n          return event;\n        });\n\n        const eventId = captureException(error);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (res as any).sentry = eventId;\n        next(error);\n      });\n\n      return;\n    }\n\n    next(error);\n  };\n}\n\ninterface SentryTrpcMiddlewareOptions {\n  /** Whether to include procedure inputs in reported events. Defaults to `false`. */\n  attachRpcInput?: boolean;\n}\n\ninterface TrpcMiddlewareArguments<T> {\n  path: string;\n  type: 'query' | 'mutation' | 'subscription';\n  next: () => T;\n  rawInput: unknown;\n}\n\n/**\n * Sentry tRPC middleware that names the handling transaction after the called procedure.\n *\n * Use the Sentry tRPC middleware in combination with the Sentry server integration,\n * e.g. Express Request Handlers or Next.js SDK.\n */\nexport function trpcMiddleware(options: SentryTrpcMiddlewareOptions = {}) {\n  return function <T>({ path, type, next, rawInput }: TrpcMiddlewareArguments<T>): T {\n    const hub = getCurrentHub();\n    const clientOptions = hub.getClient()?.getOptions();\n    const sentryTransaction = hub.getScope().getTransaction();\n\n    if (sentryTransaction) {\n      sentryTransaction.setName(`trpc/${path}`, 'route');\n      sentryTransaction.op = 'rpc.server';\n\n      const trpcContext: Record<string, unknown> = {\n        procedure_type: type,\n      };\n\n      if (options.attachRpcInput !== undefined ? options.attachRpcInput : clientOptions?.sendDefaultPii) {\n        trpcContext.input = normalize(rawInput);\n      }\n\n      sentryTransaction.setContext('trpc', trpcContext);\n    }\n\n    return next();\n  };\n}\n\n// TODO (v8 / #5257): Remove this\n// eslint-disable-next-line deprecation/deprecation\nexport type { ParseRequestOptions, ExpressRequest } from './requestDataDeprecated';\n// eslint-disable-next-line deprecation/deprecation\nexport { parseRequest, extractRequestData } from './requestDataDeprecated';\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst console = require('./console.js');\nconst http = require('./http.js');\nconst onuncaughtexception = require('./onuncaughtexception.js');\nconst onunhandledrejection = require('./onunhandledrejection.js');\nconst linkederrors = require('./linkederrors.js');\nconst modules = require('./modules.js');\nconst contextlines = require('./contextlines.js');\nconst context = require('./context.js');\nconst requestdata = require('./requestdata.js');\nconst localvariables = require('./localvariables.js');\nconst index = require('./undici/index.js');\n\n\n\nexports.Console = console.Console;\nexports.Http = http.Http;\nexports.OnUncaughtException = onuncaughtexception.OnUncaughtException;\nexports.OnUnhandledRejection = onunhandledrejection.OnUnhandledRejection;\nexports.LinkedErrors = linkederrors.LinkedErrors;\nexports.Modules = modules.Modules;\nexports.ContextLines = contextlines.ContextLines;\nexports.Context = context.Context;\nexports.RequestData = requestdata.RequestData;\nexports.LocalVariables = localvariables.LocalVariables;\nexports.Undici = index.Undici;\n//# sourceMappingURL=index.js.map\n", "Object.defineProperty(exports, '__esModule', { value: true });\n\nconst tracing = require('@sentry-internal/tracing');\n\n\n\nexports.Apollo = tracing.Apollo;\nexports.Express = tracing.Express;\nexports.GraphQL = tracing.GraphQL;\nexports.Mongo = tracing.Mongo;\nexports.Mysql = tracing.Mysql;\nexports.Postgres = tracing.Postgres;\nexports.Prisma = tracing.Prisma;\n//# sourceMappingURL=integrations.js.map\n", "export type {\n  Breadcrumb,\n  BreadcrumbHint,\n  PolymorphicRequest,\n  Request,\n  SdkInfo,\n  Event,\n  EventHint,\n  Exception,\n  Session,\n  // eslint-disable-next-line deprecation/deprecation\n  Severity,\n  SeverityLevel,\n  Span,\n  StackFrame,\n  Stacktrace,\n  Thread,\n  Transaction,\n  User,\n} from '@sentry/types';\nexport type { AddRequestDataToEventOptions } from '@sentry/utils';\n\nexport type { TransactionNamingScheme } from './requestdata';\nexport type { NodeOptions } from './types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  createTransport,\n  extractTraceparentData,\n  getActiveTransaction,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  makeMain,\n  runWithAsyncContext,\n  Scope,\n  startTransaction,\n  SDK_VERSION,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  spanStatusfromHttpCode,\n  trace,\n  withScope,\n  captureCheckIn,\n} from '@sentry/core';\nexport type { SpanStatusType } from '@sentry/core';\nexport { autoDiscoverNodePerformanceMonitoringIntegrations } from './tracing';\n\nexport { NodeClient } from './client';\nexport { makeNodeTransport } from './transports';\nexport { defaultIntegrations, init, defaultStackParser, lastEventId, flush, close, getSentryRelease } from './sdk';\nexport { addRequestDataToEvent, DEFAULT_USER_INCLUDES, extractRequestData } from './requestdata';\nexport { deepReadDirSync } from './utils';\nexport { getModuleFromFilename } from './module';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\n\nimport * as Handlers from './handlers';\nimport * as NodeIntegrations from './integrations';\nimport * as TracingIntegrations from './tracing/integrations';\n\nconst INTEGRATIONS = {\n  ...CoreIntegrations,\n  ...NodeIntegrations,\n  ...TracingIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Handlers };\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "module.exports = require('util').inspect;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/**\n * Private utility functions\n * @module utils\n * @private\n */\n\n'use strict';\n\nvar regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hasOwn = function (obj, key) { return hasOwnProperty.apply(obj, [key]); };\n\n/**\n * Escape characters reserved in regular expressions.\n *\n * If `string` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} string Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\nexports.escapeRegExpChars = function (string) {\n  // istanbul ignore if\n  if (!string) {\n    return '';\n  }\n  return String(string).replace(regExpChars, '\\\\$&');\n};\n\nvar _ENCODE_HTML_RULES = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n};\nvar _MATCH_HTML = /[&<>'\"]/g;\n\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n}\n\n/**\n * Stringified version of constants used by {@link module:utils.escapeXML}.\n *\n * It is used in the process of generating {@link ClientFunction}s.\n *\n * @readonly\n * @type {String}\n */\n\nvar escapeFuncStr =\n  'var _ENCODE_HTML_RULES = {\\n'\n+ '      \"&\": \"&amp;\"\\n'\n+ '    , \"<\": \"&lt;\"\\n'\n+ '    , \">\": \"&gt;\"\\n'\n+ '    , \\'\"\\': \"&#34;\"\\n'\n+ '    , \"\\'\": \"&#39;\"\\n'\n+ '    }\\n'\n+ '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\n+ 'function encode_char(c) {\\n'\n+ '  return _ENCODE_HTML_RULES[c] || c;\\n'\n+ '};\\n';\n\n/**\n * Escape characters reserved in XML.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @implements {EscapeCallback}\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\n\nexports.escapeXML = function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\n\nfunction escapeXMLToString() {\n  return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\n}\n\ntry {\n  if (typeof Object.defineProperty === 'function') {\n  // If the Function prototype is frozen, the \"toString\" property is non-writable. This means that any objects which inherit this property\n  // cannot have the property changed using an assignment. If using strict mode, attempting that will cause an error. If not using strict\n  // mode, attempting that will be silently ignored.\n  // However, we can still explicitly shadow the prototype's \"toString\" property by defining a new \"toString\" property on this object.\n    Object.defineProperty(exports.escapeXML, 'toString', { value: escapeXMLToString });\n  } else {\n    // If Object.defineProperty() doesn't exist, attempt to shadow this property using the assignment operator.\n    exports.escapeXML.toString = escapeXMLToString;\n  }\n} catch (err) {\n  console.warn('Unable to set escapeXML.toString (is the Function prototype frozen?)');\n}\n\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopy = function (to, from) {\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var p in from) {\n      if (!hasOwn(from, p)) {\n        continue;\n      }\n      if (p === '__proto__' || p === 'constructor') {\n        continue;\n      }\n      to[p] = from[p];\n    }\n  }\n  return to;\n};\n\n/**\n * Naive copy of a list of key names, from one object to another.\n * Only copies property if it is actually defined\n * Does not recurse into non-scalar properties\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @param  {Array} list List of properties to copy\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopyFromList = function (to, from, list) {\n  list = list || [];\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var i = 0; i < list.length; i++) {\n      var p = list[i];\n      if (typeof from[p] != 'undefined') {\n        if (!hasOwn(from, p)) {\n          continue;\n        }\n        if (p === '__proto__' || p === 'constructor') {\n          continue;\n        }\n        to[p] = from[p];\n      }\n    }\n  }\n  return to;\n};\n\n/**\n * Simple in-process cache implementation. Does not implement limits of any\n * sort.\n *\n * @implements {Cache}\n * @static\n * @private\n */\nexports.cache = {\n  _data: {},\n  set: function (key, val) {\n    this._data[key] = val;\n  },\n  get: function (key) {\n    return this._data[key];\n  },\n  remove: function (key) {\n    delete this._data[key];\n  },\n  reset: function () {\n    this._data = {};\n  }\n};\n\n/**\n * Transforms hyphen case variable into camel case.\n *\n * @param {String} string Hyphen case string\n * @return {String} Camel case string\n * @static\n * @private\n */\nexports.hyphenToCamel = function (str) {\n  return str.replace(/-[a-z]/g, function (match) { return match[1].toUpperCase(); });\n};\n\n/**\n * Returns a null-prototype object in runtimes that support it\n *\n * @return {Object} Object, prototype will be set to null where possible\n * @static\n * @private\n */\nexports.createNullProtoObjWherePossible = (function () {\n  if (typeof Object.create == 'function') {\n    return function () {\n      return Object.create(null);\n    };\n  }\n  if (!({__proto__: null} instanceof Object)) {\n    return function () {\n      return {__proto__: null};\n    };\n  }\n  // Not possible, just pass through\n  return function () {\n    return {};\n  };\n})();\n\n\n", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n'use strict';\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\n\nvar fs = require('fs');\nvar path = require('path');\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\n/** @type {string} */\nvar _VERSION_STRING = require('../package.json').version;\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n  'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\n// We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\nvar _BOM = /^\\uFEFF/;\nvar _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {PromiseConstructorLike}\n * @public\n */\n\nexports.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} [isDir=false] whether the parent file path is a directory\n * @return {String}\n */\nexports.resolveInclude = function(name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) {\n    includePath += '.ejs';\n  }\n  return includePath;\n};\n\n/**\n * Try to resolve file path on multiple directories\n *\n * @param  {String}        name  specified path\n * @param  {Array<String>} paths list of possible parent directory paths\n * @return {String}\n */\nfunction resolvePaths(name, paths) {\n  var filePath;\n  if (paths.some(function (v) {\n    filePath = exports.resolveInclude(name, v, true);\n    return fs.existsSync(filePath);\n  })) {\n    return filePath;\n  }\n}\n\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path);\n\n  // Abs path\n  if (match && match.length) {\n    path = path.replace(/^\\/*/, '');\n    if (Array.isArray(options.root)) {\n      includePath = resolvePaths(path, options.root);\n    } else {\n      includePath = exports.resolveInclude(path, options.root || '/', true);\n    }\n  }\n  // Relative paths\n  else {\n    // Look relative to a passed filename first\n    if (options.filename) {\n      filePath = exports.resolveInclude(path, options.filename);\n      if (fs.existsSync(filePath)) {\n        includePath = filePath;\n      }\n    }\n    // Then look in any views directories\n    if (!includePath && Array.isArray(views)) {\n      includePath = resolvePaths(path, views);\n    }\n    if (!includePath && typeof options.includer !== 'function') {\n      throw new Error('Could not find the include file \"' +\n          options.escapeFunction(path) + '\"');\n    }\n  }\n  return includePath;\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n    func = exports.cache.get(filename);\n    if (func) {\n      return func;\n    }\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  }\n  else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template '\n                    + 'provided');\n    }\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n  func = exports.compile(template, options);\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n  return func;\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        }\n        catch (err) {\n          reject(err);\n        }\n      });\n    }\n    else {\n      throw new Error('Please provide a callback function');\n    }\n  }\n  else {\n    try {\n      result = handleCache(options)(data);\n    }\n    catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\nfunction fileLoader(filePath){\n  return exports.fileLoader(filePath);\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\n  opts.filename = getIncludePath(path, opts);\n  if (typeof options.includer === 'function') {\n    var includerResult = options.includer(path, opts.filename);\n    if (includerResult) {\n      if (includerResult.filename) {\n        opts.filename = includerResult.filename;\n      }\n      if (includerResult.template) {\n        return handleCache(opts, includerResult.template);\n      }\n    }\n  }\n  return handleCache(opts);\n}\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements {RethrowCallback}\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} flnm     file name of the EJS file\n * @param {Number} lineno   line number of the error\n * @param {EscapeCallback} esc\n * @static\n */\n\nfunction rethrow(err, str, flnm, lineno, esc) {\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm);\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\nfunction stripSemi(str){\n  return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} [opts] compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nexports.compile = function compile(template, opts) {\n  var templ;\n\n  // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned){\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n    delete opts.scope;\n  }\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nexports.render = function (template, d, o) {\n  var data = d || utils.createNullProtoObjWherePossible();\n  var opts = o || utils.createNullProtoObjWherePossible();\n\n  // No options object -- if there are optiony names\n  // in the data, copy them to options\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {filename: filename};\n  var data;\n  var viewOpts;\n\n  // Do we have a callback?\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  }\n  // Do we have data/opts?\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift();\n    // Normal passed opts (data obj + opts obj)\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    }\n    // Special casing for Express (settings + opts-in-data)\n    else {\n      // Express 3 and 4\n      if (data.settings) {\n        // Pull a few things from known locations\n        if (data.settings.views) {\n          opts.views = data.settings.views;\n        }\n        if (data.settings['view cache']) {\n          opts.cache = true;\n        }\n        // Undocumented after Express 2, but still usable, esp. for\n        // items that are unsafe to be passed along with data, like `root`\n        viewOpts = data.settings['view options'];\n        if (viewOpts) {\n          utils.shallowCopy(opts, viewOpts);\n        }\n      }\n      // Express 2 and lower, values set in app.locals, or people who just\n      // want to pass options in their data. NOTE: These values will override\n      // anything previously set in settings  or settings['view options']\n      utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n    }\n    opts.filename = filename;\n  }\n  else {\n    data = utils.createNullProtoObjWherePossible();\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, opts) {\n  opts = opts || utils.createNullProtoObjWherePossible();\n  var options = utils.createNullProtoObjWherePossible();\n  this.templateText = text;\n  /** @type {string | null} */\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.includer = opts.includer;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  }\n  else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim)\n      .replace(/</g, open)\n      .replace(/>/g, close);\n    return new RegExp(str);\n  },\n\n  compile: function () {\n    /** @type {string} */\n    var src;\n    /** @type {ClientFunction} */\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    /** @type {EscapeCallback} */\n    var escapeFn = opts.escapeFunction;\n    /** @type {FunctionConstructor} */\n    var ctor;\n    /** @type {string} */\n    var sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\n\n    if (!this.source) {\n      this.generateSource();\n      prepended +=\n        '  var __output = \"\";\\n' +\n        '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n      if (opts.outputFunctionName) {\n        if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\n          throw new Error('outputFunctionName is not a valid JS identifier.');\n        }\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n      if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\n        throw new Error('localsName is not a valid JS identifier.');\n      }\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n          if (!_JS_IDENTIFIER.test(name)) {\n            throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\n          }\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n          destructuring += name + ' = __locals.' + name;\n        }\n        prepended += destructuring + ';\\n';\n      }\n      if (opts._with !== false) {\n        prepended +=  '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n'\n        + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n        + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\n        + 'try {' + '\\n'\n        + this.source\n        + '} catch (e) {' + '\\n'\n        + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n        + '}' + '\\n';\n    }\n    else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n    if (opts.debug) {\n      console.log(src);\n    }\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n'\n        + '//# sourceURL=' + sanitizedFilename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = (new Function('return (async function(){}).constructor;'))();\n        }\n        catch(e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          }\n          else {\n            throw e;\n          }\n        }\n      }\n      else {\n        ctor = Function;\n      }\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    }\n    catch(e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n      throw e;\n    }\n\n    // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n        return includeFile(path, opts)(d);\n      };\n      return fn.apply(opts.context,\n        [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\n    };\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {/* ignore */}\n    }\n    return returnedFn;\n  },\n\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText =\n        this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    // Slurp spaces and tabs before <%_ and after _%>\n    this.templateText =\n      this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var closing;\n        // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n        if ( line.indexOf(o + d) === 0        // If it is a tag\n          && line.indexOf(o + d + d) !== 0) { // and is not escaped\n          closing = matches[index + 2];\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        }\n        self.scanLine(line);\n      });\n    }\n\n  },\n\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n    if (!line) {\n      return line;\n    }\n\n    // Preserve literal slashes\n    line = line.replace(/\\\\/g, '\\\\\\\\');\n\n    // Convert linebreaks\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r');\n\n    // Escape double-quotes\n    // - this will be the delimiter during execution\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n\n    newLineCount = (line.split('\\n').length - 1);\n\n    switch (line) {\n    case o + d:\n    case o + d + '_':\n      this.mode = Template.modes.EVAL;\n      break;\n    case o + d + '=':\n      this.mode = Template.modes.ESCAPED;\n      break;\n    case o + d + '-':\n      this.mode = Template.modes.RAW;\n      break;\n    case o + d + '#':\n      this.mode = Template.modes.COMMENT;\n      break;\n    case o + d + d:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n      break;\n    case d + d + c:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n      break;\n    case d + c:\n    case '-' + d + c:\n    case '_' + d + c:\n      if (this.mode == Template.modes.LITERAL) {\n        this._addOutput(line);\n      }\n\n      this.mode = null;\n      this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n      break;\n    default:\n      // In script mode, depends on type of tag\n      if (this.mode) {\n        // If '//' is found without a line break, add a line break.\n        switch (this.mode) {\n        case Template.modes.EVAL:\n        case Template.modes.ESCAPED:\n        case Template.modes.RAW:\n          if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n            line += '\\n';\n          }\n        }\n        switch (this.mode) {\n        // Just executing code\n        case Template.modes.EVAL:\n          this.source += '    ; ' + line + '\\n';\n          break;\n          // Exec, esc, and output\n        case Template.modes.ESCAPED:\n          this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n          break;\n          // Exec and output\n        case Template.modes.RAW:\n          this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n          break;\n        case Template.modes.COMMENT:\n          // Do nothing\n          break;\n          // Literal <%% mode, append as raw output\n        case Template.modes.LITERAL:\n          this._addOutput(line);\n          break;\n        }\n      }\n      // In string mode, just add the output\n      else {\n        this._addOutput(line);\n      }\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nexports.escapeXML = utils.escapeXML;\n\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile;\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n\n/* istanbul ignore if */\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}\n", "/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\'section-\\' prefix',\n      type: 'string'\n    },\n    rawPrefixHeaderId: {\n      defaultValue: false,\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)',\n      type: 'boolean'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    rawHeaderId: {\n      defaultValue: false,\n      describe: 'Remove only spaces, \\' and \" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    literalMidWordAsterisks: {\n      defaultValue: false,\n      describe: 'Parse midword asterisks as literal asterisks',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      describe: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      describe: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      describe: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      describe: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      describe: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      describe: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      describe: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    },\n    openLinksInNewWindow: {\n      defaultValue: false,\n      describe: 'Open all links in new windows',\n      type: 'boolean'\n    },\n    backslashEscapesHTMLTags: {\n      defaultValue: false,\n      describe: 'Support for HTML Tag escaping. ex: \\<div>foo\\</div>',\n      type: 'boolean'\n    },\n    emoji: {\n      defaultValue: false,\n      describe: 'Enable emoji support. Ex: `this is a :smile: emoji`',\n      type: 'boolean'\n    },\n    underline: {\n      defaultValue: false,\n      describe: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\n      type: 'boolean'\n    },\n    ellipsis: {\n      defaultValue: true,\n      describe: 'Replaces three dots with the ellipsis unicode character',\n      type: 'boolean'\n    },\n    completeHTMLDocument: {\n      defaultValue: false,\n      describe: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\n      type: 'boolean'\n    },\n    metadata: {\n      defaultValue: false,\n      describe: 'Enable support for document metadata (defined at the top of the document between `\u00AB\u00AB\u00AB` and `\u00BB\u00BB\u00BB` or between `---` and `---`).',\n      type: 'boolean'\n    },\n    splitAdjacentBlockquotes: {\n      defaultValue: false,\n      describe: 'Split adjacent blockquote blocks',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n", "/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true,\n        backslashEscapesHTMLTags:             true,\n        emoji:                                true,\n        splitAdjacentBlockquotes:             true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  showdown.resetOptions();\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|object[]|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n", "/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return Array.isArray(a);\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '\u00A8E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\n/**\n * Unescape HTML entities\n * @param txt\n * @returns {string}\n */\nshowdown.helper.unescapeHTMLEntities = function (txt) {\n  'use strict';\n\n  return txt\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&');\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Returns the index within the passed String object of the first occurrence of the specified regex,\n * starting the search at fromIndex. Returns -1 if the value is not found.\n *\n * @param {string} str string to search\n * @param {RegExp} regex Regular expression to search\n * @param {int} [fromIndex = 0] Index to start the search\n * @returns {Number}\n * @throws InvalidArgumentError\n */\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  if (regex instanceof RegExp === false) {\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\n  }\n  var indexOf = str.substring(fromIndex || 0).search(regex);\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\n};\n\n/**\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\n * @param {string} str string to split\n * @param {int} index index to split string at\n * @returns {[string,string]}\n * @throws InvalidArgumentError\n */\nshowdown.helper.splitAtIndex = function (str, index) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  return [str.substring(0, index), str.substring(index)];\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n *\n * @param str\n * @param targetLength\n * @param padString\n * @returns {string}\n */\nshowdown.helper.padEnd = function padEnd (str, targetLength, padString) {\n  'use strict';\n  /*jshint bitwise: false*/\n  // eslint-disable-next-line space-infix-ops\n  targetLength = targetLength>>0; //floor if number or convert non-number to 0;\n  /*jshint bitwise: true*/\n  padString = String(padString || ' ');\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n    }\n    return String(str) + padString.slice(0,targetLength);\n  }\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof (console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskDashAndColon: /([*_:~])/g\n};\n\n/**\n * EMOJIS LIST\n */\nshowdown.helper.emojis = {\n  '+1':'\\ud83d\\udc4d',\n  '-1':'\\ud83d\\udc4e',\n  '100':'\\ud83d\\udcaf',\n  '1234':'\\ud83d\\udd22',\n  '1st_place_medal':'\\ud83e\\udd47',\n  '2nd_place_medal':'\\ud83e\\udd48',\n  '3rd_place_medal':'\\ud83e\\udd49',\n  '8ball':'\\ud83c\\udfb1',\n  'a':'\\ud83c\\udd70\\ufe0f',\n  'ab':'\\ud83c\\udd8e',\n  'abc':'\\ud83d\\udd24',\n  'abcd':'\\ud83d\\udd21',\n  'accept':'\\ud83c\\ude51',\n  'aerial_tramway':'\\ud83d\\udea1',\n  'airplane':'\\u2708\\ufe0f',\n  'alarm_clock':'\\u23f0',\n  'alembic':'\\u2697\\ufe0f',\n  'alien':'\\ud83d\\udc7d',\n  'ambulance':'\\ud83d\\ude91',\n  'amphora':'\\ud83c\\udffa',\n  'anchor':'\\u2693\\ufe0f',\n  'angel':'\\ud83d\\udc7c',\n  'anger':'\\ud83d\\udca2',\n  'angry':'\\ud83d\\ude20',\n  'anguished':'\\ud83d\\ude27',\n  'ant':'\\ud83d\\udc1c',\n  'apple':'\\ud83c\\udf4e',\n  'aquarius':'\\u2652\\ufe0f',\n  'aries':'\\u2648\\ufe0f',\n  'arrow_backward':'\\u25c0\\ufe0f',\n  'arrow_double_down':'\\u23ec',\n  'arrow_double_up':'\\u23eb',\n  'arrow_down':'\\u2b07\\ufe0f',\n  'arrow_down_small':'\\ud83d\\udd3d',\n  'arrow_forward':'\\u25b6\\ufe0f',\n  'arrow_heading_down':'\\u2935\\ufe0f',\n  'arrow_heading_up':'\\u2934\\ufe0f',\n  'arrow_left':'\\u2b05\\ufe0f',\n  'arrow_lower_left':'\\u2199\\ufe0f',\n  'arrow_lower_right':'\\u2198\\ufe0f',\n  'arrow_right':'\\u27a1\\ufe0f',\n  'arrow_right_hook':'\\u21aa\\ufe0f',\n  'arrow_up':'\\u2b06\\ufe0f',\n  'arrow_up_down':'\\u2195\\ufe0f',\n  'arrow_up_small':'\\ud83d\\udd3c',\n  'arrow_upper_left':'\\u2196\\ufe0f',\n  'arrow_upper_right':'\\u2197\\ufe0f',\n  'arrows_clockwise':'\\ud83d\\udd03',\n  'arrows_counterclockwise':'\\ud83d\\udd04',\n  'art':'\\ud83c\\udfa8',\n  'articulated_lorry':'\\ud83d\\ude9b',\n  'artificial_satellite':'\\ud83d\\udef0',\n  'astonished':'\\ud83d\\ude32',\n  'athletic_shoe':'\\ud83d\\udc5f',\n  'atm':'\\ud83c\\udfe7',\n  'atom_symbol':'\\u269b\\ufe0f',\n  'avocado':'\\ud83e\\udd51',\n  'b':'\\ud83c\\udd71\\ufe0f',\n  'baby':'\\ud83d\\udc76',\n  'baby_bottle':'\\ud83c\\udf7c',\n  'baby_chick':'\\ud83d\\udc24',\n  'baby_symbol':'\\ud83d\\udebc',\n  'back':'\\ud83d\\udd19',\n  'bacon':'\\ud83e\\udd53',\n  'badminton':'\\ud83c\\udff8',\n  'baggage_claim':'\\ud83d\\udec4',\n  'baguette_bread':'\\ud83e\\udd56',\n  'balance_scale':'\\u2696\\ufe0f',\n  'balloon':'\\ud83c\\udf88',\n  'ballot_box':'\\ud83d\\uddf3',\n  'ballot_box_with_check':'\\u2611\\ufe0f',\n  'bamboo':'\\ud83c\\udf8d',\n  'banana':'\\ud83c\\udf4c',\n  'bangbang':'\\u203c\\ufe0f',\n  'bank':'\\ud83c\\udfe6',\n  'bar_chart':'\\ud83d\\udcca',\n  'barber':'\\ud83d\\udc88',\n  'baseball':'\\u26be\\ufe0f',\n  'basketball':'\\ud83c\\udfc0',\n  'basketball_man':'\\u26f9\\ufe0f',\n  'basketball_woman':'\\u26f9\\ufe0f&zwj;\\u2640\\ufe0f',\n  'bat':'\\ud83e\\udd87',\n  'bath':'\\ud83d\\udec0',\n  'bathtub':'\\ud83d\\udec1',\n  'battery':'\\ud83d\\udd0b',\n  'beach_umbrella':'\\ud83c\\udfd6',\n  'bear':'\\ud83d\\udc3b',\n  'bed':'\\ud83d\\udecf',\n  'bee':'\\ud83d\\udc1d',\n  'beer':'\\ud83c\\udf7a',\n  'beers':'\\ud83c\\udf7b',\n  'beetle':'\\ud83d\\udc1e',\n  'beginner':'\\ud83d\\udd30',\n  'bell':'\\ud83d\\udd14',\n  'bellhop_bell':'\\ud83d\\udece',\n  'bento':'\\ud83c\\udf71',\n  'biking_man':'\\ud83d\\udeb4',\n  'bike':'\\ud83d\\udeb2',\n  'biking_woman':'\\ud83d\\udeb4&zwj;\\u2640\\ufe0f',\n  'bikini':'\\ud83d\\udc59',\n  'biohazard':'\\u2623\\ufe0f',\n  'bird':'\\ud83d\\udc26',\n  'birthday':'\\ud83c\\udf82',\n  'black_circle':'\\u26ab\\ufe0f',\n  'black_flag':'\\ud83c\\udff4',\n  'black_heart':'\\ud83d\\udda4',\n  'black_joker':'\\ud83c\\udccf',\n  'black_large_square':'\\u2b1b\\ufe0f',\n  'black_medium_small_square':'\\u25fe\\ufe0f',\n  'black_medium_square':'\\u25fc\\ufe0f',\n  'black_nib':'\\u2712\\ufe0f',\n  'black_small_square':'\\u25aa\\ufe0f',\n  'black_square_button':'\\ud83d\\udd32',\n  'blonde_man':'\\ud83d\\udc71',\n  'blonde_woman':'\\ud83d\\udc71&zwj;\\u2640\\ufe0f',\n  'blossom':'\\ud83c\\udf3c',\n  'blowfish':'\\ud83d\\udc21',\n  'blue_book':'\\ud83d\\udcd8',\n  'blue_car':'\\ud83d\\ude99',\n  'blue_heart':'\\ud83d\\udc99',\n  'blush':'\\ud83d\\ude0a',\n  'boar':'\\ud83d\\udc17',\n  'boat':'\\u26f5\\ufe0f',\n  'bomb':'\\ud83d\\udca3',\n  'book':'\\ud83d\\udcd6',\n  'bookmark':'\\ud83d\\udd16',\n  'bookmark_tabs':'\\ud83d\\udcd1',\n  'books':'\\ud83d\\udcda',\n  'boom':'\\ud83d\\udca5',\n  'boot':'\\ud83d\\udc62',\n  'bouquet':'\\ud83d\\udc90',\n  'bowing_man':'\\ud83d\\ude47',\n  'bow_and_arrow':'\\ud83c\\udff9',\n  'bowing_woman':'\\ud83d\\ude47&zwj;\\u2640\\ufe0f',\n  'bowling':'\\ud83c\\udfb3',\n  'boxing_glove':'\\ud83e\\udd4a',\n  'boy':'\\ud83d\\udc66',\n  'bread':'\\ud83c\\udf5e',\n  'bride_with_veil':'\\ud83d\\udc70',\n  'bridge_at_night':'\\ud83c\\udf09',\n  'briefcase':'\\ud83d\\udcbc',\n  'broken_heart':'\\ud83d\\udc94',\n  'bug':'\\ud83d\\udc1b',\n  'building_construction':'\\ud83c\\udfd7',\n  'bulb':'\\ud83d\\udca1',\n  'bullettrain_front':'\\ud83d\\ude85',\n  'bullettrain_side':'\\ud83d\\ude84',\n  'burrito':'\\ud83c\\udf2f',\n  'bus':'\\ud83d\\ude8c',\n  'business_suit_levitating':'\\ud83d\\udd74',\n  'busstop':'\\ud83d\\ude8f',\n  'bust_in_silhouette':'\\ud83d\\udc64',\n  'busts_in_silhouette':'\\ud83d\\udc65',\n  'butterfly':'\\ud83e\\udd8b',\n  'cactus':'\\ud83c\\udf35',\n  'cake':'\\ud83c\\udf70',\n  'calendar':'\\ud83d\\udcc6',\n  'call_me_hand':'\\ud83e\\udd19',\n  'calling':'\\ud83d\\udcf2',\n  'camel':'\\ud83d\\udc2b',\n  'camera':'\\ud83d\\udcf7',\n  'camera_flash':'\\ud83d\\udcf8',\n  'camping':'\\ud83c\\udfd5',\n  'cancer':'\\u264b\\ufe0f',\n  'candle':'\\ud83d\\udd6f',\n  'candy':'\\ud83c\\udf6c',\n  'canoe':'\\ud83d\\udef6',\n  'capital_abcd':'\\ud83d\\udd20',\n  'capricorn':'\\u2651\\ufe0f',\n  'car':'\\ud83d\\ude97',\n  'card_file_box':'\\ud83d\\uddc3',\n  'card_index':'\\ud83d\\udcc7',\n  'card_index_dividers':'\\ud83d\\uddc2',\n  'carousel_horse':'\\ud83c\\udfa0',\n  'carrot':'\\ud83e\\udd55',\n  'cat':'\\ud83d\\udc31',\n  'cat2':'\\ud83d\\udc08',\n  'cd':'\\ud83d\\udcbf',\n  'chains':'\\u26d3',\n  'champagne':'\\ud83c\\udf7e',\n  'chart':'\\ud83d\\udcb9',\n  'chart_with_downwards_trend':'\\ud83d\\udcc9',\n  'chart_with_upwards_trend':'\\ud83d\\udcc8',\n  'checkered_flag':'\\ud83c\\udfc1',\n  'cheese':'\\ud83e\\uddc0',\n  'cherries':'\\ud83c\\udf52',\n  'cherry_blossom':'\\ud83c\\udf38',\n  'chestnut':'\\ud83c\\udf30',\n  'chicken':'\\ud83d\\udc14',\n  'children_crossing':'\\ud83d\\udeb8',\n  'chipmunk':'\\ud83d\\udc3f',\n  'chocolate_bar':'\\ud83c\\udf6b',\n  'christmas_tree':'\\ud83c\\udf84',\n  'church':'\\u26ea\\ufe0f',\n  'cinema':'\\ud83c\\udfa6',\n  'circus_tent':'\\ud83c\\udfaa',\n  'city_sunrise':'\\ud83c\\udf07',\n  'city_sunset':'\\ud83c\\udf06',\n  'cityscape':'\\ud83c\\udfd9',\n  'cl':'\\ud83c\\udd91',\n  'clamp':'\\ud83d\\udddc',\n  'clap':'\\ud83d\\udc4f',\n  'clapper':'\\ud83c\\udfac',\n  'classical_building':'\\ud83c\\udfdb',\n  'clinking_glasses':'\\ud83e\\udd42',\n  'clipboard':'\\ud83d\\udccb',\n  'clock1':'\\ud83d\\udd50',\n  'clock10':'\\ud83d\\udd59',\n  'clock1030':'\\ud83d\\udd65',\n  'clock11':'\\ud83d\\udd5a',\n  'clock1130':'\\ud83d\\udd66',\n  'clock12':'\\ud83d\\udd5b',\n  'clock1230':'\\ud83d\\udd67',\n  'clock130':'\\ud83d\\udd5c',\n  'clock2':'\\ud83d\\udd51',\n  'clock230':'\\ud83d\\udd5d',\n  'clock3':'\\ud83d\\udd52',\n  'clock330':'\\ud83d\\udd5e',\n  'clock4':'\\ud83d\\udd53',\n  'clock430':'\\ud83d\\udd5f',\n  'clock5':'\\ud83d\\udd54',\n  'clock530':'\\ud83d\\udd60',\n  'clock6':'\\ud83d\\udd55',\n  'clock630':'\\ud83d\\udd61',\n  'clock7':'\\ud83d\\udd56',\n  'clock730':'\\ud83d\\udd62',\n  'clock8':'\\ud83d\\udd57',\n  'clock830':'\\ud83d\\udd63',\n  'clock9':'\\ud83d\\udd58',\n  'clock930':'\\ud83d\\udd64',\n  'closed_book':'\\ud83d\\udcd5',\n  'closed_lock_with_key':'\\ud83d\\udd10',\n  'closed_umbrella':'\\ud83c\\udf02',\n  'cloud':'\\u2601\\ufe0f',\n  'cloud_with_lightning':'\\ud83c\\udf29',\n  'cloud_with_lightning_and_rain':'\\u26c8',\n  'cloud_with_rain':'\\ud83c\\udf27',\n  'cloud_with_snow':'\\ud83c\\udf28',\n  'clown_face':'\\ud83e\\udd21',\n  'clubs':'\\u2663\\ufe0f',\n  'cocktail':'\\ud83c\\udf78',\n  'coffee':'\\u2615\\ufe0f',\n  'coffin':'\\u26b0\\ufe0f',\n  'cold_sweat':'\\ud83d\\ude30',\n  'comet':'\\u2604\\ufe0f',\n  'computer':'\\ud83d\\udcbb',\n  'computer_mouse':'\\ud83d\\uddb1',\n  'confetti_ball':'\\ud83c\\udf8a',\n  'confounded':'\\ud83d\\ude16',\n  'confused':'\\ud83d\\ude15',\n  'congratulations':'\\u3297\\ufe0f',\n  'construction':'\\ud83d\\udea7',\n  'construction_worker_man':'\\ud83d\\udc77',\n  'construction_worker_woman':'\\ud83d\\udc77&zwj;\\u2640\\ufe0f',\n  'control_knobs':'\\ud83c\\udf9b',\n  'convenience_store':'\\ud83c\\udfea',\n  'cookie':'\\ud83c\\udf6a',\n  'cool':'\\ud83c\\udd92',\n  'policeman':'\\ud83d\\udc6e',\n  'copyright':'\\u00a9\\ufe0f',\n  'corn':'\\ud83c\\udf3d',\n  'couch_and_lamp':'\\ud83d\\udecb',\n  'couple':'\\ud83d\\udc6b',\n  'couple_with_heart_woman_man':'\\ud83d\\udc91',\n  'couple_with_heart_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc68',\n  'couple_with_heart_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc69',\n  'couplekiss_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc68',\n  'couplekiss_man_woman':'\\ud83d\\udc8f',\n  'couplekiss_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc69',\n  'cow':'\\ud83d\\udc2e',\n  'cow2':'\\ud83d\\udc04',\n  'cowboy_hat_face':'\\ud83e\\udd20',\n  'crab':'\\ud83e\\udd80',\n  'crayon':'\\ud83d\\udd8d',\n  'credit_card':'\\ud83d\\udcb3',\n  'crescent_moon':'\\ud83c\\udf19',\n  'cricket':'\\ud83c\\udfcf',\n  'crocodile':'\\ud83d\\udc0a',\n  'croissant':'\\ud83e\\udd50',\n  'crossed_fingers':'\\ud83e\\udd1e',\n  'crossed_flags':'\\ud83c\\udf8c',\n  'crossed_swords':'\\u2694\\ufe0f',\n  'crown':'\\ud83d\\udc51',\n  'cry':'\\ud83d\\ude22',\n  'crying_cat_face':'\\ud83d\\ude3f',\n  'crystal_ball':'\\ud83d\\udd2e',\n  'cucumber':'\\ud83e\\udd52',\n  'cupid':'\\ud83d\\udc98',\n  'curly_loop':'\\u27b0',\n  'currency_exchange':'\\ud83d\\udcb1',\n  'curry':'\\ud83c\\udf5b',\n  'custard':'\\ud83c\\udf6e',\n  'customs':'\\ud83d\\udec3',\n  'cyclone':'\\ud83c\\udf00',\n  'dagger':'\\ud83d\\udde1',\n  'dancer':'\\ud83d\\udc83',\n  'dancing_women':'\\ud83d\\udc6f',\n  'dancing_men':'\\ud83d\\udc6f&zwj;\\u2642\\ufe0f',\n  'dango':'\\ud83c\\udf61',\n  'dark_sunglasses':'\\ud83d\\udd76',\n  'dart':'\\ud83c\\udfaf',\n  'dash':'\\ud83d\\udca8',\n  'date':'\\ud83d\\udcc5',\n  'deciduous_tree':'\\ud83c\\udf33',\n  'deer':'\\ud83e\\udd8c',\n  'department_store':'\\ud83c\\udfec',\n  'derelict_house':'\\ud83c\\udfda',\n  'desert':'\\ud83c\\udfdc',\n  'desert_island':'\\ud83c\\udfdd',\n  'desktop_computer':'\\ud83d\\udda5',\n  'male_detective':'\\ud83d\\udd75\\ufe0f',\n  'diamond_shape_with_a_dot_inside':'\\ud83d\\udca0',\n  'diamonds':'\\u2666\\ufe0f',\n  'disappointed':'\\ud83d\\ude1e',\n  'disappointed_relieved':'\\ud83d\\ude25',\n  'dizzy':'\\ud83d\\udcab',\n  'dizzy_face':'\\ud83d\\ude35',\n  'do_not_litter':'\\ud83d\\udeaf',\n  'dog':'\\ud83d\\udc36',\n  'dog2':'\\ud83d\\udc15',\n  'dollar':'\\ud83d\\udcb5',\n  'dolls':'\\ud83c\\udf8e',\n  'dolphin':'\\ud83d\\udc2c',\n  'door':'\\ud83d\\udeaa',\n  'doughnut':'\\ud83c\\udf69',\n  'dove':'\\ud83d\\udd4a',\n  'dragon':'\\ud83d\\udc09',\n  'dragon_face':'\\ud83d\\udc32',\n  'dress':'\\ud83d\\udc57',\n  'dromedary_camel':'\\ud83d\\udc2a',\n  'drooling_face':'\\ud83e\\udd24',\n  'droplet':'\\ud83d\\udca7',\n  'drum':'\\ud83e\\udd41',\n  'duck':'\\ud83e\\udd86',\n  'dvd':'\\ud83d\\udcc0',\n  'e-mail':'\\ud83d\\udce7',\n  'eagle':'\\ud83e\\udd85',\n  'ear':'\\ud83d\\udc42',\n  'ear_of_rice':'\\ud83c\\udf3e',\n  'earth_africa':'\\ud83c\\udf0d',\n  'earth_americas':'\\ud83c\\udf0e',\n  'earth_asia':'\\ud83c\\udf0f',\n  'egg':'\\ud83e\\udd5a',\n  'eggplant':'\\ud83c\\udf46',\n  'eight_pointed_black_star':'\\u2734\\ufe0f',\n  'eight_spoked_asterisk':'\\u2733\\ufe0f',\n  'electric_plug':'\\ud83d\\udd0c',\n  'elephant':'\\ud83d\\udc18',\n  'email':'\\u2709\\ufe0f',\n  'end':'\\ud83d\\udd1a',\n  'envelope_with_arrow':'\\ud83d\\udce9',\n  'euro':'\\ud83d\\udcb6',\n  'european_castle':'\\ud83c\\udff0',\n  'european_post_office':'\\ud83c\\udfe4',\n  'evergreen_tree':'\\ud83c\\udf32',\n  'exclamation':'\\u2757\\ufe0f',\n  'expressionless':'\\ud83d\\ude11',\n  'eye':'\\ud83d\\udc41',\n  'eye_speech_bubble':'\\ud83d\\udc41&zwj;\\ud83d\\udde8',\n  'eyeglasses':'\\ud83d\\udc53',\n  'eyes':'\\ud83d\\udc40',\n  'face_with_head_bandage':'\\ud83e\\udd15',\n  'face_with_thermometer':'\\ud83e\\udd12',\n  'fist_oncoming':'\\ud83d\\udc4a',\n  'factory':'\\ud83c\\udfed',\n  'fallen_leaf':'\\ud83c\\udf42',\n  'family_man_woman_boy':'\\ud83d\\udc6a',\n  'family_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_woman_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_man_woman_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'fast_forward':'\\u23e9',\n  'fax':'\\ud83d\\udce0',\n  'fearful':'\\ud83d\\ude28',\n  'feet':'\\ud83d\\udc3e',\n  'female_detective':'\\ud83d\\udd75\\ufe0f&zwj;\\u2640\\ufe0f',\n  'ferris_wheel':'\\ud83c\\udfa1',\n  'ferry':'\\u26f4',\n  'field_hockey':'\\ud83c\\udfd1',\n  'file_cabinet':'\\ud83d\\uddc4',\n  'file_folder':'\\ud83d\\udcc1',\n  'film_projector':'\\ud83d\\udcfd',\n  'film_strip':'\\ud83c\\udf9e',\n  'fire':'\\ud83d\\udd25',\n  'fire_engine':'\\ud83d\\ude92',\n  'fireworks':'\\ud83c\\udf86',\n  'first_quarter_moon':'\\ud83c\\udf13',\n  'first_quarter_moon_with_face':'\\ud83c\\udf1b',\n  'fish':'\\ud83d\\udc1f',\n  'fish_cake':'\\ud83c\\udf65',\n  'fishing_pole_and_fish':'\\ud83c\\udfa3',\n  'fist_raised':'\\u270a',\n  'fist_left':'\\ud83e\\udd1b',\n  'fist_right':'\\ud83e\\udd1c',\n  'flags':'\\ud83c\\udf8f',\n  'flashlight':'\\ud83d\\udd26',\n  'fleur_de_lis':'\\u269c\\ufe0f',\n  'flight_arrival':'\\ud83d\\udeec',\n  'flight_departure':'\\ud83d\\udeeb',\n  'floppy_disk':'\\ud83d\\udcbe',\n  'flower_playing_cards':'\\ud83c\\udfb4',\n  'flushed':'\\ud83d\\ude33',\n  'fog':'\\ud83c\\udf2b',\n  'foggy':'\\ud83c\\udf01',\n  'football':'\\ud83c\\udfc8',\n  'footprints':'\\ud83d\\udc63',\n  'fork_and_knife':'\\ud83c\\udf74',\n  'fountain':'\\u26f2\\ufe0f',\n  'fountain_pen':'\\ud83d\\udd8b',\n  'four_leaf_clover':'\\ud83c\\udf40',\n  'fox_face':'\\ud83e\\udd8a',\n  'framed_picture':'\\ud83d\\uddbc',\n  'free':'\\ud83c\\udd93',\n  'fried_egg':'\\ud83c\\udf73',\n  'fried_shrimp':'\\ud83c\\udf64',\n  'fries':'\\ud83c\\udf5f',\n  'frog':'\\ud83d\\udc38',\n  'frowning':'\\ud83d\\ude26',\n  'frowning_face':'\\u2639\\ufe0f',\n  'frowning_man':'\\ud83d\\ude4d&zwj;\\u2642\\ufe0f',\n  'frowning_woman':'\\ud83d\\ude4d',\n  'middle_finger':'\\ud83d\\udd95',\n  'fuelpump':'\\u26fd\\ufe0f',\n  'full_moon':'\\ud83c\\udf15',\n  'full_moon_with_face':'\\ud83c\\udf1d',\n  'funeral_urn':'\\u26b1\\ufe0f',\n  'game_die':'\\ud83c\\udfb2',\n  'gear':'\\u2699\\ufe0f',\n  'gem':'\\ud83d\\udc8e',\n  'gemini':'\\u264a\\ufe0f',\n  'ghost':'\\ud83d\\udc7b',\n  'gift':'\\ud83c\\udf81',\n  'gift_heart':'\\ud83d\\udc9d',\n  'girl':'\\ud83d\\udc67',\n  'globe_with_meridians':'\\ud83c\\udf10',\n  'goal_net':'\\ud83e\\udd45',\n  'goat':'\\ud83d\\udc10',\n  'golf':'\\u26f3\\ufe0f',\n  'golfing_man':'\\ud83c\\udfcc\\ufe0f',\n  'golfing_woman':'\\ud83c\\udfcc\\ufe0f&zwj;\\u2640\\ufe0f',\n  'gorilla':'\\ud83e\\udd8d',\n  'grapes':'\\ud83c\\udf47',\n  'green_apple':'\\ud83c\\udf4f',\n  'green_book':'\\ud83d\\udcd7',\n  'green_heart':'\\ud83d\\udc9a',\n  'green_salad':'\\ud83e\\udd57',\n  'grey_exclamation':'\\u2755',\n  'grey_question':'\\u2754',\n  'grimacing':'\\ud83d\\ude2c',\n  'grin':'\\ud83d\\ude01',\n  'grinning':'\\ud83d\\ude00',\n  'guardsman':'\\ud83d\\udc82',\n  'guardswoman':'\\ud83d\\udc82&zwj;\\u2640\\ufe0f',\n  'guitar':'\\ud83c\\udfb8',\n  'gun':'\\ud83d\\udd2b',\n  'haircut_woman':'\\ud83d\\udc87',\n  'haircut_man':'\\ud83d\\udc87&zwj;\\u2642\\ufe0f',\n  'hamburger':'\\ud83c\\udf54',\n  'hammer':'\\ud83d\\udd28',\n  'hammer_and_pick':'\\u2692',\n  'hammer_and_wrench':'\\ud83d\\udee0',\n  'hamster':'\\ud83d\\udc39',\n  'hand':'\\u270b',\n  'handbag':'\\ud83d\\udc5c',\n  'handshake':'\\ud83e\\udd1d',\n  'hankey':'\\ud83d\\udca9',\n  'hatched_chick':'\\ud83d\\udc25',\n  'hatching_chick':'\\ud83d\\udc23',\n  'headphones':'\\ud83c\\udfa7',\n  'hear_no_evil':'\\ud83d\\ude49',\n  'heart':'\\u2764\\ufe0f',\n  'heart_decoration':'\\ud83d\\udc9f',\n  'heart_eyes':'\\ud83d\\ude0d',\n  'heart_eyes_cat':'\\ud83d\\ude3b',\n  'heartbeat':'\\ud83d\\udc93',\n  'heartpulse':'\\ud83d\\udc97',\n  'hearts':'\\u2665\\ufe0f',\n  'heavy_check_mark':'\\u2714\\ufe0f',\n  'heavy_division_sign':'\\u2797',\n  'heavy_dollar_sign':'\\ud83d\\udcb2',\n  'heavy_heart_exclamation':'\\u2763\\ufe0f',\n  'heavy_minus_sign':'\\u2796',\n  'heavy_multiplication_x':'\\u2716\\ufe0f',\n  'heavy_plus_sign':'\\u2795',\n  'helicopter':'\\ud83d\\ude81',\n  'herb':'\\ud83c\\udf3f',\n  'hibiscus':'\\ud83c\\udf3a',\n  'high_brightness':'\\ud83d\\udd06',\n  'high_heel':'\\ud83d\\udc60',\n  'hocho':'\\ud83d\\udd2a',\n  'hole':'\\ud83d\\udd73',\n  'honey_pot':'\\ud83c\\udf6f',\n  'horse':'\\ud83d\\udc34',\n  'horse_racing':'\\ud83c\\udfc7',\n  'hospital':'\\ud83c\\udfe5',\n  'hot_pepper':'\\ud83c\\udf36',\n  'hotdog':'\\ud83c\\udf2d',\n  'hotel':'\\ud83c\\udfe8',\n  'hotsprings':'\\u2668\\ufe0f',\n  'hourglass':'\\u231b\\ufe0f',\n  'hourglass_flowing_sand':'\\u23f3',\n  'house':'\\ud83c\\udfe0',\n  'house_with_garden':'\\ud83c\\udfe1',\n  'houses':'\\ud83c\\udfd8',\n  'hugs':'\\ud83e\\udd17',\n  'hushed':'\\ud83d\\ude2f',\n  'ice_cream':'\\ud83c\\udf68',\n  'ice_hockey':'\\ud83c\\udfd2',\n  'ice_skate':'\\u26f8',\n  'icecream':'\\ud83c\\udf66',\n  'id':'\\ud83c\\udd94',\n  'ideograph_advantage':'\\ud83c\\ude50',\n  'imp':'\\ud83d\\udc7f',\n  'inbox_tray':'\\ud83d\\udce5',\n  'incoming_envelope':'\\ud83d\\udce8',\n  'tipping_hand_woman':'\\ud83d\\udc81',\n  'information_source':'\\u2139\\ufe0f',\n  'innocent':'\\ud83d\\ude07',\n  'interrobang':'\\u2049\\ufe0f',\n  'iphone':'\\ud83d\\udcf1',\n  'izakaya_lantern':'\\ud83c\\udfee',\n  'jack_o_lantern':'\\ud83c\\udf83',\n  'japan':'\\ud83d\\uddfe',\n  'japanese_castle':'\\ud83c\\udfef',\n  'japanese_goblin':'\\ud83d\\udc7a',\n  'japanese_ogre':'\\ud83d\\udc79',\n  'jeans':'\\ud83d\\udc56',\n  'joy':'\\ud83d\\ude02',\n  'joy_cat':'\\ud83d\\ude39',\n  'joystick':'\\ud83d\\udd79',\n  'kaaba':'\\ud83d\\udd4b',\n  'key':'\\ud83d\\udd11',\n  'keyboard':'\\u2328\\ufe0f',\n  'keycap_ten':'\\ud83d\\udd1f',\n  'kick_scooter':'\\ud83d\\udef4',\n  'kimono':'\\ud83d\\udc58',\n  'kiss':'\\ud83d\\udc8b',\n  'kissing':'\\ud83d\\ude17',\n  'kissing_cat':'\\ud83d\\ude3d',\n  'kissing_closed_eyes':'\\ud83d\\ude1a',\n  'kissing_heart':'\\ud83d\\ude18',\n  'kissing_smiling_eyes':'\\ud83d\\ude19',\n  'kiwi_fruit':'\\ud83e\\udd5d',\n  'koala':'\\ud83d\\udc28',\n  'koko':'\\ud83c\\ude01',\n  'label':'\\ud83c\\udff7',\n  'large_blue_circle':'\\ud83d\\udd35',\n  'large_blue_diamond':'\\ud83d\\udd37',\n  'large_orange_diamond':'\\ud83d\\udd36',\n  'last_quarter_moon':'\\ud83c\\udf17',\n  'last_quarter_moon_with_face':'\\ud83c\\udf1c',\n  'latin_cross':'\\u271d\\ufe0f',\n  'laughing':'\\ud83d\\ude06',\n  'leaves':'\\ud83c\\udf43',\n  'ledger':'\\ud83d\\udcd2',\n  'left_luggage':'\\ud83d\\udec5',\n  'left_right_arrow':'\\u2194\\ufe0f',\n  'leftwards_arrow_with_hook':'\\u21a9\\ufe0f',\n  'lemon':'\\ud83c\\udf4b',\n  'leo':'\\u264c\\ufe0f',\n  'leopard':'\\ud83d\\udc06',\n  'level_slider':'\\ud83c\\udf9a',\n  'libra':'\\u264e\\ufe0f',\n  'light_rail':'\\ud83d\\ude88',\n  'link':'\\ud83d\\udd17',\n  'lion':'\\ud83e\\udd81',\n  'lips':'\\ud83d\\udc44',\n  'lipstick':'\\ud83d\\udc84',\n  'lizard':'\\ud83e\\udd8e',\n  'lock':'\\ud83d\\udd12',\n  'lock_with_ink_pen':'\\ud83d\\udd0f',\n  'lollipop':'\\ud83c\\udf6d',\n  'loop':'\\u27bf',\n  'loud_sound':'\\ud83d\\udd0a',\n  'loudspeaker':'\\ud83d\\udce2',\n  'love_hotel':'\\ud83c\\udfe9',\n  'love_letter':'\\ud83d\\udc8c',\n  'low_brightness':'\\ud83d\\udd05',\n  'lying_face':'\\ud83e\\udd25',\n  'm':'\\u24c2\\ufe0f',\n  'mag':'\\ud83d\\udd0d',\n  'mag_right':'\\ud83d\\udd0e',\n  'mahjong':'\\ud83c\\udc04\\ufe0f',\n  'mailbox':'\\ud83d\\udceb',\n  'mailbox_closed':'\\ud83d\\udcea',\n  'mailbox_with_mail':'\\ud83d\\udcec',\n  'mailbox_with_no_mail':'\\ud83d\\udced',\n  'man':'\\ud83d\\udc68',\n  'man_artist':'\\ud83d\\udc68&zwj;\\ud83c\\udfa8',\n  'man_astronaut':'\\ud83d\\udc68&zwj;\\ud83d\\ude80',\n  'man_cartwheeling':'\\ud83e\\udd38&zwj;\\u2642\\ufe0f',\n  'man_cook':'\\ud83d\\udc68&zwj;\\ud83c\\udf73',\n  'man_dancing':'\\ud83d\\udd7a',\n  'man_facepalming':'\\ud83e\\udd26&zwj;\\u2642\\ufe0f',\n  'man_factory_worker':'\\ud83d\\udc68&zwj;\\ud83c\\udfed',\n  'man_farmer':'\\ud83d\\udc68&zwj;\\ud83c\\udf3e',\n  'man_firefighter':'\\ud83d\\udc68&zwj;\\ud83d\\ude92',\n  'man_health_worker':'\\ud83d\\udc68&zwj;\\u2695\\ufe0f',\n  'man_in_tuxedo':'\\ud83e\\udd35',\n  'man_judge':'\\ud83d\\udc68&zwj;\\u2696\\ufe0f',\n  'man_juggling':'\\ud83e\\udd39&zwj;\\u2642\\ufe0f',\n  'man_mechanic':'\\ud83d\\udc68&zwj;\\ud83d\\udd27',\n  'man_office_worker':'\\ud83d\\udc68&zwj;\\ud83d\\udcbc',\n  'man_pilot':'\\ud83d\\udc68&zwj;\\u2708\\ufe0f',\n  'man_playing_handball':'\\ud83e\\udd3e&zwj;\\u2642\\ufe0f',\n  'man_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2642\\ufe0f',\n  'man_scientist':'\\ud83d\\udc68&zwj;\\ud83d\\udd2c',\n  'man_shrugging':'\\ud83e\\udd37&zwj;\\u2642\\ufe0f',\n  'man_singer':'\\ud83d\\udc68&zwj;\\ud83c\\udfa4',\n  'man_student':'\\ud83d\\udc68&zwj;\\ud83c\\udf93',\n  'man_teacher':'\\ud83d\\udc68&zwj;\\ud83c\\udfeb',\n  'man_technologist':'\\ud83d\\udc68&zwj;\\ud83d\\udcbb',\n  'man_with_gua_pi_mao':'\\ud83d\\udc72',\n  'man_with_turban':'\\ud83d\\udc73',\n  'tangerine':'\\ud83c\\udf4a',\n  'mans_shoe':'\\ud83d\\udc5e',\n  'mantelpiece_clock':'\\ud83d\\udd70',\n  'maple_leaf':'\\ud83c\\udf41',\n  'martial_arts_uniform':'\\ud83e\\udd4b',\n  'mask':'\\ud83d\\ude37',\n  'massage_woman':'\\ud83d\\udc86',\n  'massage_man':'\\ud83d\\udc86&zwj;\\u2642\\ufe0f',\n  'meat_on_bone':'\\ud83c\\udf56',\n  'medal_military':'\\ud83c\\udf96',\n  'medal_sports':'\\ud83c\\udfc5',\n  'mega':'\\ud83d\\udce3',\n  'melon':'\\ud83c\\udf48',\n  'memo':'\\ud83d\\udcdd',\n  'men_wrestling':'\\ud83e\\udd3c&zwj;\\u2642\\ufe0f',\n  'menorah':'\\ud83d\\udd4e',\n  'mens':'\\ud83d\\udeb9',\n  'metal':'\\ud83e\\udd18',\n  'metro':'\\ud83d\\ude87',\n  'microphone':'\\ud83c\\udfa4',\n  'microscope':'\\ud83d\\udd2c',\n  'milk_glass':'\\ud83e\\udd5b',\n  'milky_way':'\\ud83c\\udf0c',\n  'minibus':'\\ud83d\\ude90',\n  'minidisc':'\\ud83d\\udcbd',\n  'mobile_phone_off':'\\ud83d\\udcf4',\n  'money_mouth_face':'\\ud83e\\udd11',\n  'money_with_wings':'\\ud83d\\udcb8',\n  'moneybag':'\\ud83d\\udcb0',\n  'monkey':'\\ud83d\\udc12',\n  'monkey_face':'\\ud83d\\udc35',\n  'monorail':'\\ud83d\\ude9d',\n  'moon':'\\ud83c\\udf14',\n  'mortar_board':'\\ud83c\\udf93',\n  'mosque':'\\ud83d\\udd4c',\n  'motor_boat':'\\ud83d\\udee5',\n  'motor_scooter':'\\ud83d\\udef5',\n  'motorcycle':'\\ud83c\\udfcd',\n  'motorway':'\\ud83d\\udee3',\n  'mount_fuji':'\\ud83d\\uddfb',\n  'mountain':'\\u26f0',\n  'mountain_biking_man':'\\ud83d\\udeb5',\n  'mountain_biking_woman':'\\ud83d\\udeb5&zwj;\\u2640\\ufe0f',\n  'mountain_cableway':'\\ud83d\\udea0',\n  'mountain_railway':'\\ud83d\\ude9e',\n  'mountain_snow':'\\ud83c\\udfd4',\n  'mouse':'\\ud83d\\udc2d',\n  'mouse2':'\\ud83d\\udc01',\n  'movie_camera':'\\ud83c\\udfa5',\n  'moyai':'\\ud83d\\uddff',\n  'mrs_claus':'\\ud83e\\udd36',\n  'muscle':'\\ud83d\\udcaa',\n  'mushroom':'\\ud83c\\udf44',\n  'musical_keyboard':'\\ud83c\\udfb9',\n  'musical_note':'\\ud83c\\udfb5',\n  'musical_score':'\\ud83c\\udfbc',\n  'mute':'\\ud83d\\udd07',\n  'nail_care':'\\ud83d\\udc85',\n  'name_badge':'\\ud83d\\udcdb',\n  'national_park':'\\ud83c\\udfde',\n  'nauseated_face':'\\ud83e\\udd22',\n  'necktie':'\\ud83d\\udc54',\n  'negative_squared_cross_mark':'\\u274e',\n  'nerd_face':'\\ud83e\\udd13',\n  'neutral_face':'\\ud83d\\ude10',\n  'new':'\\ud83c\\udd95',\n  'new_moon':'\\ud83c\\udf11',\n  'new_moon_with_face':'\\ud83c\\udf1a',\n  'newspaper':'\\ud83d\\udcf0',\n  'newspaper_roll':'\\ud83d\\uddde',\n  'next_track_button':'\\u23ed',\n  'ng':'\\ud83c\\udd96',\n  'no_good_man':'\\ud83d\\ude45&zwj;\\u2642\\ufe0f',\n  'no_good_woman':'\\ud83d\\ude45',\n  'night_with_stars':'\\ud83c\\udf03',\n  'no_bell':'\\ud83d\\udd15',\n  'no_bicycles':'\\ud83d\\udeb3',\n  'no_entry':'\\u26d4\\ufe0f',\n  'no_entry_sign':'\\ud83d\\udeab',\n  'no_mobile_phones':'\\ud83d\\udcf5',\n  'no_mouth':'\\ud83d\\ude36',\n  'no_pedestrians':'\\ud83d\\udeb7',\n  'no_smoking':'\\ud83d\\udead',\n  'non-potable_water':'\\ud83d\\udeb1',\n  'nose':'\\ud83d\\udc43',\n  'notebook':'\\ud83d\\udcd3',\n  'notebook_with_decorative_cover':'\\ud83d\\udcd4',\n  'notes':'\\ud83c\\udfb6',\n  'nut_and_bolt':'\\ud83d\\udd29',\n  'o':'\\u2b55\\ufe0f',\n  'o2':'\\ud83c\\udd7e\\ufe0f',\n  'ocean':'\\ud83c\\udf0a',\n  'octopus':'\\ud83d\\udc19',\n  'oden':'\\ud83c\\udf62',\n  'office':'\\ud83c\\udfe2',\n  'oil_drum':'\\ud83d\\udee2',\n  'ok':'\\ud83c\\udd97',\n  'ok_hand':'\\ud83d\\udc4c',\n  'ok_man':'\\ud83d\\ude46&zwj;\\u2642\\ufe0f',\n  'ok_woman':'\\ud83d\\ude46',\n  'old_key':'\\ud83d\\udddd',\n  'older_man':'\\ud83d\\udc74',\n  'older_woman':'\\ud83d\\udc75',\n  'om':'\\ud83d\\udd49',\n  'on':'\\ud83d\\udd1b',\n  'oncoming_automobile':'\\ud83d\\ude98',\n  'oncoming_bus':'\\ud83d\\ude8d',\n  'oncoming_police_car':'\\ud83d\\ude94',\n  'oncoming_taxi':'\\ud83d\\ude96',\n  'open_file_folder':'\\ud83d\\udcc2',\n  'open_hands':'\\ud83d\\udc50',\n  'open_mouth':'\\ud83d\\ude2e',\n  'open_umbrella':'\\u2602\\ufe0f',\n  'ophiuchus':'\\u26ce',\n  'orange_book':'\\ud83d\\udcd9',\n  'orthodox_cross':'\\u2626\\ufe0f',\n  'outbox_tray':'\\ud83d\\udce4',\n  'owl':'\\ud83e\\udd89',\n  'ox':'\\ud83d\\udc02',\n  'package':'\\ud83d\\udce6',\n  'page_facing_up':'\\ud83d\\udcc4',\n  'page_with_curl':'\\ud83d\\udcc3',\n  'pager':'\\ud83d\\udcdf',\n  'paintbrush':'\\ud83d\\udd8c',\n  'palm_tree':'\\ud83c\\udf34',\n  'pancakes':'\\ud83e\\udd5e',\n  'panda_face':'\\ud83d\\udc3c',\n  'paperclip':'\\ud83d\\udcce',\n  'paperclips':'\\ud83d\\udd87',\n  'parasol_on_ground':'\\u26f1',\n  'parking':'\\ud83c\\udd7f\\ufe0f',\n  'part_alternation_mark':'\\u303d\\ufe0f',\n  'partly_sunny':'\\u26c5\\ufe0f',\n  'passenger_ship':'\\ud83d\\udef3',\n  'passport_control':'\\ud83d\\udec2',\n  'pause_button':'\\u23f8',\n  'peace_symbol':'\\u262e\\ufe0f',\n  'peach':'\\ud83c\\udf51',\n  'peanuts':'\\ud83e\\udd5c',\n  'pear':'\\ud83c\\udf50',\n  'pen':'\\ud83d\\udd8a',\n  'pencil2':'\\u270f\\ufe0f',\n  'penguin':'\\ud83d\\udc27',\n  'pensive':'\\ud83d\\ude14',\n  'performing_arts':'\\ud83c\\udfad',\n  'persevere':'\\ud83d\\ude23',\n  'person_fencing':'\\ud83e\\udd3a',\n  'pouting_woman':'\\ud83d\\ude4e',\n  'phone':'\\u260e\\ufe0f',\n  'pick':'\\u26cf',\n  'pig':'\\ud83d\\udc37',\n  'pig2':'\\ud83d\\udc16',\n  'pig_nose':'\\ud83d\\udc3d',\n  'pill':'\\ud83d\\udc8a',\n  'pineapple':'\\ud83c\\udf4d',\n  'ping_pong':'\\ud83c\\udfd3',\n  'pisces':'\\u2653\\ufe0f',\n  'pizza':'\\ud83c\\udf55',\n  'place_of_worship':'\\ud83d\\uded0',\n  'plate_with_cutlery':'\\ud83c\\udf7d',\n  'play_or_pause_button':'\\u23ef',\n  'point_down':'\\ud83d\\udc47',\n  'point_left':'\\ud83d\\udc48',\n  'point_right':'\\ud83d\\udc49',\n  'point_up':'\\u261d\\ufe0f',\n  'point_up_2':'\\ud83d\\udc46',\n  'police_car':'\\ud83d\\ude93',\n  'policewoman':'\\ud83d\\udc6e&zwj;\\u2640\\ufe0f',\n  'poodle':'\\ud83d\\udc29',\n  'popcorn':'\\ud83c\\udf7f',\n  'post_office':'\\ud83c\\udfe3',\n  'postal_horn':'\\ud83d\\udcef',\n  'postbox':'\\ud83d\\udcee',\n  'potable_water':'\\ud83d\\udeb0',\n  'potato':'\\ud83e\\udd54',\n  'pouch':'\\ud83d\\udc5d',\n  'poultry_leg':'\\ud83c\\udf57',\n  'pound':'\\ud83d\\udcb7',\n  'rage':'\\ud83d\\ude21',\n  'pouting_cat':'\\ud83d\\ude3e',\n  'pouting_man':'\\ud83d\\ude4e&zwj;\\u2642\\ufe0f',\n  'pray':'\\ud83d\\ude4f',\n  'prayer_beads':'\\ud83d\\udcff',\n  'pregnant_woman':'\\ud83e\\udd30',\n  'previous_track_button':'\\u23ee',\n  'prince':'\\ud83e\\udd34',\n  'princess':'\\ud83d\\udc78',\n  'printer':'\\ud83d\\udda8',\n  'purple_heart':'\\ud83d\\udc9c',\n  'purse':'\\ud83d\\udc5b',\n  'pushpin':'\\ud83d\\udccc',\n  'put_litter_in_its_place':'\\ud83d\\udeae',\n  'question':'\\u2753',\n  'rabbit':'\\ud83d\\udc30',\n  'rabbit2':'\\ud83d\\udc07',\n  'racehorse':'\\ud83d\\udc0e',\n  'racing_car':'\\ud83c\\udfce',\n  'radio':'\\ud83d\\udcfb',\n  'radio_button':'\\ud83d\\udd18',\n  'radioactive':'\\u2622\\ufe0f',\n  'railway_car':'\\ud83d\\ude83',\n  'railway_track':'\\ud83d\\udee4',\n  'rainbow':'\\ud83c\\udf08',\n  'rainbow_flag':'\\ud83c\\udff3\\ufe0f&zwj;\\ud83c\\udf08',\n  'raised_back_of_hand':'\\ud83e\\udd1a',\n  'raised_hand_with_fingers_splayed':'\\ud83d\\udd90',\n  'raised_hands':'\\ud83d\\ude4c',\n  'raising_hand_woman':'\\ud83d\\ude4b',\n  'raising_hand_man':'\\ud83d\\ude4b&zwj;\\u2642\\ufe0f',\n  'ram':'\\ud83d\\udc0f',\n  'ramen':'\\ud83c\\udf5c',\n  'rat':'\\ud83d\\udc00',\n  'record_button':'\\u23fa',\n  'recycle':'\\u267b\\ufe0f',\n  'red_circle':'\\ud83d\\udd34',\n  'registered':'\\u00ae\\ufe0f',\n  'relaxed':'\\u263a\\ufe0f',\n  'relieved':'\\ud83d\\ude0c',\n  'reminder_ribbon':'\\ud83c\\udf97',\n  'repeat':'\\ud83d\\udd01',\n  'repeat_one':'\\ud83d\\udd02',\n  'rescue_worker_helmet':'\\u26d1',\n  'restroom':'\\ud83d\\udebb',\n  'revolving_hearts':'\\ud83d\\udc9e',\n  'rewind':'\\u23ea',\n  'rhinoceros':'\\ud83e\\udd8f',\n  'ribbon':'\\ud83c\\udf80',\n  'rice':'\\ud83c\\udf5a',\n  'rice_ball':'\\ud83c\\udf59',\n  'rice_cracker':'\\ud83c\\udf58',\n  'rice_scene':'\\ud83c\\udf91',\n  'right_anger_bubble':'\\ud83d\\uddef',\n  'ring':'\\ud83d\\udc8d',\n  'robot':'\\ud83e\\udd16',\n  'rocket':'\\ud83d\\ude80',\n  'rofl':'\\ud83e\\udd23',\n  'roll_eyes':'\\ud83d\\ude44',\n  'roller_coaster':'\\ud83c\\udfa2',\n  'rooster':'\\ud83d\\udc13',\n  'rose':'\\ud83c\\udf39',\n  'rosette':'\\ud83c\\udff5',\n  'rotating_light':'\\ud83d\\udea8',\n  'round_pushpin':'\\ud83d\\udccd',\n  'rowing_man':'\\ud83d\\udea3',\n  'rowing_woman':'\\ud83d\\udea3&zwj;\\u2640\\ufe0f',\n  'rugby_football':'\\ud83c\\udfc9',\n  'running_man':'\\ud83c\\udfc3',\n  'running_shirt_with_sash':'\\ud83c\\udfbd',\n  'running_woman':'\\ud83c\\udfc3&zwj;\\u2640\\ufe0f',\n  'sa':'\\ud83c\\ude02\\ufe0f',\n  'sagittarius':'\\u2650\\ufe0f',\n  'sake':'\\ud83c\\udf76',\n  'sandal':'\\ud83d\\udc61',\n  'santa':'\\ud83c\\udf85',\n  'satellite':'\\ud83d\\udce1',\n  'saxophone':'\\ud83c\\udfb7',\n  'school':'\\ud83c\\udfeb',\n  'school_satchel':'\\ud83c\\udf92',\n  'scissors':'\\u2702\\ufe0f',\n  'scorpion':'\\ud83e\\udd82',\n  'scorpius':'\\u264f\\ufe0f',\n  'scream':'\\ud83d\\ude31',\n  'scream_cat':'\\ud83d\\ude40',\n  'scroll':'\\ud83d\\udcdc',\n  'seat':'\\ud83d\\udcba',\n  'secret':'\\u3299\\ufe0f',\n  'see_no_evil':'\\ud83d\\ude48',\n  'seedling':'\\ud83c\\udf31',\n  'selfie':'\\ud83e\\udd33',\n  'shallow_pan_of_food':'\\ud83e\\udd58',\n  'shamrock':'\\u2618\\ufe0f',\n  'shark':'\\ud83e\\udd88',\n  'shaved_ice':'\\ud83c\\udf67',\n  'sheep':'\\ud83d\\udc11',\n  'shell':'\\ud83d\\udc1a',\n  'shield':'\\ud83d\\udee1',\n  'shinto_shrine':'\\u26e9',\n  'ship':'\\ud83d\\udea2',\n  'shirt':'\\ud83d\\udc55',\n  'shopping':'\\ud83d\\udecd',\n  'shopping_cart':'\\ud83d\\uded2',\n  'shower':'\\ud83d\\udebf',\n  'shrimp':'\\ud83e\\udd90',\n  'signal_strength':'\\ud83d\\udcf6',\n  'six_pointed_star':'\\ud83d\\udd2f',\n  'ski':'\\ud83c\\udfbf',\n  'skier':'\\u26f7',\n  'skull':'\\ud83d\\udc80',\n  'skull_and_crossbones':'\\u2620\\ufe0f',\n  'sleeping':'\\ud83d\\ude34',\n  'sleeping_bed':'\\ud83d\\udecc',\n  'sleepy':'\\ud83d\\ude2a',\n  'slightly_frowning_face':'\\ud83d\\ude41',\n  'slightly_smiling_face':'\\ud83d\\ude42',\n  'slot_machine':'\\ud83c\\udfb0',\n  'small_airplane':'\\ud83d\\udee9',\n  'small_blue_diamond':'\\ud83d\\udd39',\n  'small_orange_diamond':'\\ud83d\\udd38',\n  'small_red_triangle':'\\ud83d\\udd3a',\n  'small_red_triangle_down':'\\ud83d\\udd3b',\n  'smile':'\\ud83d\\ude04',\n  'smile_cat':'\\ud83d\\ude38',\n  'smiley':'\\ud83d\\ude03',\n  'smiley_cat':'\\ud83d\\ude3a',\n  'smiling_imp':'\\ud83d\\ude08',\n  'smirk':'\\ud83d\\ude0f',\n  'smirk_cat':'\\ud83d\\ude3c',\n  'smoking':'\\ud83d\\udeac',\n  'snail':'\\ud83d\\udc0c',\n  'snake':'\\ud83d\\udc0d',\n  'sneezing_face':'\\ud83e\\udd27',\n  'snowboarder':'\\ud83c\\udfc2',\n  'snowflake':'\\u2744\\ufe0f',\n  'snowman':'\\u26c4\\ufe0f',\n  'snowman_with_snow':'\\u2603\\ufe0f',\n  'sob':'\\ud83d\\ude2d',\n  'soccer':'\\u26bd\\ufe0f',\n  'soon':'\\ud83d\\udd1c',\n  'sos':'\\ud83c\\udd98',\n  'sound':'\\ud83d\\udd09',\n  'space_invader':'\\ud83d\\udc7e',\n  'spades':'\\u2660\\ufe0f',\n  'spaghetti':'\\ud83c\\udf5d',\n  'sparkle':'\\u2747\\ufe0f',\n  'sparkler':'\\ud83c\\udf87',\n  'sparkles':'\\u2728',\n  'sparkling_heart':'\\ud83d\\udc96',\n  'speak_no_evil':'\\ud83d\\ude4a',\n  'speaker':'\\ud83d\\udd08',\n  'speaking_head':'\\ud83d\\udde3',\n  'speech_balloon':'\\ud83d\\udcac',\n  'speedboat':'\\ud83d\\udea4',\n  'spider':'\\ud83d\\udd77',\n  'spider_web':'\\ud83d\\udd78',\n  'spiral_calendar':'\\ud83d\\uddd3',\n  'spiral_notepad':'\\ud83d\\uddd2',\n  'spoon':'\\ud83e\\udd44',\n  'squid':'\\ud83e\\udd91',\n  'stadium':'\\ud83c\\udfdf',\n  'star':'\\u2b50\\ufe0f',\n  'star2':'\\ud83c\\udf1f',\n  'star_and_crescent':'\\u262a\\ufe0f',\n  'star_of_david':'\\u2721\\ufe0f',\n  'stars':'\\ud83c\\udf20',\n  'station':'\\ud83d\\ude89',\n  'statue_of_liberty':'\\ud83d\\uddfd',\n  'steam_locomotive':'\\ud83d\\ude82',\n  'stew':'\\ud83c\\udf72',\n  'stop_button':'\\u23f9',\n  'stop_sign':'\\ud83d\\uded1',\n  'stopwatch':'\\u23f1',\n  'straight_ruler':'\\ud83d\\udccf',\n  'strawberry':'\\ud83c\\udf53',\n  'stuck_out_tongue':'\\ud83d\\ude1b',\n  'stuck_out_tongue_closed_eyes':'\\ud83d\\ude1d',\n  'stuck_out_tongue_winking_eye':'\\ud83d\\ude1c',\n  'studio_microphone':'\\ud83c\\udf99',\n  'stuffed_flatbread':'\\ud83e\\udd59',\n  'sun_behind_large_cloud':'\\ud83c\\udf25',\n  'sun_behind_rain_cloud':'\\ud83c\\udf26',\n  'sun_behind_small_cloud':'\\ud83c\\udf24',\n  'sun_with_face':'\\ud83c\\udf1e',\n  'sunflower':'\\ud83c\\udf3b',\n  'sunglasses':'\\ud83d\\ude0e',\n  'sunny':'\\u2600\\ufe0f',\n  'sunrise':'\\ud83c\\udf05',\n  'sunrise_over_mountains':'\\ud83c\\udf04',\n  'surfing_man':'\\ud83c\\udfc4',\n  'surfing_woman':'\\ud83c\\udfc4&zwj;\\u2640\\ufe0f',\n  'sushi':'\\ud83c\\udf63',\n  'suspension_railway':'\\ud83d\\ude9f',\n  'sweat':'\\ud83d\\ude13',\n  'sweat_drops':'\\ud83d\\udca6',\n  'sweat_smile':'\\ud83d\\ude05',\n  'sweet_potato':'\\ud83c\\udf60',\n  'swimming_man':'\\ud83c\\udfca',\n  'swimming_woman':'\\ud83c\\udfca&zwj;\\u2640\\ufe0f',\n  'symbols':'\\ud83d\\udd23',\n  'synagogue':'\\ud83d\\udd4d',\n  'syringe':'\\ud83d\\udc89',\n  'taco':'\\ud83c\\udf2e',\n  'tada':'\\ud83c\\udf89',\n  'tanabata_tree':'\\ud83c\\udf8b',\n  'taurus':'\\u2649\\ufe0f',\n  'taxi':'\\ud83d\\ude95',\n  'tea':'\\ud83c\\udf75',\n  'telephone_receiver':'\\ud83d\\udcde',\n  'telescope':'\\ud83d\\udd2d',\n  'tennis':'\\ud83c\\udfbe',\n  'tent':'\\u26fa\\ufe0f',\n  'thermometer':'\\ud83c\\udf21',\n  'thinking':'\\ud83e\\udd14',\n  'thought_balloon':'\\ud83d\\udcad',\n  'ticket':'\\ud83c\\udfab',\n  'tickets':'\\ud83c\\udf9f',\n  'tiger':'\\ud83d\\udc2f',\n  'tiger2':'\\ud83d\\udc05',\n  'timer_clock':'\\u23f2',\n  'tipping_hand_man':'\\ud83d\\udc81&zwj;\\u2642\\ufe0f',\n  'tired_face':'\\ud83d\\ude2b',\n  'tm':'\\u2122\\ufe0f',\n  'toilet':'\\ud83d\\udebd',\n  'tokyo_tower':'\\ud83d\\uddfc',\n  'tomato':'\\ud83c\\udf45',\n  'tongue':'\\ud83d\\udc45',\n  'top':'\\ud83d\\udd1d',\n  'tophat':'\\ud83c\\udfa9',\n  'tornado':'\\ud83c\\udf2a',\n  'trackball':'\\ud83d\\uddb2',\n  'tractor':'\\ud83d\\ude9c',\n  'traffic_light':'\\ud83d\\udea5',\n  'train':'\\ud83d\\ude8b',\n  'train2':'\\ud83d\\ude86',\n  'tram':'\\ud83d\\ude8a',\n  'triangular_flag_on_post':'\\ud83d\\udea9',\n  'triangular_ruler':'\\ud83d\\udcd0',\n  'trident':'\\ud83d\\udd31',\n  'triumph':'\\ud83d\\ude24',\n  'trolleybus':'\\ud83d\\ude8e',\n  'trophy':'\\ud83c\\udfc6',\n  'tropical_drink':'\\ud83c\\udf79',\n  'tropical_fish':'\\ud83d\\udc20',\n  'truck':'\\ud83d\\ude9a',\n  'trumpet':'\\ud83c\\udfba',\n  'tulip':'\\ud83c\\udf37',\n  'tumbler_glass':'\\ud83e\\udd43',\n  'turkey':'\\ud83e\\udd83',\n  'turtle':'\\ud83d\\udc22',\n  'tv':'\\ud83d\\udcfa',\n  'twisted_rightwards_arrows':'\\ud83d\\udd00',\n  'two_hearts':'\\ud83d\\udc95',\n  'two_men_holding_hands':'\\ud83d\\udc6c',\n  'two_women_holding_hands':'\\ud83d\\udc6d',\n  'u5272':'\\ud83c\\ude39',\n  'u5408':'\\ud83c\\ude34',\n  'u55b6':'\\ud83c\\ude3a',\n  'u6307':'\\ud83c\\ude2f\\ufe0f',\n  'u6708':'\\ud83c\\ude37\\ufe0f',\n  'u6709':'\\ud83c\\ude36',\n  'u6e80':'\\ud83c\\ude35',\n  'u7121':'\\ud83c\\ude1a\\ufe0f',\n  'u7533':'\\ud83c\\ude38',\n  'u7981':'\\ud83c\\ude32',\n  'u7a7a':'\\ud83c\\ude33',\n  'umbrella':'\\u2614\\ufe0f',\n  'unamused':'\\ud83d\\ude12',\n  'underage':'\\ud83d\\udd1e',\n  'unicorn':'\\ud83e\\udd84',\n  'unlock':'\\ud83d\\udd13',\n  'up':'\\ud83c\\udd99',\n  'upside_down_face':'\\ud83d\\ude43',\n  'v':'\\u270c\\ufe0f',\n  'vertical_traffic_light':'\\ud83d\\udea6',\n  'vhs':'\\ud83d\\udcfc',\n  'vibration_mode':'\\ud83d\\udcf3',\n  'video_camera':'\\ud83d\\udcf9',\n  'video_game':'\\ud83c\\udfae',\n  'violin':'\\ud83c\\udfbb',\n  'virgo':'\\u264d\\ufe0f',\n  'volcano':'\\ud83c\\udf0b',\n  'volleyball':'\\ud83c\\udfd0',\n  'vs':'\\ud83c\\udd9a',\n  'vulcan_salute':'\\ud83d\\udd96',\n  'walking_man':'\\ud83d\\udeb6',\n  'walking_woman':'\\ud83d\\udeb6&zwj;\\u2640\\ufe0f',\n  'waning_crescent_moon':'\\ud83c\\udf18',\n  'waning_gibbous_moon':'\\ud83c\\udf16',\n  'warning':'\\u26a0\\ufe0f',\n  'wastebasket':'\\ud83d\\uddd1',\n  'watch':'\\u231a\\ufe0f',\n  'water_buffalo':'\\ud83d\\udc03',\n  'watermelon':'\\ud83c\\udf49',\n  'wave':'\\ud83d\\udc4b',\n  'wavy_dash':'\\u3030\\ufe0f',\n  'waxing_crescent_moon':'\\ud83c\\udf12',\n  'wc':'\\ud83d\\udebe',\n  'weary':'\\ud83d\\ude29',\n  'wedding':'\\ud83d\\udc92',\n  'weight_lifting_man':'\\ud83c\\udfcb\\ufe0f',\n  'weight_lifting_woman':'\\ud83c\\udfcb\\ufe0f&zwj;\\u2640\\ufe0f',\n  'whale':'\\ud83d\\udc33',\n  'whale2':'\\ud83d\\udc0b',\n  'wheel_of_dharma':'\\u2638\\ufe0f',\n  'wheelchair':'\\u267f\\ufe0f',\n  'white_check_mark':'\\u2705',\n  'white_circle':'\\u26aa\\ufe0f',\n  'white_flag':'\\ud83c\\udff3\\ufe0f',\n  'white_flower':'\\ud83d\\udcae',\n  'white_large_square':'\\u2b1c\\ufe0f',\n  'white_medium_small_square':'\\u25fd\\ufe0f',\n  'white_medium_square':'\\u25fb\\ufe0f',\n  'white_small_square':'\\u25ab\\ufe0f',\n  'white_square_button':'\\ud83d\\udd33',\n  'wilted_flower':'\\ud83e\\udd40',\n  'wind_chime':'\\ud83c\\udf90',\n  'wind_face':'\\ud83c\\udf2c',\n  'wine_glass':'\\ud83c\\udf77',\n  'wink':'\\ud83d\\ude09',\n  'wolf':'\\ud83d\\udc3a',\n  'woman':'\\ud83d\\udc69',\n  'woman_artist':'\\ud83d\\udc69&zwj;\\ud83c\\udfa8',\n  'woman_astronaut':'\\ud83d\\udc69&zwj;\\ud83d\\ude80',\n  'woman_cartwheeling':'\\ud83e\\udd38&zwj;\\u2640\\ufe0f',\n  'woman_cook':'\\ud83d\\udc69&zwj;\\ud83c\\udf73',\n  'woman_facepalming':'\\ud83e\\udd26&zwj;\\u2640\\ufe0f',\n  'woman_factory_worker':'\\ud83d\\udc69&zwj;\\ud83c\\udfed',\n  'woman_farmer':'\\ud83d\\udc69&zwj;\\ud83c\\udf3e',\n  'woman_firefighter':'\\ud83d\\udc69&zwj;\\ud83d\\ude92',\n  'woman_health_worker':'\\ud83d\\udc69&zwj;\\u2695\\ufe0f',\n  'woman_judge':'\\ud83d\\udc69&zwj;\\u2696\\ufe0f',\n  'woman_juggling':'\\ud83e\\udd39&zwj;\\u2640\\ufe0f',\n  'woman_mechanic':'\\ud83d\\udc69&zwj;\\ud83d\\udd27',\n  'woman_office_worker':'\\ud83d\\udc69&zwj;\\ud83d\\udcbc',\n  'woman_pilot':'\\ud83d\\udc69&zwj;\\u2708\\ufe0f',\n  'woman_playing_handball':'\\ud83e\\udd3e&zwj;\\u2640\\ufe0f',\n  'woman_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2640\\ufe0f',\n  'woman_scientist':'\\ud83d\\udc69&zwj;\\ud83d\\udd2c',\n  'woman_shrugging':'\\ud83e\\udd37&zwj;\\u2640\\ufe0f',\n  'woman_singer':'\\ud83d\\udc69&zwj;\\ud83c\\udfa4',\n  'woman_student':'\\ud83d\\udc69&zwj;\\ud83c\\udf93',\n  'woman_teacher':'\\ud83d\\udc69&zwj;\\ud83c\\udfeb',\n  'woman_technologist':'\\ud83d\\udc69&zwj;\\ud83d\\udcbb',\n  'woman_with_turban':'\\ud83d\\udc73&zwj;\\u2640\\ufe0f',\n  'womans_clothes':'\\ud83d\\udc5a',\n  'womans_hat':'\\ud83d\\udc52',\n  'women_wrestling':'\\ud83e\\udd3c&zwj;\\u2640\\ufe0f',\n  'womens':'\\ud83d\\udeba',\n  'world_map':'\\ud83d\\uddfa',\n  'worried':'\\ud83d\\ude1f',\n  'wrench':'\\ud83d\\udd27',\n  'writing_hand':'\\u270d\\ufe0f',\n  'x':'\\u274c',\n  'yellow_heart':'\\ud83d\\udc9b',\n  'yen':'\\ud83d\\udcb4',\n  'yin_yang':'\\u262f\\ufe0f',\n  'yum':'\\ud83d\\ude0b',\n  'zap':'\\u26a1\\ufe0f',\n  'zipper_mouth_face':'\\ud83e\\udd10',\n  'zzz':'\\ud83d\\udca4',\n\n  /* special emojis :P */\n  'octocat':  '<img alt=\":octocat:\" height=\"20\" width=\"20\" align=\"absmiddle\" src=\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\">',\n  'showdown': '<span style=\"font-family: \\'Anonymous Pro\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\">S</span>'\n};\n", "/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor,\n\n      /**\n       * Metadata of the document\n       * @type {{parsed: {}, raw: string, format: string}}\n       */\n      metadata = {\n        parsed: {},\n        raw: '',\n        format: ''\n      };\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n        // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    [],\n      metadata: {\n        parsed: {},\n        raw: '',\n        format: ''\n      }\n    };\n\n    // This lets us use \u00A8 trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/\u00A8/g, '\u00A8T');\n\n    // Replace $ with \u00A8D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '\u00A8D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces\n    text = text.replace(/\\u00A0/g, '&nbsp;');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('metadata')(text, options, globals);\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/\u00A8D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/\u00A8T/g, '\u00A8');\n\n    // render a complete html document instead of a partial if the option is enabled\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // update metadata\n    metadata = globals.metadata;\n    return text;\n  };\n\n  /**\n   * Converts an HTML string into a markdown string\n   * @param src\n   * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.\n   * @returns {string}\n   */\n  this.makeMarkdown = this.makeMd = function (src, HTMLParser) {\n\n    // replace \\r\\n with \\n\n    src = src.replace(/\\r\\n/g, '\\n');\n    src = src.replace(/\\r/g, '\\n'); // old macs\n\n    // due to an edge case, we need to find this: > <\n    // to prevent removing of non silent white spaces\n    // ex: <em>this is</em> <strong>sparta</strong>\n    src = src.replace(/>[ \\t]+</, '>\u00A8NBSP;<');\n\n    if (!HTMLParser) {\n      if (window && window.document) {\n        HTMLParser = window.document;\n      } else {\n        throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');\n      }\n    }\n\n    var doc = HTMLParser.createElement('div');\n    doc.innerHTML = src;\n\n    var globals = {\n      preList: substitutePreCodeTags(doc)\n    };\n\n    // remove all newlines and collapse spaces\n    clean(doc);\n\n    // some stuff, like accidental reference links must now be escaped\n    // TODO\n    // doc.innerHTML = doc.innerHTML.replace(/\\[[\\S\\t ]]/);\n\n    var nodes = doc.childNodes,\n        mdDoc = '';\n\n    for (var i = 0; i < nodes.length; i++) {\n      mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);\n    }\n\n    function clean (node) {\n      for (var n = 0; n < node.childNodes.length; ++n) {\n        var child = node.childNodes[n];\n        if (child.nodeType === 3) {\n          if (!/\\S/.test(child.nodeValue) && !/^[ ]+$/.test(child.nodeValue)) {\n            node.removeChild(child);\n            --n;\n          } else {\n            child.nodeValue = child.nodeValue.split('\\n').join(' ');\n            child.nodeValue = child.nodeValue.replace(/(\\s)+/g, '$1');\n          }\n        } else if (child.nodeType === 1) {\n          clean(child);\n        }\n      }\n    }\n\n    // find all pre tags and replace contents with placeholder\n    // we need this so that we can remove all indentation from html\n    // to ease up parsing\n    function substitutePreCodeTags (doc) {\n\n      var pres = doc.querySelectorAll('pre'),\n          presPH = [];\n\n      for (var i = 0; i < pres.length; ++i) {\n\n        if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {\n          var content = pres[i].firstChild.innerHTML.trim(),\n              language = pres[i].firstChild.getAttribute('data-language') || '';\n\n          // if data-language attribute is not defined, then we look for class language-*\n          if (language === '') {\n            var classes = pres[i].firstChild.className.split(' ');\n            for (var c = 0; c < classes.length; ++c) {\n              var matches = classes[c].match(/^language-(.+)$/);\n              if (matches !== null) {\n                language = matches[1];\n                break;\n              }\n            }\n          }\n\n          // unescape html entities in content\n          content = showdown.helper.unescapeHTMLEntities(content);\n\n          presPH.push(content);\n          pres[i].outerHTML = '<precode language=\"' + language + '\" precodenum=\"' + i.toString() + '\"></precode>';\n        } else {\n          presPH.push(pres[i].innerHTML);\n          pres[i].innerHTML = '';\n          pres[i].setAttribute('prenum', i.toString());\n        }\n      }\n      return presPH;\n    }\n\n    return mdDoc;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions.splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++ii) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers.splice(ii, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n\n  /**\n   * Get the metadata of the previously parsed document\n   * @param raw\n   * @returns {string|{}}\n   */\n  this.getMetadata = function (raw) {\n    if (raw) {\n      return metadata.raw;\n    } else {\n      return metadata.parsed;\n    }\n  };\n\n  /**\n   * Get the metadata format of the previously parsed document\n   * @returns {string}\n   */\n  this.getMetadataFormat = function () {\n    return metadata.format;\n  };\n\n  /**\n   * Private: set a single key, value metadata pair\n   * @param {string} key\n   * @param {string} value\n   */\n  this._setMetadataPair = function (key, value) {\n    metadata.parsed[key] = value;\n  };\n\n  /**\n   * Private: set metadata format\n   * @param {string} format\n   */\n  this._setMetadataFormat = function (format) {\n    metadata.format = format;\n  };\n\n  /**\n   * Private: set metadata raw text\n   * @param {string} raw\n   */\n  this._setMetadataRaw = function (raw) {\n    metadata.raw = raw;\n  };\n};\n", "/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\n    if (showdown.helper.isUndefined(title)) {\n      title = '';\n    }\n    linkId = linkId.toLowerCase();\n\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n    } else if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    // optionLinksInNewWindow only applies\n    // to external links. Hash links (#) open in same page\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\n      // escaped _\n      result += ' rel=\"noopener noreferrer\" target=\"\u00A8E95Eblank\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // normal cases\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/\\[([^\\[\\]]+)]()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username),\n          target = '';\n      if (options.openLinksInNewWindow) {\n        target = ' rel=\"noopener noreferrer\" target=\"\u00A8E95Eblank\"';\n      }\n      return st + '<a href=\"' + lnk + '\"' + target + '>' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n", "// url allowed chars [a-z\\d_.~:/?#[]@!$&'()*+,;=-]\n\nvar simpleURLRegex  = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    simpleURLRegex2 = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi,\n    simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n    delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,\n\n    replaceLink = function (options) {\n      'use strict';\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        var lnkTxt = link,\n            append = '',\n            target = '',\n            lmc    = leadingMagicChars || '',\n            tmc    = trailingMagicChars || '';\n        if (/^www\\./i.test(link)) {\n          link = link.replace(/^www\\./i, 'http://www.');\n        }\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n          append = trailingPunctuation;\n        }\n        if (options.openLinksInNewWindow) {\n          target = ' rel=\"noopener noreferrer\" target=\"\u00A8E95Eblank\"';\n        }\n        return lmc + '<a href=\"' + link + '\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\n      };\n    },\n\n    replaceMail = function (options, globals) {\n      'use strict';\n      return function (wholeMatch, b, mail) {\n        var href = 'mailto:';\n        b = b || '';\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n        if (options.encodeEmails) {\n          href = showdown.helper.encodeEmailAddress(href + mail);\n          mail = showdown.helper.encodeEmailAddress(mail);\n        } else {\n          href = href + mail;\n        }\n        return b + '<a href=\"' + href + '\">' + mail + '</a>';\n      };\n    };\n\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  text = text.replace(delimUrlRegex, replaceLink(options));\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\n  'use strict';\n\n  if (!options.simplifiedAutoLink) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\n\n  if (options.excludeTrailingPunctuationFromURLs) {\n    text = text.replace(simpleURLRegex2, replaceLink(options));\n  } else {\n    text = text.replace(simpleURLRegex, replaceLink(options));\n  }\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n", "showdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  // add a couple extra lines after the text and endtext mark\n  text = text + '\\n\\n';\n\n  var rgx = /(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;\n\n  if (options.splitAdjacentBlockquotes) {\n    rgx = /^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm;\n  }\n\n  text = text.replace(rgx, function (bq) {\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, ''); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/\u00A80/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '\u00A80');\n      pre = pre.replace(/\u00A80/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '\u00A80';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=\u00A80))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/\u00A80/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n", "/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof (text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      c = m1 + '<code>' + c + '</code>';\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\n      return c;\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n", "/**\n * Create a full HTML document from the processed markdown\n */\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\n  'use strict';\n\n  if (!options.completeHTMLDocument) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\n\n  var doctype = 'html',\n      doctypeParsed = '<!DOCTYPE HTML>\\n',\n      title = '',\n      charset = '<meta charset=\"utf-8\">\\n',\n      lang = '',\n      metadata = '';\n\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\n';\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\n    if (doctype === 'html' || doctype === 'html5') {\n      charset = '<meta charset=\"utf-8\">';\n    }\n  }\n\n  for (var meta in globals.metadata.parsed) {\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\n      switch (meta.toLowerCase()) {\n        case 'doctype':\n          break;\n\n        case 'title':\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\n';\n          break;\n\n        case 'charset':\n          if (doctype === 'html' || doctype === 'html5') {\n            charset = '<meta charset=\"' + globals.metadata.parsed.charset + '\">\\n';\n          } else {\n            charset = '<meta name=\"charset\" content=\"' + globals.metadata.parsed.charset + '\">\\n';\n          }\n          break;\n\n        case 'language':\n        case 'lang':\n          lang = ' lang=\"' + globals.metadata.parsed[meta] + '\"';\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n          break;\n\n        default:\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n      }\n    }\n  }\n\n  text = doctypeParsed + '<html' + lang + '>\\n<head>\\n' + title + charset + metadata + '</head>\\n<body>\\n' + text.trim() + '\\n</body>\\n</html>';\n\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\n  return text;\n});\n", "/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '\u00A8A\u00A8B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/\u00A8B(.+?)\u00A8A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/\u00A8A/g, '    ');  // g_tab_width\n  text = text.replace(/\u00A8B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('ellipsis', function (text, options, globals) {\n  'use strict';\n\n  if (!options.ellipsis) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\n\n  text = text.replace(/\\.\\.\\./g, '\u2026');\n\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Turn emoji codes into emojis\n *\n * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis\n */\nshowdown.subParser('emoji', function (text, options, globals) {\n  'use strict';\n\n  if (!options.emoji) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\n\n  var emojiRgx = /:([\\S]+?):/g;\n\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\n      return showdown.helper.emojis[emojiCode];\n    }\n    return wm;\n  });\n\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n", "/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=|:-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n", "/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags.\n  var tags     = /<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi,\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\n\n  text = text.replace(tags, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = text.replace(comments, function (wholeMatch) {\n    return wholeMatch\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n", "/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '\u00A80';\n\n  text = text.replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g, function (wholeMatch, delim, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n\u00A8G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/\u00A80/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n", "showdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n\u00A8K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\u00A8C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"\u00A8KxK\" where x is its key)\n    blockText = '\\n\\n\u00A8K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n", "showdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n\u00A8K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  if (options.backslashEscapesHTMLTags) {\n    // encode backslash escaped HTML tags\n    text = text.replace(/\\\\<(\\/?[^>]+?)>/g, function (wm, inside) {\n      return '&lt;' + inside + '&gt;';\n    });\n  }\n\n  // hash HTML Blocks\n  for (var i = 0; i < blockTags.length; ++i) {\n\n    var opTagPos,\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\b[^>]*>)', 'im'),\n        patLeft  = '<' + blockTags[i] + '\\\\b[^>]*>',\n        patRight = '</' + blockTags[i] + '>';\n    // 1. Look for the first position of the first opening HTML tag in the text\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\n\n      // if the HTML tag is \\ escaped, we need to escape it and break\n\n\n      //2. Split the text in that position\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\n          //3. Match recursively\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\n\n      // prevent an infinite loop\n      if (newSubText1 === subTexts[1]) {\n        break;\n      }\n      text = subTexts[0].concat(newSubText1);\n    }\n  }\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n\u00A8K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '\u00A8C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/\u00A8C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('\u00A8C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        console.error('maximum nesting of 10 spans reached!!!');\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('\u00A8C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n", "/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n\u00A8G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n      // Set text-style headers:\n      //\tHeader 1\n      //\t========\n      //\n      //\tHeader 2\n      //\t--------\n      //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var hText = m2;\n    if (options.customizedHeaderId) {\n      hText = m2.replace(/\\s?\\{([^{]+?)}\\s*$/, '');\n    }\n\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title,\n        prefix;\n\n    // It is separate from other options to allow combining prefix and customized\n    if (options.customizedHeaderId) {\n      var match = m.match(/\\{([^{]+?)}\\s*$/);\n      if (match && match[1]) {\n        m = match[1];\n      }\n    }\n\n    title = m;\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      prefix = options.prefixHeaderId;\n    } else if (options.prefixHeaderId === true) {\n      prefix = 'section-';\n    } else {\n      prefix = '';\n    }\n\n    if (!options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (options.ghCompatibleHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, \u00A8 and $)\n        .replace(/&amp;/g, '')\n        .replace(/\u00A8T/g, '')\n        .replace(/\u00A8D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^\u00A8~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else if (options.rawHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, \u00A8 and $)\n        .replace(/&amp;/g, '&')\n        .replace(/\u00A8T/g, '\u00A8')\n        .replace(/\u00A8D/g, '$')\n        // replace \" and '\n        .replace(/[\"']/g, '-')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n", "/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n", "/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      crazyRegExp       = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,\n      base64RegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      referenceRegExp   = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,\n      refShortcutRegExp = /!\\[([^\\[\\]]+)]()()()()()/g;\n\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\n    url = url.replace(/\\s/g, '');\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\n  }\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n\n    } else if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title && showdown.helper.isString(title)) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\n  // base64 encoded images\n  text = text.replace(base64RegExp, writeImageTagBase64);\n\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(crazyRegExp, writeImageTag);\n\n  // normal cases\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  // handle reference-style shortcuts: ![img text]\n  text = text.replace(refShortcutRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  function parseInside (txt, left, right) {\n    /*\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    */\n    return left + txt + right;\n  }\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong>', '</strong>');\n    });\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, function (wm, txt) {\n      return parseInside (txt, '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n  // Now parse asterisks\n  if (options.literalMidWordAsterisks) {\n    text = text.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong>', '</strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n      // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n", "/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '\u00A80';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(\u00A80| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!\u00A80)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(\u00A80|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (\u00A8A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '\u00A8A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n\n      // now we need to remove the marker (\u00A8A)\n      item = item.replace('\u00A8A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/\u00A80/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  function styleStartNumber (list, listType) {\n    // check if ol and starts by a number different than 1\n    if (listType === 'ol') {\n      var res = list.match(/^ *(\\d+)\\./);\n      if (res && res[1] !== '1') {\n        return ' start=\"' + res[1] + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg),\n            style = styleStartNumber(list, listType);\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      var style = styleStartNumber(list, listType);\n      result = '\\n\\n<' + listType + style + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  /** Start of list parsing **/\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '\u00A80';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(\u00A80|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(\u00A80|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/\u00A80/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n", "/**\n * Parse metadata at the top of the document\n */\nshowdown.subParser('metadata', function (text, options, globals) {\n  'use strict';\n\n  if (!options.metadata) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\n\n  function parseMetadataContents (content) {\n    // raw is raw so it's not changed in any way\n    globals.metadata.raw = content;\n\n    // escape chars forbidden in html attributes\n    // double quotes\n    content = content\n      // ampersand first\n      .replace(/&/g, '&amp;')\n      // double quotes\n      .replace(/\"/g, '&quot;');\n\n    content = content.replace(/\\n {4}/g, ' ');\n    content.replace(/^([\\S ]+): +([\\s\\S]+?)$/gm, function (wm, key, value) {\n      globals.metadata.parsed[key] = value;\n      return '';\n    });\n  }\n\n  text = text.replace(/^\\s*\u00AB\u00AB\u00AB+(\\S*?)\\n([\\s\\S]+?)\\n\u00BB\u00BB\u00BB+\\n/, function (wholematch, format, content) {\n    parseMetadataContents(content);\n    return '\u00A8M';\n  });\n\n  text = text.replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/, function (wholematch, format, content) {\n    if (format) {\n      globals.metadata.format = format;\n    }\n    parseMetadataContents(content);\n    return '\u00A8M';\n  });\n\n  text = text.replace(/\u00A8M/g, '');\n\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\n  return text;\n});\n", "/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '\u00A80'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/\u00A80/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n", "/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/\u00A8(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/\u00A8(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?\u00A8(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n", "/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n", "/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after anchors, because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\n  text = showdown.subParser('emoji')(text, options, globals);\n  text = showdown.subParser('underline')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n  text = showdown.subParser('ellipsis')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    // only add line breaks if the text does not contain a block (special case for lists)\n    if (!/\\n\\n\u00A8K/.test(text)) {\n      text = text.replace(/\\n+/g, '<br />\\n');\n    }\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  function parseInside (txt) {\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    return '<del>' + txt + '</del>';\n  }\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n", "/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex       = /^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=\u00A80))/gm,\n      base64Regex = /^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=\u00A80)|(?=\\n\\[))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '\u00A80';\n\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\n\n    // if there aren't two instances of linkId it must not be a reference link so back out\n    linkId = linkId.toLowerCase();\n    if (text.toLowerCase().split(linkId).length - 1 < 2) {\n      return wholeMatch;\n    }\n    if (url.match(/^data:.+?\\/.+?;base64,/)) {\n      // remove newlines\n      globals.gUrls[linkId] = url.replace(/\\s/g, '');\n    } else {\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n    }\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  };\n\n  // first we try to find base64 link references\n  text = text.replace(base64Regex, replaceFunc);\n\n  text = text.replace(regex, replaceFunc);\n\n  // attacklab: strip sentinel\n  text = text.replace(/\u00A80/, '');\n\n  return text;\n});\n", "showdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx       = /^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|\u00A80)/gm,\n      //singeColTblRgx = /^ {0,3}\\|.+\\|\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n(?: {0,3}\\|.+\\|\\n)+(?:\\n\\n|\u00A80)/gm;\n      singeColTblRgx = /^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|\u00A80)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\n    if (options.tablesHeaderId || options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  function parseTable (rawTable) {\n    var i, tableLines = rawTable.split('\\n');\n\n    for (i = 0; i < tableLines.length; ++i) {\n      // strip wrong first and last column if wrapped tables are used\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n      // parse code spans first, but we only support one line code spans\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  // find escaped pipe characters\n  text = text.replace(/\\\\(\\|)/g, showdown.helper.escapeCharactersCallback);\n\n  // parse multi column tables\n  text = text.replace(tableRgx, parseTable);\n\n  // parse one column tables\n  text = text.replace(singeColTblRgx, parseTable);\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n", "showdown.subParser('underline', function (text, options, globals) {\n  'use strict';\n\n  if (!options.underline) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('underline.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n  }\n\n  // escape remaining underscores to prevent them being parsed by italic and bold\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('underline.after', text, options, globals);\n\n  return text;\n});\n", "/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/\u00A8E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n", "showdown.subParser('makeMarkdown.blockquote', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);\n\n      if (innerTxt === '') {\n        continue;\n      }\n      txt += innerTxt;\n    }\n  }\n  // cleanup\n  txt = txt.trim();\n  txt = '> ' + txt.split('\\n').join('\\n> ');\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.codeBlock', function (node, globals) {\n  'use strict';\n\n  var lang = node.getAttribute('language'),\n      num  = node.getAttribute('precodenum');\n  return '```' + lang + '\\n' + globals.preList[num] + '\\n```';\n});\n", "showdown.subParser('makeMarkdown.codeSpan', function (node) {\n  'use strict';\n\n  return '`' + node.innerHTML + '`';\n});\n", "showdown.subParser('makeMarkdown.emphasis', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '*';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '*';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {\n  'use strict';\n\n  var headerMark = new Array(headerLevel + 1).join('#'),\n      txt = '';\n\n  if (node.hasChildNodes()) {\n    txt = headerMark + ' ';\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.hr', function () {\n  'use strict';\n\n  return '---';\n});\n", "showdown.subParser('makeMarkdown.image', function (node) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasAttribute('src')) {\n    txt += '![' + node.getAttribute('alt') + '](';\n    txt += '<' + node.getAttribute('src') + '>';\n    if (node.hasAttribute('width') && node.hasAttribute('height')) {\n      txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');\n    }\n\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.links', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes() && node.hasAttribute('href')) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    txt = '[';\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '](';\n    txt += '<' + node.getAttribute('href') + '>';\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.list', function (node, globals, type) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var listItems       = node.childNodes,\n      listItemsLenght = listItems.length,\n      listNum = node.getAttribute('start') || 1;\n\n  for (var i = 0; i < listItemsLenght; ++i) {\n    if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {\n      continue;\n    }\n\n    // define the bullet to use in list\n    var bullet = '';\n    if (type === 'ol') {\n      bullet = listNum.toString() + '. ';\n    } else {\n      bullet = '- ';\n    }\n\n    // parse list item\n    txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);\n    ++listNum;\n  }\n\n  // add comment at the end to prevent consecutive lists to be parsed as one\n  txt += '\\n<!-- -->\\n';\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.listItem', function (node, globals) {\n  'use strict';\n\n  var listItemTxt = '';\n\n  var children = node.childNodes,\n      childrenLenght = children.length;\n\n  for (var i = 0; i < childrenLenght; ++i) {\n    listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n  }\n  // if it's only one liner, we need to add a newline at the end\n  if (!/\\n$/.test(listItemTxt)) {\n    listItemTxt += '\\n';\n  } else {\n    // it's multiparagraph, so we need to indent\n    listItemTxt = listItemTxt\n      .split('\\n')\n      .join('\\n    ')\n      .replace(/^ {4}$/gm, '')\n      .replace(/\\n\\n+/g, '\\n\\n');\n  }\n\n  return listItemTxt;\n});\n", "\n\nshowdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {\n  'use strict';\n\n  spansOnly = spansOnly || false;\n\n  var txt = '';\n\n  // edge case of text without wrapper paragraph\n  if (node.nodeType === 3) {\n    return showdown.subParser('makeMarkdown.txt')(node, globals);\n  }\n\n  // HTML comment\n  if (node.nodeType === 8) {\n    return '<!--' + node.data + '-->\\n\\n';\n  }\n\n  // process only node elements\n  if (node.nodeType !== 1) {\n    return '';\n  }\n\n  var tagName = node.tagName.toLowerCase();\n\n  switch (tagName) {\n\n    //\n    // BLOCKS\n    //\n    case 'h1':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\\n\\n'; }\n      break;\n    case 'h2':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\\n\\n'; }\n      break;\n    case 'h3':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\\n\\n'; }\n      break;\n    case 'h4':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\\n\\n'; }\n      break;\n    case 'h5':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\\n\\n'; }\n      break;\n    case 'h6':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\\n\\n'; }\n      break;\n\n    case 'p':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'blockquote':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'hr':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'ol':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\\n\\n'; }\n      break;\n\n    case 'ul':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\\n\\n'; }\n      break;\n\n    case 'precode':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'pre':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'table':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\\n\\n'; }\n      break;\n\n    //\n    // SPANS\n    //\n    case 'code':\n      txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);\n      break;\n\n    case 'em':\n    case 'i':\n      txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);\n      break;\n\n    case 'strong':\n    case 'b':\n      txt = showdown.subParser('makeMarkdown.strong')(node, globals);\n      break;\n\n    case 'del':\n      txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);\n      break;\n\n    case 'a':\n      txt = showdown.subParser('makeMarkdown.links')(node, globals);\n      break;\n\n    case 'img':\n      txt = showdown.subParser('makeMarkdown.image')(node, globals);\n      break;\n\n    default:\n      txt = node.outerHTML + '\\n\\n';\n  }\n\n  // common normalization\n  // TODO eventually\n\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.paragraph', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n\n  // some text normalization\n  txt = txt.trim();\n\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.pre', function (node, globals) {\n  'use strict';\n\n  var num  = node.getAttribute('prenum');\n  return '<pre>' + globals.preList[num] + '</pre>';\n});\n", "showdown.subParser('makeMarkdown.strikethrough', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '~~';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '~~';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.strong', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '**';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '**';\n  }\n  return txt;\n});\n", "showdown.subParser('makeMarkdown.table', function (node, globals) {\n  'use strict';\n\n  var txt = '',\n      tableArray = [[], []],\n      headings   = node.querySelectorAll('thead>tr>th'),\n      rows       = node.querySelectorAll('tbody>tr'),\n      i, ii;\n  for (i = 0; i < headings.length; ++i) {\n    var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),\n        allign = '---';\n\n    if (headings[i].hasAttribute('style')) {\n      var style = headings[i].getAttribute('style').toLowerCase().replace(/\\s/g, '');\n      switch (style) {\n        case 'text-align:left;':\n          allign = ':---';\n          break;\n        case 'text-align:right;':\n          allign = '---:';\n          break;\n        case 'text-align:center;':\n          allign = ':---:';\n          break;\n      }\n    }\n    tableArray[0][i] = headContent.trim();\n    tableArray[1][i] = allign;\n  }\n\n  for (i = 0; i < rows.length; ++i) {\n    var r = tableArray.push([]) - 1,\n        cols = rows[i].getElementsByTagName('td');\n\n    for (ii = 0; ii < headings.length; ++ii) {\n      var cellContent = ' ';\n      if (typeof cols[ii] !== 'undefined') {\n        cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);\n      }\n      tableArray[r].push(cellContent);\n    }\n  }\n\n  var cellSpacesCount = 3;\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      var strLen = tableArray[i][ii].length;\n      if (strLen > cellSpacesCount) {\n        cellSpacesCount = strLen;\n      }\n    }\n  }\n\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      if (i === 1) {\n        if (tableArray[i][ii].slice(-1) === ':') {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';\n        } else {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');\n        }\n      } else {\n        tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);\n      }\n    }\n    txt += '| ' + tableArray[i].join(' | ') + ' |\\n';\n  }\n\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.tableCell', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var children = node.childNodes,\n      childrenLength = children.length;\n\n  for (var i = 0; i < childrenLength; ++i) {\n    txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);\n  }\n  return txt.trim();\n});\n", "showdown.subParser('makeMarkdown.txt', function (node) {\n  'use strict';\n\n  var txt = node.nodeValue;\n\n  // multiple spaces are collapsed\n  txt = txt.replace(/ +/g, ' ');\n\n  // replace the custom \u00A8NBSP; with a space\n  txt = txt.replace(/\u00A8NBSP;/g, ' ');\n\n  // \", <, > and & should replace escaped html entities\n  txt = showdown.helper.unescapeHTMLEntities(txt);\n\n  // escape markdown magic characters\n  // emphasis, strong and strikethrough - can appear everywhere\n  // we also escape pipe (|) because of tables\n  // and escape ` because of code blocks and spans\n  txt = txt.replace(/([*_~|`])/g, '\\\\$1');\n\n  // escape > because of blockquotes\n  txt = txt.replace(/^(\\s*)>/g, '\\\\$1>');\n\n  // hash character, only troublesome at the beginning of a line because of headers\n  txt = txt.replace(/^#/gm, '\\\\#');\n\n  // horizontal rules\n  txt = txt.replace(/^(\\s*)([-=]{3,})(\\s*)$/, '$1\\\\$2$3');\n\n  // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer\n  txt = txt.replace(/^( {0,3}\\d+)\\./gm, '$1\\\\.');\n\n  // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)\n  txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\\\$2');\n\n  // images and links, ] followed by ( is problematic, so we escape it\n  txt = txt.replace(/]([\\s]*)\\(/g, '\\\\]$1\\\\(');\n\n  // reference URIs must also be escaped\n  txt = txt.replace(/^ {0,3}\\[([\\S \\t]*?)]:/gm, '\\\\[$1]:');\n\n  return txt;\n});\n", "var root = this;\n\n// AMD Loader\nif (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// CommonJS/nodeJS Loader\n} else if (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n", "'use strict';\n\n// module to handle cookies\n\nconst urllib = require('url');\n\nconst SESSION_TIMEOUT = 1800; // 30 min\n\n/**\n * Creates a biskviit cookie jar for managing cookie values in memory\n *\n * @constructor\n * @param {Object} [options] Optional options object\n */\nclass Cookies {\n    constructor(options) {\n        this.options = options || {};\n        this.cookies = [];\n    }\n\n    /**\n     * Stores a cookie string to the cookie storage\n     *\n     * @param {String} cookieStr Value from the 'Set-Cookie:' header\n     * @param {String} url Current URL\n     */\n    set(cookieStr, url) {\n        let urlparts = urllib.parse(url || '');\n        let cookie = this.parse(cookieStr);\n        let domain;\n\n        if (cookie.domain) {\n            domain = cookie.domain.replace(/^\\./, '');\n\n            // do not allow cross origin cookies\n            if (\n                // can't be valid if the requested domain is shorter than current hostname\n                urlparts.hostname.length < domain.length ||\n                // prefix domains with dot to be sure that partial matches are not used\n                ('.' + urlparts.hostname).substr(-domain.length + 1) !== '.' + domain\n            ) {\n                cookie.domain = urlparts.hostname;\n            }\n        } else {\n            cookie.domain = urlparts.hostname;\n        }\n\n        if (!cookie.path) {\n            cookie.path = this.getPath(urlparts.pathname);\n        }\n\n        // if no expire date, then use sessionTimeout value\n        if (!cookie.expires) {\n            cookie.expires = new Date(Date.now() + (Number(this.options.sessionTimeout || SESSION_TIMEOUT) || SESSION_TIMEOUT) * 1000);\n        }\n\n        return this.add(cookie);\n    }\n\n    /**\n     * Returns cookie string for the 'Cookie:' header.\n     *\n     * @param {String} url URL to check for\n     * @returns {String} Cookie header or empty string if no matches were found\n     */\n    get(url) {\n        return this.list(url)\n            .map(cookie => cookie.name + '=' + cookie.value)\n            .join('; ');\n    }\n\n    /**\n     * Lists all valied cookie objects for the specified URL\n     *\n     * @param {String} url URL to check for\n     * @returns {Array} An array of cookie objects\n     */\n    list(url) {\n        let result = [];\n        let i;\n        let cookie;\n\n        for (i = this.cookies.length - 1; i >= 0; i--) {\n            cookie = this.cookies[i];\n\n            if (this.isExpired(cookie)) {\n                this.cookies.splice(i, i);\n                continue;\n            }\n\n            if (this.match(cookie, url)) {\n                result.unshift(cookie);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Parses cookie string from the 'Set-Cookie:' header\n     *\n     * @param {String} cookieStr String from the 'Set-Cookie:' header\n     * @returns {Object} Cookie object\n     */\n    parse(cookieStr) {\n        let cookie = {};\n\n        (cookieStr || '')\n            .toString()\n            .split(';')\n            .forEach(cookiePart => {\n                let valueParts = cookiePart.split('=');\n                let key = valueParts.shift().trim().toLowerCase();\n                let value = valueParts.join('=').trim();\n                let domain;\n\n                if (!key) {\n                    // skip empty parts\n                    return;\n                }\n\n                switch (key) {\n                    case 'expires':\n                        value = new Date(value);\n                        // ignore date if can not parse it\n                        if (value.toString() !== 'Invalid Date') {\n                            cookie.expires = value;\n                        }\n                        break;\n\n                    case 'path':\n                        cookie.path = value;\n                        break;\n\n                    case 'domain':\n                        domain = value.toLowerCase();\n                        if (domain.length && domain.charAt(0) !== '.') {\n                            domain = '.' + domain; // ensure preceeding dot for user set domains\n                        }\n                        cookie.domain = domain;\n                        break;\n\n                    case 'max-age':\n                        cookie.expires = new Date(Date.now() + (Number(value) || 0) * 1000);\n                        break;\n\n                    case 'secure':\n                        cookie.secure = true;\n                        break;\n\n                    case 'httponly':\n                        cookie.httponly = true;\n                        break;\n\n                    default:\n                        if (!cookie.name) {\n                            cookie.name = key;\n                            cookie.value = value;\n                        }\n                }\n            });\n\n        return cookie;\n    }\n\n    /**\n     * Checks if a cookie object is valid for a specified URL\n     *\n     * @param {Object} cookie Cookie object\n     * @param {String} url URL to check for\n     * @returns {Boolean} true if cookie is valid for specifiec URL\n     */\n    match(cookie, url) {\n        let urlparts = urllib.parse(url || '');\n\n        // check if hostname matches\n        // .foo.com also matches subdomains, foo.com does not\n        if (\n            urlparts.hostname !== cookie.domain &&\n            (cookie.domain.charAt(0) !== '.' || ('.' + urlparts.hostname).substr(-cookie.domain.length) !== cookie.domain)\n        ) {\n            return false;\n        }\n\n        // check if path matches\n        let path = this.getPath(urlparts.pathname);\n        if (path.substr(0, cookie.path.length) !== cookie.path) {\n            return false;\n        }\n\n        // check secure argument\n        if (cookie.secure && urlparts.protocol !== 'https:') {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds (or updates/removes if needed) a cookie object to the cookie storage\n     *\n     * @param {Object} cookie Cookie value to be stored\n     */\n    add(cookie) {\n        let i;\n        let len;\n\n        // nothing to do here\n        if (!cookie || !cookie.name) {\n            return false;\n        }\n\n        // overwrite if has same params\n        for (i = 0, len = this.cookies.length; i < len; i++) {\n            if (this.compare(this.cookies[i], cookie)) {\n                // check if the cookie needs to be removed instead\n                if (this.isExpired(cookie)) {\n                    this.cookies.splice(i, 1); // remove expired/unset cookie\n                    return false;\n                }\n\n                this.cookies[i] = cookie;\n                return true;\n            }\n        }\n\n        // add as new if not already expired\n        if (!this.isExpired(cookie)) {\n            this.cookies.push(cookie);\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks if two cookie objects are the same\n     *\n     * @param {Object} a Cookie to check against\n     * @param {Object} b Cookie to check against\n     * @returns {Boolean} True, if the cookies are the same\n     */\n    compare(a, b) {\n        return a.name === b.name && a.path === b.path && a.domain === b.domain && a.secure === b.secure && a.httponly === a.httponly;\n    }\n\n    /**\n     * Checks if a cookie is expired\n     *\n     * @param {Object} cookie Cookie object to check against\n     * @returns {Boolean} True, if the cookie is expired\n     */\n    isExpired(cookie) {\n        return (cookie.expires && cookie.expires < new Date()) || !cookie.value;\n    }\n\n    /**\n     * Returns normalized cookie path for an URL path argument\n     *\n     * @param {String} pathname\n     * @returns {String} Normalized path\n     */\n    getPath(pathname) {\n        let path = (pathname || '/').split('/');\n        path.pop(); // remove filename part\n        path = path.join('/').trim();\n\n        // ensure path prefix /\n        if (path.charAt(0) !== '/') {\n            path = '/' + path;\n        }\n\n        // ensure path suffix /\n        if (path.substr(-1) !== '/') {\n            path += '/';\n        }\n\n        return path;\n    }\n}\n\nmodule.exports = Cookies;\n", "'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst urllib = require('url');\nconst zlib = require('zlib');\nconst PassThrough = require('stream').PassThrough;\nconst Cookies = require('./cookies');\nconst packageData = require('../../package.json');\nconst net = require('net');\n\nconst MAX_REDIRECTS = 5;\n\nmodule.exports = function (url, options) {\n    return nmfetch(url, options);\n};\n\nmodule.exports.Cookies = Cookies;\n\nfunction nmfetch(url, options) {\n    options = options || {};\n\n    options.fetchRes = options.fetchRes || new PassThrough();\n    options.cookies = options.cookies || new Cookies();\n    options.redirects = options.redirects || 0;\n    options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;\n\n    if (options.cookie) {\n        [].concat(options.cookie || []).forEach(cookie => {\n            options.cookies.set(cookie, url);\n        });\n        options.cookie = false;\n    }\n\n    let fetchRes = options.fetchRes;\n    let parsed = urllib.parse(url);\n    let method = (options.method || '').toString().trim().toUpperCase() || 'GET';\n    let finished = false;\n    let cookies;\n    let body;\n\n    let handler = parsed.protocol === 'https:' ? https : http;\n\n    let headers = {\n        'accept-encoding': 'gzip,deflate',\n        'user-agent': 'nodemailer/' + packageData.version\n    };\n\n    Object.keys(options.headers || {}).forEach(key => {\n        headers[key.toLowerCase().trim()] = options.headers[key];\n    });\n\n    if (options.userAgent) {\n        headers['user-agent'] = options.userAgent;\n    }\n\n    if (parsed.auth) {\n        headers.Authorization = 'Basic ' + Buffer.from(parsed.auth).toString('base64');\n    }\n\n    if ((cookies = options.cookies.get(url))) {\n        headers.cookie = cookies;\n    }\n\n    if (options.body) {\n        if (options.contentType !== false) {\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n        }\n\n        if (typeof options.body.pipe === 'function') {\n            // it's a stream\n            headers['Transfer-Encoding'] = 'chunked';\n            body = options.body;\n            body.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n            });\n        } else {\n            if (options.body instanceof Buffer) {\n                body = options.body;\n            } else if (typeof options.body === 'object') {\n                try {\n                    // encodeURIComponent can fail on invalid input (partial emoji etc.)\n                    body = Buffer.from(\n                        Object.keys(options.body)\n                            .map(key => {\n                                let value = options.body[key].toString().trim();\n                                return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                            })\n                            .join('&')\n                    );\n                } catch (E) {\n                    if (finished) {\n                        return;\n                    }\n                    finished = true;\n                    E.type = 'FETCH';\n                    E.sourceUrl = url;\n                    fetchRes.emit('error', E);\n                    return;\n                }\n            } else {\n                body = Buffer.from(options.body.toString().trim());\n            }\n\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n            headers['Content-Length'] = body.length;\n        }\n        // if method is not provided, use POST instead of GET\n        method = (options.method || '').toString().trim().toUpperCase() || 'POST';\n    }\n\n    let req;\n    let reqOptions = {\n        method,\n        host: parsed.hostname,\n        path: parsed.path,\n        port: parsed.port ? parsed.port : parsed.protocol === 'https:' ? 443 : 80,\n        headers,\n        rejectUnauthorized: false,\n        agent: false\n    };\n\n    if (options.tls) {\n        Object.keys(options.tls).forEach(key => {\n            reqOptions[key] = options.tls[key];\n        });\n    }\n\n    if (parsed.protocol === 'https:' && parsed.hostname && parsed.hostname !== reqOptions.host && !net.isIP(parsed.hostname) && !reqOptions.servername) {\n        reqOptions.servername = parsed.hostname;\n    }\n\n    try {\n        req = handler.request(reqOptions);\n    } catch (E) {\n        finished = true;\n        setImmediate(() => {\n            E.type = 'FETCH';\n            E.sourceUrl = url;\n            fetchRes.emit('error', E);\n        });\n        return fetchRes;\n    }\n\n    if (options.timeout) {\n        req.setTimeout(options.timeout, () => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            req.abort();\n            let err = new Error('Request Timeout');\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n        });\n    }\n\n    req.on('error', err => {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        err.type = 'FETCH';\n        err.sourceUrl = url;\n        fetchRes.emit('error', err);\n    });\n\n    req.on('response', res => {\n        let inflate;\n\n        if (finished) {\n            return;\n        }\n\n        switch (res.headers['content-encoding']) {\n            case 'gzip':\n            case 'deflate':\n                inflate = zlib.createUnzip();\n                break;\n        }\n\n        if (res.headers['set-cookie']) {\n            [].concat(res.headers['set-cookie'] || []).forEach(cookie => {\n                options.cookies.set(cookie, url);\n            });\n        }\n\n        if ([301, 302, 303, 307, 308].includes(res.statusCode) && res.headers.location) {\n            // redirect\n            options.redirects++;\n            if (options.redirects > options.maxRedirects) {\n                finished = true;\n                let err = new Error('Maximum redirect count exceeded');\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n                return;\n            }\n            // redirect does not include POST body\n            options.method = 'GET';\n            options.body = false;\n            return nmfetch(urllib.resolve(url, res.headers.location), options);\n        }\n\n        fetchRes.statusCode = res.statusCode;\n        fetchRes.headers = res.headers;\n\n        if (res.statusCode >= 300 && !options.allowErrorResponse) {\n            finished = true;\n            let err = new Error('Invalid status code ' + res.statusCode);\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n            return;\n        }\n\n        res.on('error', err => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n        });\n\n        if (inflate) {\n            res.pipe(inflate).pipe(fetchRes);\n            inflate.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n            });\n        } else {\n            res.pipe(fetchRes);\n        }\n    });\n\n    setImmediate(() => {\n        if (body) {\n            try {\n                if (typeof body.pipe === 'function') {\n                    return body.pipe(req);\n                } else {\n                    req.write(body);\n                }\n            } catch (err) {\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                return;\n            }\n        }\n        req.end();\n    });\n\n    return fetchRes;\n}\n", "/* eslint no-console: 0 */\n\n'use strict';\n\nconst urllib = require('url');\nconst util = require('util');\nconst fs = require('fs');\nconst nmfetch = require('../fetch');\nconst dns = require('dns');\nconst net = require('net');\nconst os = require('os');\n\nconst DNS_TTL = 5 * 60 * 1000;\n\nlet networkInterfaces;\ntry {\n    networkInterfaces = os.networkInterfaces();\n} catch (err) {\n    // fails on some systems\n}\n\nmodule.exports.networkInterfaces = networkInterfaces;\n\nconst isFamilySupported = (family, allowInternal) => {\n    let networkInterfaces = module.exports.networkInterfaces;\n    if (!networkInterfaces) {\n        // hope for the best\n        return true;\n    }\n\n    const familySupported =\n        // crux that replaces Object.values(networkInterfaces) as Object.values is not supported in nodejs v6\n        Object.keys(networkInterfaces)\n            .map(key => networkInterfaces[key])\n            // crux that replaces .flat() as it is not supported in older Node versions (v10 and older)\n            .reduce((acc, val) => acc.concat(val), [])\n            .filter(i => !i.internal || allowInternal)\n            .filter(i => i.family === 'IPv' + family || i.family === family).length > 0;\n\n    return familySupported;\n};\n\nconst resolver = (family, hostname, options, callback) => {\n    options = options || {};\n    const familySupported = isFamilySupported(family, options.allowInternalNetworkInterfaces);\n\n    if (!familySupported) {\n        return callback(null, []);\n    }\n\n    const resolver = dns.Resolver ? new dns.Resolver(options) : dns;\n    resolver['resolve' + family](hostname, (err, addresses) => {\n        if (err) {\n            switch (err.code) {\n                case dns.NODATA:\n                case dns.NOTFOUND:\n                case dns.NOTIMP:\n                case dns.SERVFAIL:\n                case dns.CONNREFUSED:\n                case dns.REFUSED:\n                case 'EAI_AGAIN':\n                    return callback(null, []);\n            }\n            return callback(err);\n        }\n        return callback(null, Array.isArray(addresses) ? addresses : [].concat(addresses || []));\n    });\n};\n\nconst dnsCache = (module.exports.dnsCache = new Map());\n\nconst formatDNSValue = (value, extra) => {\n    if (!value) {\n        return Object.assign({}, extra || {});\n    }\n\n    return Object.assign(\n        {\n            servername: value.servername,\n            host:\n                !value.addresses || !value.addresses.length\n                    ? null\n                    : value.addresses.length === 1\n                    ? value.addresses[0]\n                    : value.addresses[Math.floor(Math.random() * value.addresses.length)]\n        },\n        extra || {}\n    );\n};\n\nmodule.exports.resolveHostname = (options, callback) => {\n    options = options || {};\n\n    if (!options.host && options.servername) {\n        options.host = options.servername;\n    }\n\n    if (!options.host || net.isIP(options.host)) {\n        // nothing to do here\n        let value = {\n            addresses: [options.host],\n            servername: options.servername || false\n        };\n        return callback(\n            null,\n            formatDNSValue(value, {\n                cached: false\n            })\n        );\n    }\n\n    let cached;\n    if (dnsCache.has(options.host)) {\n        cached = dnsCache.get(options.host);\n\n        if (!cached.expires || cached.expires >= Date.now()) {\n            return callback(\n                null,\n                formatDNSValue(cached.value, {\n                    cached: true\n                })\n            );\n        }\n    }\n\n    resolver(4, options.host, options, (err, addresses) => {\n        if (err) {\n            if (cached) {\n                // ignore error, use expired value\n                return callback(\n                    null,\n                    formatDNSValue(cached.value, {\n                        cached: true,\n                        error: err\n                    })\n                );\n            }\n            return callback(err);\n        }\n\n        if (addresses && addresses.length) {\n            let value = {\n                addresses,\n                servername: options.servername || options.host\n            };\n\n            dnsCache.set(options.host, {\n                value,\n                expires: Date.now() + (options.dnsTtl || DNS_TTL)\n            });\n\n            return callback(\n                null,\n                formatDNSValue(value, {\n                    cached: false\n                })\n            );\n        }\n\n        resolver(6, options.host, options, (err, addresses) => {\n            if (err) {\n                if (cached) {\n                    // ignore error, use expired value\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n\n            if (addresses && addresses.length) {\n                let value = {\n                    addresses,\n                    servername: options.servername || options.host\n                };\n\n                dnsCache.set(options.host, {\n                    value,\n                    expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                });\n\n                return callback(\n                    null,\n                    formatDNSValue(value, {\n                        cached: false\n                    })\n                );\n            }\n\n            try {\n                dns.lookup(options.host, { all: true }, (err, addresses) => {\n                    if (err) {\n                        if (cached) {\n                            // ignore error, use expired value\n                            return callback(\n                                null,\n                                formatDNSValue(cached.value, {\n                                    cached: true,\n                                    error: err\n                                })\n                            );\n                        }\n                        return callback(err);\n                    }\n\n                    let address = addresses\n                        ? addresses\n                              .filter(addr => isFamilySupported(addr.family))\n                              .map(addr => addr.address)\n                              .shift()\n                        : false;\n\n                    if (addresses && addresses.length && !address) {\n                        // there are addresses but none can be used\n                        console.warn(`Failed to resolve IPv${addresses[0].family} addresses with current network`);\n                    }\n\n                    if (!address && cached) {\n                        // nothing was found, fallback to cached value\n                        return callback(\n                            null,\n                            formatDNSValue(cached.value, {\n                                cached: true\n                            })\n                        );\n                    }\n\n                    let value = {\n                        addresses: address ? [address] : [options.host],\n                        servername: options.servername || options.host\n                    };\n\n                    dnsCache.set(options.host, {\n                        value,\n                        expires: Date.now() + (options.dnsTtl || DNS_TTL)\n                    });\n\n                    return callback(\n                        null,\n                        formatDNSValue(value, {\n                            cached: false\n                        })\n                    );\n                });\n            } catch (err) {\n                if (cached) {\n                    // ignore error, use expired value\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n        });\n    });\n};\n/**\n * Parses connection url to a structured configuration object\n *\n * @param {String} str Connection url\n * @return {Object} Configuration object\n */\nmodule.exports.parseConnectionUrl = str => {\n    str = str || '';\n    let options = {};\n\n    [urllib.parse(str, true)].forEach(url => {\n        let auth;\n\n        switch (url.protocol) {\n            case 'smtp:':\n                options.secure = false;\n                break;\n            case 'smtps:':\n                options.secure = true;\n                break;\n            case 'direct:':\n                options.direct = true;\n                break;\n        }\n\n        if (!isNaN(url.port) && Number(url.port)) {\n            options.port = Number(url.port);\n        }\n\n        if (url.hostname) {\n            options.host = url.hostname;\n        }\n\n        if (url.auth) {\n            auth = url.auth.split(':');\n\n            if (!options.auth) {\n                options.auth = {};\n            }\n\n            options.auth.user = auth.shift();\n            options.auth.pass = auth.join(':');\n        }\n\n        Object.keys(url.query || {}).forEach(key => {\n            let obj = options;\n            let lKey = key;\n            let value = url.query[key];\n\n            if (!isNaN(value)) {\n                value = Number(value);\n            }\n\n            switch (value) {\n                case 'true':\n                    value = true;\n                    break;\n                case 'false':\n                    value = false;\n                    break;\n            }\n\n            // tls is nested object\n            if (key.indexOf('tls.') === 0) {\n                lKey = key.substr(4);\n                if (!options.tls) {\n                    options.tls = {};\n                }\n                obj = options.tls;\n            } else if (key.indexOf('.') >= 0) {\n                // ignore nested properties besides tls\n                return;\n            }\n\n            if (!(lKey in obj)) {\n                obj[lKey] = value;\n            }\n        });\n    });\n\n    return options;\n};\n\nmodule.exports._logFunc = (logger, level, defaults, data, message, ...args) => {\n    let entry = {};\n\n    Object.keys(defaults || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = defaults[key];\n        }\n    });\n\n    Object.keys(data || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = data[key];\n        }\n    });\n\n    logger[level](entry, message, ...args);\n};\n\n/**\n * Returns a bunyan-compatible logger interface. Uses either provided logger or\n * creates a default console logger\n *\n * @param {Object} [options] Options object that might include 'logger' value\n * @return {Object} bunyan compatible logger\n */\nmodule.exports.getLogger = (options, defaults) => {\n    options = options || {};\n\n    let response = {};\n    let levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\n\n    if (!options.logger) {\n        // use vanity logger\n        levels.forEach(level => {\n            response[level] = () => false;\n        });\n        return response;\n    }\n\n    let logger = options.logger;\n\n    if (options.logger === true) {\n        // create console logger\n        logger = createDefaultLogger(levels);\n    }\n\n    levels.forEach(level => {\n        response[level] = (data, message, ...args) => {\n            module.exports._logFunc(logger, level, defaults, data, message, ...args);\n        };\n    });\n\n    return response;\n};\n\n/**\n * Wrapper for creating a callback that either resolves or rejects a promise\n * based on input\n *\n * @param {Function} resolve Function to run if callback is called\n * @param {Function} reject Function to run if callback ends with an error\n */\nmodule.exports.callbackPromise = (resolve, reject) =>\n    function () {\n        let args = Array.from(arguments);\n        let err = args.shift();\n        if (err) {\n            reject(err);\n        } else {\n            resolve(...args);\n        }\n    };\n\n/**\n * Resolves a String or a Buffer value for content value. Useful if the value\n * is a Stream or a file or an URL. If the value is a Stream, overwrites\n * the stream object with the resolved value (you can't stream a value twice).\n *\n * This is useful when you want to create a plugin that needs a content value,\n * for example the `html` or `text` value as a String or a Buffer but not as\n * a file path or an URL.\n *\n * @param {Object} data An object or an Array you want to resolve an element for\n * @param {String|Number} key Property name or an Array index\n * @param {Function} callback Callback function with (err, value)\n */\nmodule.exports.resolveContent = (data, key, callback) => {\n    let promise;\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = module.exports.callbackPromise(resolve, reject);\n        });\n    }\n\n    let content = (data && data[key] && data[key].content) || data[key];\n    let contentStream;\n    let encoding = ((typeof data[key] === 'object' && data[key].encoding) || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!content) {\n        return callback(null, content);\n    }\n\n    if (typeof content === 'object') {\n        if (typeof content.pipe === 'function') {\n            return resolveStream(content, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n                // we can't stream twice the same content, so we need\n                // to replace the stream object with the streaming result\n                if (data[key].content) {\n                    data[key].content = value;\n                } else {\n                    data[key] = value;\n                }\n                callback(null, value);\n            });\n        } else if (/^https?:\\/\\//i.test(content.path || content.href)) {\n            contentStream = nmfetch(content.path || content.href);\n            return resolveStream(contentStream, callback);\n        } else if (/^data:/i.test(content.path || content.href)) {\n            let parts = (content.path || content.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n            if (!parts) {\n                return callback(null, Buffer.from(0));\n            }\n            return callback(null, /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2])));\n        } else if (content.path) {\n            return resolveStream(fs.createReadStream(content.path), callback);\n        }\n    }\n\n    if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n        content = Buffer.from(data[key].content, encoding);\n    }\n\n    // default action, return as is\n    setImmediate(() => callback(null, content));\n\n    return promise;\n};\n\n/**\n * Copies properties from source objects to target objects\n */\nmodule.exports.assign = function (/* target, ... sources */) {\n    let args = Array.from(arguments);\n    let target = args.shift() || {};\n\n    args.forEach(source => {\n        Object.keys(source || {}).forEach(key => {\n            if (['tls', 'auth'].includes(key) && source[key] && typeof source[key] === 'object') {\n                // tls and auth are special keys that need to be enumerated separately\n                // other objects are passed as is\n                if (!target[key]) {\n                    // ensure that target has this key\n                    target[key] = {};\n                }\n                Object.keys(source[key]).forEach(subKey => {\n                    target[key][subKey] = source[key][subKey];\n                });\n            } else {\n                target[key] = source[key];\n            }\n        });\n    });\n    return target;\n};\n\nmodule.exports.encodeXText = str => {\n    // ! 0x21\n    // + 0x2B\n    // = 0x3D\n    // ~ 0x7E\n    if (!/[^\\x21-\\x2A\\x2C-\\x3C\\x3E-\\x7E]/.test(str)) {\n        return str;\n    }\n    let buf = Buffer.from(str);\n    let result = '';\n    for (let i = 0, len = buf.length; i < len; i++) {\n        let c = buf[i];\n        if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {\n            result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();\n        } else {\n            result += String.fromCharCode(c);\n        }\n    }\n    return result;\n};\n\n/**\n * Streams a stream value into a Buffer\n *\n * @param {Object} stream Readable stream\n * @param {Function} callback Callback function with (err, value)\n */\nfunction resolveStream(stream, callback) {\n    let responded = false;\n    let chunks = [];\n    let chunklen = 0;\n\n    stream.on('error', err => {\n        if (responded) {\n            return;\n        }\n\n        responded = true;\n        callback(err);\n    });\n\n    stream.on('readable', () => {\n        let chunk;\n        while ((chunk = stream.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    stream.on('end', () => {\n        if (responded) {\n            return;\n        }\n        responded = true;\n\n        let value;\n\n        try {\n            value = Buffer.concat(chunks, chunklen);\n        } catch (E) {\n            return callback(E);\n        }\n        callback(null, value);\n    });\n}\n\n/**\n * Generates a bunyan-like logger that prints to console\n *\n * @returns {Object} Bunyan logger instance\n */\nfunction createDefaultLogger(levels) {\n    let levelMaxLen = 0;\n    let levelNames = new Map();\n    levels.forEach(level => {\n        if (level.length > levelMaxLen) {\n            levelMaxLen = level.length;\n        }\n    });\n\n    levels.forEach(level => {\n        let levelName = level.toUpperCase();\n        if (levelName.length < levelMaxLen) {\n            levelName += ' '.repeat(levelMaxLen - levelName.length);\n        }\n        levelNames.set(level, levelName);\n    });\n\n    let print = (level, entry, message, ...args) => {\n        let prefix = '';\n        if (entry) {\n            if (entry.tnx === 'server') {\n                prefix = 'S: ';\n            } else if (entry.tnx === 'client') {\n                prefix = 'C: ';\n            }\n\n            if (entry.sid) {\n                prefix = '[' + entry.sid + '] ' + prefix;\n            }\n\n            if (entry.cid) {\n                prefix = '[#' + entry.cid + '] ' + prefix;\n            }\n        }\n\n        message = util.format(message, ...args);\n        message.split(/\\r?\\n/).forEach(line => {\n            console.log('[%s] %s %s', new Date().toISOString().substr(0, 19).replace(/T/, ' '), levelNames.get(level), prefix + line);\n        });\n    };\n\n    let logger = {};\n    levels.forEach(level => {\n        logger[level] = print.bind(null, level);\n    });\n\n    return logger;\n}\n", "/* eslint quote-props: 0 */\n\n'use strict';\n\nconst path = require('path');\n\nconst defaultMimeType = 'application/octet-stream';\nconst defaultExtension = 'bin';\n\nconst mimeTypes = new Map([\n    ['application/acad', 'dwg'],\n    ['application/applixware', 'aw'],\n    ['application/arj', 'arj'],\n    ['application/atom+xml', 'xml'],\n    ['application/atomcat+xml', 'atomcat'],\n    ['application/atomsvc+xml', 'atomsvc'],\n    ['application/base64', ['mm', 'mme']],\n    ['application/binhex', 'hqx'],\n    ['application/binhex4', 'hqx'],\n    ['application/book', ['book', 'boo']],\n    ['application/ccxml+xml,', 'ccxml'],\n    ['application/cdf', 'cdf'],\n    ['application/cdmi-capability', 'cdmia'],\n    ['application/cdmi-container', 'cdmic'],\n    ['application/cdmi-domain', 'cdmid'],\n    ['application/cdmi-object', 'cdmio'],\n    ['application/cdmi-queue', 'cdmiq'],\n    ['application/clariscad', 'ccad'],\n    ['application/commonground', 'dp'],\n    ['application/cu-seeme', 'cu'],\n    ['application/davmount+xml', 'davmount'],\n    ['application/drafting', 'drw'],\n    ['application/dsptype', 'tsp'],\n    ['application/dssc+der', 'dssc'],\n    ['application/dssc+xml', 'xdssc'],\n    ['application/dxf', 'dxf'],\n    ['application/ecmascript', ['js', 'es']],\n    ['application/emma+xml', 'emma'],\n    ['application/envoy', 'evy'],\n    ['application/epub+zip', 'epub'],\n    ['application/excel', ['xls', 'xl', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/exi', 'exi'],\n    ['application/font-tdpfr', 'pfr'],\n    ['application/fractals', 'fif'],\n    ['application/freeloader', 'frl'],\n    ['application/futuresplash', 'spl'],\n    ['application/gnutar', 'tgz'],\n    ['application/groupwise', 'vew'],\n    ['application/hlp', 'hlp'],\n    ['application/hta', 'hta'],\n    ['application/hyperstudio', 'stk'],\n    ['application/i-deas', 'unv'],\n    ['application/iges', ['iges', 'igs']],\n    ['application/inf', 'inf'],\n    ['application/internet-property-stream', 'acx'],\n    ['application/ipfix', 'ipfix'],\n    ['application/java', 'class'],\n    ['application/java-archive', 'jar'],\n    ['application/java-byte-code', 'class'],\n    ['application/java-serialized-object', 'ser'],\n    ['application/java-vm', 'class'],\n    ['application/javascript', 'js'],\n    ['application/json', 'json'],\n    ['application/lha', 'lha'],\n    ['application/lzx', 'lzx'],\n    ['application/mac-binary', 'bin'],\n    ['application/mac-binhex', 'hqx'],\n    ['application/mac-binhex40', 'hqx'],\n    ['application/mac-compactpro', 'cpt'],\n    ['application/macbinary', 'bin'],\n    ['application/mads+xml', 'mads'],\n    ['application/marc', 'mrc'],\n    ['application/marcxml+xml', 'mrcx'],\n    ['application/mathematica', 'ma'],\n    ['application/mathml+xml', 'mathml'],\n    ['application/mbedlet', 'mbd'],\n    ['application/mbox', 'mbox'],\n    ['application/mcad', 'mcd'],\n    ['application/mediaservercontrol+xml', 'mscml'],\n    ['application/metalink4+xml', 'meta4'],\n    ['application/mets+xml', 'mets'],\n    ['application/mime', 'aps'],\n    ['application/mods+xml', 'mods'],\n    ['application/mp21', 'm21'],\n    ['application/mp4', 'mp4'],\n    ['application/mspowerpoint', ['ppt', 'pot', 'pps', 'ppz']],\n    ['application/msword', ['doc', 'dot', 'w6w', 'wiz', 'word']],\n    ['application/mswrite', 'wri'],\n    ['application/mxf', 'mxf'],\n    ['application/netmc', 'mcp'],\n    ['application/octet-stream', ['*']],\n    ['application/oda', 'oda'],\n    ['application/oebps-package+xml', 'opf'],\n    ['application/ogg', 'ogx'],\n    ['application/olescript', 'axs'],\n    ['application/onenote', 'onetoc'],\n    ['application/patch-ops-error+xml', 'xer'],\n    ['application/pdf', 'pdf'],\n    ['application/pgp-encrypted', 'asc'],\n    ['application/pgp-signature', 'pgp'],\n    ['application/pics-rules', 'prf'],\n    ['application/pkcs-12', 'p12'],\n    ['application/pkcs-crl', 'crl'],\n    ['application/pkcs10', 'p10'],\n    ['application/pkcs7-mime', ['p7c', 'p7m']],\n    ['application/pkcs7-signature', 'p7s'],\n    ['application/pkcs8', 'p8'],\n    ['application/pkix-attr-cert', 'ac'],\n    ['application/pkix-cert', ['cer', 'crt']],\n    ['application/pkix-crl', 'crl'],\n    ['application/pkix-pkipath', 'pkipath'],\n    ['application/pkixcmp', 'pki'],\n    ['application/plain', 'text'],\n    ['application/pls+xml', 'pls'],\n    ['application/postscript', ['ps', 'ai', 'eps']],\n    ['application/powerpoint', 'ppt'],\n    ['application/pro_eng', ['part', 'prt']],\n    ['application/prs.cww', 'cww'],\n    ['application/pskc+xml', 'pskcxml'],\n    ['application/rdf+xml', 'rdf'],\n    ['application/reginfo+xml', 'rif'],\n    ['application/relax-ng-compact-syntax', 'rnc'],\n    ['application/resource-lists+xml', 'rl'],\n    ['application/resource-lists-diff+xml', 'rld'],\n    ['application/ringing-tones', 'rng'],\n    ['application/rls-services+xml', 'rs'],\n    ['application/rsd+xml', 'rsd'],\n    ['application/rss+xml', 'xml'],\n    ['application/rtf', ['rtf', 'rtx']],\n    ['application/sbml+xml', 'sbml'],\n    ['application/scvp-cv-request', 'scq'],\n    ['application/scvp-cv-response', 'scs'],\n    ['application/scvp-vp-request', 'spq'],\n    ['application/scvp-vp-response', 'spp'],\n    ['application/sdp', 'sdp'],\n    ['application/sea', 'sea'],\n    ['application/set', 'set'],\n    ['application/set-payment-initiation', 'setpay'],\n    ['application/set-registration-initiation', 'setreg'],\n    ['application/shf+xml', 'shf'],\n    ['application/sla', 'stl'],\n    ['application/smil', ['smi', 'smil']],\n    ['application/smil+xml', 'smi'],\n    ['application/solids', 'sol'],\n    ['application/sounder', 'sdr'],\n    ['application/sparql-query', 'rq'],\n    ['application/sparql-results+xml', 'srx'],\n    ['application/srgs', 'gram'],\n    ['application/srgs+xml', 'grxml'],\n    ['application/sru+xml', 'sru'],\n    ['application/ssml+xml', 'ssml'],\n    ['application/step', ['step', 'stp']],\n    ['application/streamingmedia', 'ssm'],\n    ['application/tei+xml', 'tei'],\n    ['application/thraud+xml', 'tfi'],\n    ['application/timestamped-data', 'tsd'],\n    ['application/toolbook', 'tbk'],\n    ['application/vda', 'vda'],\n    ['application/vnd.3gpp.pic-bw-large', 'plb'],\n    ['application/vnd.3gpp.pic-bw-small', 'psb'],\n    ['application/vnd.3gpp.pic-bw-var', 'pvb'],\n    ['application/vnd.3gpp2.tcap', 'tcap'],\n    ['application/vnd.3m.post-it-notes', 'pwn'],\n    ['application/vnd.accpac.simply.aso', 'aso'],\n    ['application/vnd.accpac.simply.imp', 'imp'],\n    ['application/vnd.acucobol', 'acu'],\n    ['application/vnd.acucorp', 'atc'],\n    ['application/vnd.adobe.air-application-installer-package+zip', 'air'],\n    ['application/vnd.adobe.fxp', 'fxp'],\n    ['application/vnd.adobe.xdp+xml', 'xdp'],\n    ['application/vnd.adobe.xfdf', 'xfdf'],\n    ['application/vnd.ahead.space', 'ahead'],\n    ['application/vnd.airzip.filesecure.azf', 'azf'],\n    ['application/vnd.airzip.filesecure.azs', 'azs'],\n    ['application/vnd.amazon.ebook', 'azw'],\n    ['application/vnd.americandynamics.acc', 'acc'],\n    ['application/vnd.amiga.ami', 'ami'],\n    ['application/vnd.android.package-archive', 'apk'],\n    ['application/vnd.anser-web-certificate-issue-initiation', 'cii'],\n    ['application/vnd.anser-web-funds-transfer-initiation', 'fti'],\n    ['application/vnd.antix.game-component', 'atx'],\n    ['application/vnd.apple.installer+xml', 'mpkg'],\n    ['application/vnd.apple.mpegurl', 'm3u8'],\n    ['application/vnd.aristanetworks.swi', 'swi'],\n    ['application/vnd.audiograph', 'aep'],\n    ['application/vnd.blueice.multipass', 'mpm'],\n    ['application/vnd.bmi', 'bmi'],\n    ['application/vnd.businessobjects', 'rep'],\n    ['application/vnd.chemdraw+xml', 'cdxml'],\n    ['application/vnd.chipnuts.karaoke-mmd', 'mmd'],\n    ['application/vnd.cinderella', 'cdy'],\n    ['application/vnd.claymore', 'cla'],\n    ['application/vnd.cloanto.rp9', 'rp9'],\n    ['application/vnd.clonk.c4group', 'c4g'],\n    ['application/vnd.cluetrust.cartomobile-config', 'c11amc'],\n    ['application/vnd.cluetrust.cartomobile-config-pkg', 'c11amz'],\n    ['application/vnd.commonspace', 'csp'],\n    ['application/vnd.contact.cmsg', 'cdbcmsg'],\n    ['application/vnd.cosmocaller', 'cmc'],\n    ['application/vnd.crick.clicker', 'clkx'],\n    ['application/vnd.crick.clicker.keyboard', 'clkk'],\n    ['application/vnd.crick.clicker.palette', 'clkp'],\n    ['application/vnd.crick.clicker.template', 'clkt'],\n    ['application/vnd.crick.clicker.wordbank', 'clkw'],\n    ['application/vnd.criticaltools.wbs+xml', 'wbs'],\n    ['application/vnd.ctc-posml', 'pml'],\n    ['application/vnd.cups-ppd', 'ppd'],\n    ['application/vnd.curl.car', 'car'],\n    ['application/vnd.curl.pcurl', 'pcurl'],\n    ['application/vnd.data-vision.rdz', 'rdz'],\n    ['application/vnd.denovo.fcselayout-link', 'fe_launch'],\n    ['application/vnd.dna', 'dna'],\n    ['application/vnd.dolby.mlp', 'mlp'],\n    ['application/vnd.dpgraph', 'dpg'],\n    ['application/vnd.dreamfactory', 'dfac'],\n    ['application/vnd.dvb.ait', 'ait'],\n    ['application/vnd.dvb.service', 'svc'],\n    ['application/vnd.dynageo', 'geo'],\n    ['application/vnd.ecowin.chart', 'mag'],\n    ['application/vnd.enliven', 'nml'],\n    ['application/vnd.epson.esf', 'esf'],\n    ['application/vnd.epson.msf', 'msf'],\n    ['application/vnd.epson.quickanime', 'qam'],\n    ['application/vnd.epson.salt', 'slt'],\n    ['application/vnd.epson.ssf', 'ssf'],\n    ['application/vnd.eszigno3+xml', 'es3'],\n    ['application/vnd.ezpix-album', 'ez2'],\n    ['application/vnd.ezpix-package', 'ez3'],\n    ['application/vnd.fdf', 'fdf'],\n    ['application/vnd.fdsn.seed', 'seed'],\n    ['application/vnd.flographit', 'gph'],\n    ['application/vnd.fluxtime.clip', 'ftc'],\n    ['application/vnd.framemaker', 'fm'],\n    ['application/vnd.frogans.fnc', 'fnc'],\n    ['application/vnd.frogans.ltf', 'ltf'],\n    ['application/vnd.fsc.weblaunch', 'fsc'],\n    ['application/vnd.fujitsu.oasys', 'oas'],\n    ['application/vnd.fujitsu.oasys2', 'oa2'],\n    ['application/vnd.fujitsu.oasys3', 'oa3'],\n    ['application/vnd.fujitsu.oasysgp', 'fg5'],\n    ['application/vnd.fujitsu.oasysprs', 'bh2'],\n    ['application/vnd.fujixerox.ddd', 'ddd'],\n    ['application/vnd.fujixerox.docuworks', 'xdw'],\n    ['application/vnd.fujixerox.docuworks.binder', 'xbd'],\n    ['application/vnd.fuzzysheet', 'fzs'],\n    ['application/vnd.genomatix.tuxedo', 'txd'],\n    ['application/vnd.geogebra.file', 'ggb'],\n    ['application/vnd.geogebra.tool', 'ggt'],\n    ['application/vnd.geometry-explorer', 'gex'],\n    ['application/vnd.geonext', 'gxt'],\n    ['application/vnd.geoplan', 'g2w'],\n    ['application/vnd.geospace', 'g3w'],\n    ['application/vnd.gmx', 'gmx'],\n    ['application/vnd.google-earth.kml+xml', 'kml'],\n    ['application/vnd.google-earth.kmz', 'kmz'],\n    ['application/vnd.grafeq', 'gqf'],\n    ['application/vnd.groove-account', 'gac'],\n    ['application/vnd.groove-help', 'ghf'],\n    ['application/vnd.groove-identity-message', 'gim'],\n    ['application/vnd.groove-injector', 'grv'],\n    ['application/vnd.groove-tool-message', 'gtm'],\n    ['application/vnd.groove-tool-template', 'tpl'],\n    ['application/vnd.groove-vcard', 'vcg'],\n    ['application/vnd.hal+xml', 'hal'],\n    ['application/vnd.handheld-entertainment+xml', 'zmm'],\n    ['application/vnd.hbci', 'hbci'],\n    ['application/vnd.hhe.lesson-player', 'les'],\n    ['application/vnd.hp-hpgl', ['hgl', 'hpg', 'hpgl']],\n    ['application/vnd.hp-hpid', 'hpid'],\n    ['application/vnd.hp-hps', 'hps'],\n    ['application/vnd.hp-jlyt', 'jlt'],\n    ['application/vnd.hp-pcl', 'pcl'],\n    ['application/vnd.hp-pclxl', 'pclxl'],\n    ['application/vnd.hydrostatix.sof-data', 'sfd-hdstx'],\n    ['application/vnd.hzn-3d-crossword', 'x3d'],\n    ['application/vnd.ibm.minipay', 'mpy'],\n    ['application/vnd.ibm.modcap', 'afp'],\n    ['application/vnd.ibm.rights-management', 'irm'],\n    ['application/vnd.ibm.secure-container', 'sc'],\n    ['application/vnd.iccprofile', 'icc'],\n    ['application/vnd.igloader', 'igl'],\n    ['application/vnd.immervision-ivp', 'ivp'],\n    ['application/vnd.immervision-ivu', 'ivu'],\n    ['application/vnd.insors.igm', 'igm'],\n    ['application/vnd.intercon.formnet', 'xpw'],\n    ['application/vnd.intergeo', 'i2g'],\n    ['application/vnd.intu.qbo', 'qbo'],\n    ['application/vnd.intu.qfx', 'qfx'],\n    ['application/vnd.ipunplugged.rcprofile', 'rcprofile'],\n    ['application/vnd.irepository.package+xml', 'irp'],\n    ['application/vnd.is-xpr', 'xpr'],\n    ['application/vnd.isac.fcs', 'fcs'],\n    ['application/vnd.jam', 'jam'],\n    ['application/vnd.jcp.javame.midlet-rms', 'rms'],\n    ['application/vnd.jisp', 'jisp'],\n    ['application/vnd.joost.joda-archive', 'joda'],\n    ['application/vnd.kahootz', 'ktz'],\n    ['application/vnd.kde.karbon', 'karbon'],\n    ['application/vnd.kde.kchart', 'chrt'],\n    ['application/vnd.kde.kformula', 'kfo'],\n    ['application/vnd.kde.kivio', 'flw'],\n    ['application/vnd.kde.kontour', 'kon'],\n    ['application/vnd.kde.kpresenter', 'kpr'],\n    ['application/vnd.kde.kspread', 'ksp'],\n    ['application/vnd.kde.kword', 'kwd'],\n    ['application/vnd.kenameaapp', 'htke'],\n    ['application/vnd.kidspiration', 'kia'],\n    ['application/vnd.kinar', 'kne'],\n    ['application/vnd.koan', 'skp'],\n    ['application/vnd.kodak-descriptor', 'sse'],\n    ['application/vnd.las.las+xml', 'lasxml'],\n    ['application/vnd.llamagraphics.life-balance.desktop', 'lbd'],\n    ['application/vnd.llamagraphics.life-balance.exchange+xml', 'lbe'],\n    ['application/vnd.lotus-1-2-3', '123'],\n    ['application/vnd.lotus-approach', 'apr'],\n    ['application/vnd.lotus-freelance', 'pre'],\n    ['application/vnd.lotus-notes', 'nsf'],\n    ['application/vnd.lotus-organizer', 'org'],\n    ['application/vnd.lotus-screencam', 'scm'],\n    ['application/vnd.lotus-wordpro', 'lwp'],\n    ['application/vnd.macports.portpkg', 'portpkg'],\n    ['application/vnd.mcd', 'mcd'],\n    ['application/vnd.medcalcdata', 'mc1'],\n    ['application/vnd.mediastation.cdkey', 'cdkey'],\n    ['application/vnd.mfer', 'mwf'],\n    ['application/vnd.mfmp', 'mfm'],\n    ['application/vnd.micrografx.flo', 'flo'],\n    ['application/vnd.micrografx.igx', 'igx'],\n    ['application/vnd.mif', 'mif'],\n    ['application/vnd.mobius.daf', 'daf'],\n    ['application/vnd.mobius.dis', 'dis'],\n    ['application/vnd.mobius.mbk', 'mbk'],\n    ['application/vnd.mobius.mqy', 'mqy'],\n    ['application/vnd.mobius.msl', 'msl'],\n    ['application/vnd.mobius.plc', 'plc'],\n    ['application/vnd.mobius.txf', 'txf'],\n    ['application/vnd.mophun.application', 'mpn'],\n    ['application/vnd.mophun.certificate', 'mpc'],\n    ['application/vnd.mozilla.xul+xml', 'xul'],\n    ['application/vnd.ms-artgalry', 'cil'],\n    ['application/vnd.ms-cab-compressed', 'cab'],\n    ['application/vnd.ms-excel', ['xls', 'xla', 'xlc', 'xlm', 'xlt', 'xlw', 'xlb', 'xll']],\n    ['application/vnd.ms-excel.addin.macroenabled.12', 'xlam'],\n    ['application/vnd.ms-excel.sheet.binary.macroenabled.12', 'xlsb'],\n    ['application/vnd.ms-excel.sheet.macroenabled.12', 'xlsm'],\n    ['application/vnd.ms-excel.template.macroenabled.12', 'xltm'],\n    ['application/vnd.ms-fontobject', 'eot'],\n    ['application/vnd.ms-htmlhelp', 'chm'],\n    ['application/vnd.ms-ims', 'ims'],\n    ['application/vnd.ms-lrm', 'lrm'],\n    ['application/vnd.ms-officetheme', 'thmx'],\n    ['application/vnd.ms-outlook', 'msg'],\n    ['application/vnd.ms-pki.certstore', 'sst'],\n    ['application/vnd.ms-pki.pko', 'pko'],\n    ['application/vnd.ms-pki.seccat', 'cat'],\n    ['application/vnd.ms-pki.stl', 'stl'],\n    ['application/vnd.ms-pkicertstore', 'sst'],\n    ['application/vnd.ms-pkiseccat', 'cat'],\n    ['application/vnd.ms-pkistl', 'stl'],\n    ['application/vnd.ms-powerpoint', ['ppt', 'pot', 'pps', 'ppa', 'pwz']],\n    ['application/vnd.ms-powerpoint.addin.macroenabled.12', 'ppam'],\n    ['application/vnd.ms-powerpoint.presentation.macroenabled.12', 'pptm'],\n    ['application/vnd.ms-powerpoint.slide.macroenabled.12', 'sldm'],\n    ['application/vnd.ms-powerpoint.slideshow.macroenabled.12', 'ppsm'],\n    ['application/vnd.ms-powerpoint.template.macroenabled.12', 'potm'],\n    ['application/vnd.ms-project', 'mpp'],\n    ['application/vnd.ms-word.document.macroenabled.12', 'docm'],\n    ['application/vnd.ms-word.template.macroenabled.12', 'dotm'],\n    ['application/vnd.ms-works', ['wks', 'wcm', 'wdb', 'wps']],\n    ['application/vnd.ms-wpl', 'wpl'],\n    ['application/vnd.ms-xpsdocument', 'xps'],\n    ['application/vnd.mseq', 'mseq'],\n    ['application/vnd.musician', 'mus'],\n    ['application/vnd.muvee.style', 'msty'],\n    ['application/vnd.neurolanguage.nlu', 'nlu'],\n    ['application/vnd.noblenet-directory', 'nnd'],\n    ['application/vnd.noblenet-sealer', 'nns'],\n    ['application/vnd.noblenet-web', 'nnw'],\n    ['application/vnd.nokia.configuration-message', 'ncm'],\n    ['application/vnd.nokia.n-gage.data', 'ngdat'],\n    ['application/vnd.nokia.n-gage.symbian.install', 'n-gage'],\n    ['application/vnd.nokia.radio-preset', 'rpst'],\n    ['application/vnd.nokia.radio-presets', 'rpss'],\n    ['application/vnd.nokia.ringing-tone', 'rng'],\n    ['application/vnd.novadigm.edm', 'edm'],\n    ['application/vnd.novadigm.edx', 'edx'],\n    ['application/vnd.novadigm.ext', 'ext'],\n    ['application/vnd.oasis.opendocument.chart', 'odc'],\n    ['application/vnd.oasis.opendocument.chart-template', 'otc'],\n    ['application/vnd.oasis.opendocument.database', 'odb'],\n    ['application/vnd.oasis.opendocument.formula', 'odf'],\n    ['application/vnd.oasis.opendocument.formula-template', 'odft'],\n    ['application/vnd.oasis.opendocument.graphics', 'odg'],\n    ['application/vnd.oasis.opendocument.graphics-template', 'otg'],\n    ['application/vnd.oasis.opendocument.image', 'odi'],\n    ['application/vnd.oasis.opendocument.image-template', 'oti'],\n    ['application/vnd.oasis.opendocument.presentation', 'odp'],\n    ['application/vnd.oasis.opendocument.presentation-template', 'otp'],\n    ['application/vnd.oasis.opendocument.spreadsheet', 'ods'],\n    ['application/vnd.oasis.opendocument.spreadsheet-template', 'ots'],\n    ['application/vnd.oasis.opendocument.text', 'odt'],\n    ['application/vnd.oasis.opendocument.text-master', 'odm'],\n    ['application/vnd.oasis.opendocument.text-template', 'ott'],\n    ['application/vnd.oasis.opendocument.text-web', 'oth'],\n    ['application/vnd.olpc-sugar', 'xo'],\n    ['application/vnd.oma.dd2+xml', 'dd2'],\n    ['application/vnd.openofficeorg.extension', 'oxt'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.presentation', 'pptx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slide', 'sldx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'ppsx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.template', 'potx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'xltx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'docx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'dotx'],\n    ['application/vnd.osgeo.mapguide.package', 'mgp'],\n    ['application/vnd.osgi.dp', 'dp'],\n    ['application/vnd.palm', 'pdb'],\n    ['application/vnd.pawaafile', 'paw'],\n    ['application/vnd.pg.format', 'str'],\n    ['application/vnd.pg.osasli', 'ei6'],\n    ['application/vnd.picsel', 'efif'],\n    ['application/vnd.pmi.widget', 'wg'],\n    ['application/vnd.pocketlearn', 'plf'],\n    ['application/vnd.powerbuilder6', 'pbd'],\n    ['application/vnd.previewsystems.box', 'box'],\n    ['application/vnd.proteus.magazine', 'mgz'],\n    ['application/vnd.publishare-delta-tree', 'qps'],\n    ['application/vnd.pvi.ptid1', 'ptid'],\n    ['application/vnd.quark.quarkxpress', 'qxd'],\n    ['application/vnd.realvnc.bed', 'bed'],\n    ['application/vnd.recordare.musicxml', 'mxl'],\n    ['application/vnd.recordare.musicxml+xml', 'musicxml'],\n    ['application/vnd.rig.cryptonote', 'cryptonote'],\n    ['application/vnd.rim.cod', 'cod'],\n    ['application/vnd.rn-realmedia', 'rm'],\n    ['application/vnd.rn-realplayer', 'rnx'],\n    ['application/vnd.route66.link66+xml', 'link66'],\n    ['application/vnd.sailingtracker.track', 'st'],\n    ['application/vnd.seemail', 'see'],\n    ['application/vnd.sema', 'sema'],\n    ['application/vnd.semd', 'semd'],\n    ['application/vnd.semf', 'semf'],\n    ['application/vnd.shana.informed.formdata', 'ifm'],\n    ['application/vnd.shana.informed.formtemplate', 'itp'],\n    ['application/vnd.shana.informed.interchange', 'iif'],\n    ['application/vnd.shana.informed.package', 'ipk'],\n    ['application/vnd.simtech-mindmapper', 'twd'],\n    ['application/vnd.smaf', 'mmf'],\n    ['application/vnd.smart.teacher', 'teacher'],\n    ['application/vnd.solent.sdkm+xml', 'sdkm'],\n    ['application/vnd.spotfire.dxp', 'dxp'],\n    ['application/vnd.spotfire.sfs', 'sfs'],\n    ['application/vnd.stardivision.calc', 'sdc'],\n    ['application/vnd.stardivision.draw', 'sda'],\n    ['application/vnd.stardivision.impress', 'sdd'],\n    ['application/vnd.stardivision.math', 'smf'],\n    ['application/vnd.stardivision.writer', 'sdw'],\n    ['application/vnd.stardivision.writer-global', 'sgl'],\n    ['application/vnd.stepmania.stepchart', 'sm'],\n    ['application/vnd.sun.xml.calc', 'sxc'],\n    ['application/vnd.sun.xml.calc.template', 'stc'],\n    ['application/vnd.sun.xml.draw', 'sxd'],\n    ['application/vnd.sun.xml.draw.template', 'std'],\n    ['application/vnd.sun.xml.impress', 'sxi'],\n    ['application/vnd.sun.xml.impress.template', 'sti'],\n    ['application/vnd.sun.xml.math', 'sxm'],\n    ['application/vnd.sun.xml.writer', 'sxw'],\n    ['application/vnd.sun.xml.writer.global', 'sxg'],\n    ['application/vnd.sun.xml.writer.template', 'stw'],\n    ['application/vnd.sus-calendar', 'sus'],\n    ['application/vnd.svd', 'svd'],\n    ['application/vnd.symbian.install', 'sis'],\n    ['application/vnd.syncml+xml', 'xsm'],\n    ['application/vnd.syncml.dm+wbxml', 'bdm'],\n    ['application/vnd.syncml.dm+xml', 'xdm'],\n    ['application/vnd.tao.intent-module-archive', 'tao'],\n    ['application/vnd.tmobile-livetv', 'tmo'],\n    ['application/vnd.trid.tpt', 'tpt'],\n    ['application/vnd.triscape.mxs', 'mxs'],\n    ['application/vnd.trueapp', 'tra'],\n    ['application/vnd.ufdl', 'ufd'],\n    ['application/vnd.uiq.theme', 'utz'],\n    ['application/vnd.umajin', 'umj'],\n    ['application/vnd.unity', 'unityweb'],\n    ['application/vnd.uoml+xml', 'uoml'],\n    ['application/vnd.vcx', 'vcx'],\n    ['application/vnd.visio', 'vsd'],\n    ['application/vnd.visionary', 'vis'],\n    ['application/vnd.vsf', 'vsf'],\n    ['application/vnd.wap.wbxml', 'wbxml'],\n    ['application/vnd.wap.wmlc', 'wmlc'],\n    ['application/vnd.wap.wmlscriptc', 'wmlsc'],\n    ['application/vnd.webturbo', 'wtb'],\n    ['application/vnd.wolfram.player', 'nbp'],\n    ['application/vnd.wordperfect', 'wpd'],\n    ['application/vnd.wqd', 'wqd'],\n    ['application/vnd.wt.stf', 'stf'],\n    ['application/vnd.xara', ['web', 'xar']],\n    ['application/vnd.xfdl', 'xfdl'],\n    ['application/vnd.yamaha.hv-dic', 'hvd'],\n    ['application/vnd.yamaha.hv-script', 'hvs'],\n    ['application/vnd.yamaha.hv-voice', 'hvp'],\n    ['application/vnd.yamaha.openscoreformat', 'osf'],\n    ['application/vnd.yamaha.openscoreformat.osfpvg+xml', 'osfpvg'],\n    ['application/vnd.yamaha.smaf-audio', 'saf'],\n    ['application/vnd.yamaha.smaf-phrase', 'spf'],\n    ['application/vnd.yellowriver-custom-menu', 'cmp'],\n    ['application/vnd.zul', 'zir'],\n    ['application/vnd.zzazz.deck+xml', 'zaz'],\n    ['application/vocaltec-media-desc', 'vmd'],\n    ['application/vocaltec-media-file', 'vmf'],\n    ['application/voicexml+xml', 'vxml'],\n    ['application/widget', 'wgt'],\n    ['application/winhlp', 'hlp'],\n    ['application/wordperfect', ['wp', 'wp5', 'wp6', 'wpd']],\n    ['application/wordperfect6.0', ['w60', 'wp5']],\n    ['application/wordperfect6.1', 'w61'],\n    ['application/wsdl+xml', 'wsdl'],\n    ['application/wspolicy+xml', 'wspolicy'],\n    ['application/x-123', 'wk1'],\n    ['application/x-7z-compressed', '7z'],\n    ['application/x-abiword', 'abw'],\n    ['application/x-ace-compressed', 'ace'],\n    ['application/x-aim', 'aim'],\n    ['application/x-authorware-bin', 'aab'],\n    ['application/x-authorware-map', 'aam'],\n    ['application/x-authorware-seg', 'aas'],\n    ['application/x-bcpio', 'bcpio'],\n    ['application/x-binary', 'bin'],\n    ['application/x-binhex40', 'hqx'],\n    ['application/x-bittorrent', 'torrent'],\n    ['application/x-bsh', ['bsh', 'sh', 'shar']],\n    ['application/x-bytecode.elisp', 'elc'],\n    ['application/x-bytecode.python', 'pyc'],\n    ['application/x-bzip', 'bz'],\n    ['application/x-bzip2', ['boz', 'bz2']],\n    ['application/x-cdf', 'cdf'],\n    ['application/x-cdlink', 'vcd'],\n    ['application/x-chat', ['cha', 'chat']],\n    ['application/x-chess-pgn', 'pgn'],\n    ['application/x-cmu-raster', 'ras'],\n    ['application/x-cocoa', 'cco'],\n    ['application/x-compactpro', 'cpt'],\n    ['application/x-compress', 'z'],\n    ['application/x-compressed', ['tgz', 'gz', 'z', 'zip']],\n    ['application/x-conference', 'nsc'],\n    ['application/x-cpio', 'cpio'],\n    ['application/x-cpt', 'cpt'],\n    ['application/x-csh', 'csh'],\n    ['application/x-debian-package', 'deb'],\n    ['application/x-deepv', 'deepv'],\n    ['application/x-director', ['dir', 'dcr', 'dxr']],\n    ['application/x-doom', 'wad'],\n    ['application/x-dtbncx+xml', 'ncx'],\n    ['application/x-dtbook+xml', 'dtb'],\n    ['application/x-dtbresource+xml', 'res'],\n    ['application/x-dvi', 'dvi'],\n    ['application/x-elc', 'elc'],\n    ['application/x-envoy', ['env', 'evy']],\n    ['application/x-esrehber', 'es'],\n    ['application/x-excel', ['xls', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/x-font-bdf', 'bdf'],\n    ['application/x-font-ghostscript', 'gsf'],\n    ['application/x-font-linux-psf', 'psf'],\n    ['application/x-font-otf', 'otf'],\n    ['application/x-font-pcf', 'pcf'],\n    ['application/x-font-snf', 'snf'],\n    ['application/x-font-ttf', 'ttf'],\n    ['application/x-font-type1', 'pfa'],\n    ['application/x-font-woff', 'woff'],\n    ['application/x-frame', 'mif'],\n    ['application/x-freelance', 'pre'],\n    ['application/x-futuresplash', 'spl'],\n    ['application/x-gnumeric', 'gnumeric'],\n    ['application/x-gsp', 'gsp'],\n    ['application/x-gss', 'gss'],\n    ['application/x-gtar', 'gtar'],\n    ['application/x-gzip', ['gz', 'gzip']],\n    ['application/x-hdf', 'hdf'],\n    ['application/x-helpfile', ['help', 'hlp']],\n    ['application/x-httpd-imap', 'imap'],\n    ['application/x-ima', 'ima'],\n    ['application/x-internet-signup', ['ins', 'isp']],\n    ['application/x-internett-signup', 'ins'],\n    ['application/x-inventor', 'iv'],\n    ['application/x-ip2', 'ip'],\n    ['application/x-iphone', 'iii'],\n    ['application/x-java-class', 'class'],\n    ['application/x-java-commerce', 'jcm'],\n    ['application/x-java-jnlp-file', 'jnlp'],\n    ['application/x-javascript', 'js'],\n    ['application/x-koan', ['skd', 'skm', 'skp', 'skt']],\n    ['application/x-ksh', 'ksh'],\n    ['application/x-latex', ['latex', 'ltx']],\n    ['application/x-lha', 'lha'],\n    ['application/x-lisp', 'lsp'],\n    ['application/x-livescreen', 'ivy'],\n    ['application/x-lotus', 'wq1'],\n    ['application/x-lotusscreencam', 'scm'],\n    ['application/x-lzh', 'lzh'],\n    ['application/x-lzx', 'lzx'],\n    ['application/x-mac-binhex40', 'hqx'],\n    ['application/x-macbinary', 'bin'],\n    ['application/x-magic-cap-package-1.0', 'mc$'],\n    ['application/x-mathcad', 'mcd'],\n    ['application/x-meme', 'mm'],\n    ['application/x-midi', ['mid', 'midi']],\n    ['application/x-mif', 'mif'],\n    ['application/x-mix-transfer', 'nix'],\n    ['application/x-mobipocket-ebook', 'prc'],\n    ['application/x-mplayer2', 'asx'],\n    ['application/x-ms-application', 'application'],\n    ['application/x-ms-wmd', 'wmd'],\n    ['application/x-ms-wmz', 'wmz'],\n    ['application/x-ms-xbap', 'xbap'],\n    ['application/x-msaccess', 'mdb'],\n    ['application/x-msbinder', 'obd'],\n    ['application/x-mscardfile', 'crd'],\n    ['application/x-msclip', 'clp'],\n    ['application/x-msdownload', ['exe', 'dll']],\n    ['application/x-msexcel', ['xls', 'xla', 'xlw']],\n    ['application/x-msmediaview', ['mvb', 'm13', 'm14']],\n    ['application/x-msmetafile', 'wmf'],\n    ['application/x-msmoney', 'mny'],\n    ['application/x-mspowerpoint', 'ppt'],\n    ['application/x-mspublisher', 'pub'],\n    ['application/x-msschedule', 'scd'],\n    ['application/x-msterminal', 'trm'],\n    ['application/x-mswrite', 'wri'],\n    ['application/x-navi-animation', 'ani'],\n    ['application/x-navidoc', 'nvd'],\n    ['application/x-navimap', 'map'],\n    ['application/x-navistyle', 'stl'],\n    ['application/x-netcdf', ['cdf', 'nc']],\n    ['application/x-newton-compatible-pkg', 'pkg'],\n    ['application/x-nokia-9000-communicator-add-on-software', 'aos'],\n    ['application/x-omc', 'omc'],\n    ['application/x-omcdatamaker', 'omcd'],\n    ['application/x-omcregerator', 'omcr'],\n    ['application/x-pagemaker', ['pm4', 'pm5']],\n    ['application/x-pcl', 'pcl'],\n    ['application/x-perfmon', ['pma', 'pmc', 'pml', 'pmr', 'pmw']],\n    ['application/x-pixclscript', 'plx'],\n    ['application/x-pkcs10', 'p10'],\n    ['application/x-pkcs12', ['p12', 'pfx']],\n    ['application/x-pkcs7-certificates', ['p7b', 'spc']],\n    ['application/x-pkcs7-certreqresp', 'p7r'],\n    ['application/x-pkcs7-mime', ['p7m', 'p7c']],\n    ['application/x-pkcs7-signature', ['p7s', 'p7a']],\n    ['application/x-pointplus', 'css'],\n    ['application/x-portable-anymap', 'pnm'],\n    ['application/x-project', ['mpc', 'mpt', 'mpv', 'mpx']],\n    ['application/x-qpro', 'wb1'],\n    ['application/x-rar-compressed', 'rar'],\n    ['application/x-rtf', 'rtf'],\n    ['application/x-sdp', 'sdp'],\n    ['application/x-sea', 'sea'],\n    ['application/x-seelogo', 'sl'],\n    ['application/x-sh', 'sh'],\n    ['application/x-shar', ['shar', 'sh']],\n    ['application/x-shockwave-flash', 'swf'],\n    ['application/x-silverlight-app', 'xap'],\n    ['application/x-sit', 'sit'],\n    ['application/x-sprite', ['spr', 'sprite']],\n    ['application/x-stuffit', 'sit'],\n    ['application/x-stuffitx', 'sitx'],\n    ['application/x-sv4cpio', 'sv4cpio'],\n    ['application/x-sv4crc', 'sv4crc'],\n    ['application/x-tar', 'tar'],\n    ['application/x-tbook', ['sbk', 'tbk']],\n    ['application/x-tcl', 'tcl'],\n    ['application/x-tex', 'tex'],\n    ['application/x-tex-tfm', 'tfm'],\n    ['application/x-texinfo', ['texi', 'texinfo']],\n    ['application/x-troff', ['roff', 't', 'tr']],\n    ['application/x-troff-man', 'man'],\n    ['application/x-troff-me', 'me'],\n    ['application/x-troff-ms', 'ms'],\n    ['application/x-troff-msvideo', 'avi'],\n    ['application/x-ustar', 'ustar'],\n    ['application/x-visio', ['vsd', 'vst', 'vsw']],\n    ['application/x-vnd.audioexplosion.mzz', 'mzz'],\n    ['application/x-vnd.ls-xpix', 'xpix'],\n    ['application/x-vrml', 'vrml'],\n    ['application/x-wais-source', ['src', 'wsrc']],\n    ['application/x-winhelp', 'hlp'],\n    ['application/x-wintalk', 'wtk'],\n    ['application/x-world', ['wrl', 'svr']],\n    ['application/x-wpwin', 'wpd'],\n    ['application/x-wri', 'wri'],\n    ['application/x-x509-ca-cert', ['cer', 'crt', 'der']],\n    ['application/x-x509-user-cert', 'crt'],\n    ['application/x-xfig', 'fig'],\n    ['application/x-xpinstall', 'xpi'],\n    ['application/x-zip-compressed', 'zip'],\n    ['application/xcap-diff+xml', 'xdf'],\n    ['application/xenc+xml', 'xenc'],\n    ['application/xhtml+xml', 'xhtml'],\n    ['application/xml', 'xml'],\n    ['application/xml-dtd', 'dtd'],\n    ['application/xop+xml', 'xop'],\n    ['application/xslt+xml', 'xslt'],\n    ['application/xspf+xml', 'xspf'],\n    ['application/xv+xml', 'mxml'],\n    ['application/yang', 'yang'],\n    ['application/yin+xml', 'yin'],\n    ['application/ynd.ms-pkipko', 'pko'],\n    ['application/zip', 'zip'],\n    ['audio/adpcm', 'adp'],\n    ['audio/aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/basic', ['snd', 'au']],\n    ['audio/it', 'it'],\n    ['audio/make', ['funk', 'my', 'pfunk']],\n    ['audio/make.my.funk', 'pfunk'],\n    ['audio/mid', ['mid', 'rmi']],\n    ['audio/midi', ['midi', 'kar', 'mid']],\n    ['audio/mod', 'mod'],\n    ['audio/mp4', 'mp4a'],\n    ['audio/mpeg', ['mpga', 'mp3', 'm2a', 'mp2', 'mpa', 'mpg']],\n    ['audio/mpeg3', 'mp3'],\n    ['audio/nspaudio', ['la', 'lma']],\n    ['audio/ogg', 'oga'],\n    ['audio/s3m', 's3m'],\n    ['audio/tsp-audio', 'tsi'],\n    ['audio/tsplayer', 'tsp'],\n    ['audio/vnd.dece.audio', 'uva'],\n    ['audio/vnd.digital-winds', 'eol'],\n    ['audio/vnd.dra', 'dra'],\n    ['audio/vnd.dts', 'dts'],\n    ['audio/vnd.dts.hd', 'dtshd'],\n    ['audio/vnd.lucent.voice', 'lvp'],\n    ['audio/vnd.ms-playready.media.pya', 'pya'],\n    ['audio/vnd.nuera.ecelp4800', 'ecelp4800'],\n    ['audio/vnd.nuera.ecelp7470', 'ecelp7470'],\n    ['audio/vnd.nuera.ecelp9600', 'ecelp9600'],\n    ['audio/vnd.qcelp', 'qcp'],\n    ['audio/vnd.rip', 'rip'],\n    ['audio/voc', 'voc'],\n    ['audio/voxware', 'vox'],\n    ['audio/wav', 'wav'],\n    ['audio/webm', 'weba'],\n    ['audio/x-aac', 'aac'],\n    ['audio/x-adpcm', 'snd'],\n    ['audio/x-aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/x-au', 'au'],\n    ['audio/x-gsm', ['gsd', 'gsm']],\n    ['audio/x-jam', 'jam'],\n    ['audio/x-liveaudio', 'lam'],\n    ['audio/x-mid', ['mid', 'midi']],\n    ['audio/x-midi', ['midi', 'mid']],\n    ['audio/x-mod', 'mod'],\n    ['audio/x-mpeg', 'mp2'],\n    ['audio/x-mpeg-3', 'mp3'],\n    ['audio/x-mpegurl', 'm3u'],\n    ['audio/x-mpequrl', 'm3u'],\n    ['audio/x-ms-wax', 'wax'],\n    ['audio/x-ms-wma', 'wma'],\n    ['audio/x-nspaudio', ['la', 'lma']],\n    ['audio/x-pn-realaudio', ['ra', 'ram', 'rm', 'rmm', 'rmp']],\n    ['audio/x-pn-realaudio-plugin', ['ra', 'rmp', 'rpm']],\n    ['audio/x-psid', 'sid'],\n    ['audio/x-realaudio', 'ra'],\n    ['audio/x-twinvq', 'vqf'],\n    ['audio/x-twinvq-plugin', ['vqe', 'vql']],\n    ['audio/x-vnd.audioexplosion.mjuicemediafile', 'mjf'],\n    ['audio/x-voc', 'voc'],\n    ['audio/x-wav', 'wav'],\n    ['audio/xm', 'xm'],\n    ['chemical/x-cdx', 'cdx'],\n    ['chemical/x-cif', 'cif'],\n    ['chemical/x-cmdf', 'cmdf'],\n    ['chemical/x-cml', 'cml'],\n    ['chemical/x-csml', 'csml'],\n    ['chemical/x-pdb', ['pdb', 'xyz']],\n    ['chemical/x-xyz', 'xyz'],\n    ['drawing/x-dwf', 'dwf'],\n    ['i-world/i-vrml', 'ivr'],\n    ['image/bmp', ['bmp', 'bm']],\n    ['image/cgm', 'cgm'],\n    ['image/cis-cod', 'cod'],\n    ['image/cmu-raster', ['ras', 'rast']],\n    ['image/fif', 'fif'],\n    ['image/florian', ['flo', 'turbot']],\n    ['image/g3fax', 'g3'],\n    ['image/gif', 'gif'],\n    ['image/ief', ['ief', 'iefs']],\n    ['image/jpeg', ['jpeg', 'jpe', 'jpg', 'jfif', 'jfif-tbnl']],\n    ['image/jutvision', 'jut'],\n    ['image/ktx', 'ktx'],\n    ['image/naplps', ['nap', 'naplps']],\n    ['image/pict', ['pic', 'pict']],\n    ['image/pipeg', 'jfif'],\n    ['image/pjpeg', ['jfif', 'jpe', 'jpeg', 'jpg']],\n    ['image/png', ['png', 'x-png']],\n    ['image/prs.btif', 'btif'],\n    ['image/svg+xml', 'svg'],\n    ['image/tiff', ['tif', 'tiff']],\n    ['image/vasa', 'mcf'],\n    ['image/vnd.adobe.photoshop', 'psd'],\n    ['image/vnd.dece.graphic', 'uvi'],\n    ['image/vnd.djvu', 'djvu'],\n    ['image/vnd.dvb.subtitle', 'sub'],\n    ['image/vnd.dwg', ['dwg', 'dxf', 'svf']],\n    ['image/vnd.dxf', 'dxf'],\n    ['image/vnd.fastbidsheet', 'fbs'],\n    ['image/vnd.fpx', 'fpx'],\n    ['image/vnd.fst', 'fst'],\n    ['image/vnd.fujixerox.edmics-mmr', 'mmr'],\n    ['image/vnd.fujixerox.edmics-rlc', 'rlc'],\n    ['image/vnd.ms-modi', 'mdi'],\n    ['image/vnd.net-fpx', ['fpx', 'npx']],\n    ['image/vnd.rn-realflash', 'rf'],\n    ['image/vnd.rn-realpix', 'rp'],\n    ['image/vnd.wap.wbmp', 'wbmp'],\n    ['image/vnd.xiff', 'xif'],\n    ['image/webp', 'webp'],\n    ['image/x-cmu-raster', 'ras'],\n    ['image/x-cmx', 'cmx'],\n    ['image/x-dwg', ['dwg', 'dxf', 'svf']],\n    ['image/x-freehand', 'fh'],\n    ['image/x-icon', 'ico'],\n    ['image/x-jg', 'art'],\n    ['image/x-jps', 'jps'],\n    ['image/x-niff', ['niff', 'nif']],\n    ['image/x-pcx', 'pcx'],\n    ['image/x-pict', ['pct', 'pic']],\n    ['image/x-portable-anymap', 'pnm'],\n    ['image/x-portable-bitmap', 'pbm'],\n    ['image/x-portable-graymap', 'pgm'],\n    ['image/x-portable-greymap', 'pgm'],\n    ['image/x-portable-pixmap', 'ppm'],\n    ['image/x-quicktime', ['qif', 'qti', 'qtif']],\n    ['image/x-rgb', 'rgb'],\n    ['image/x-tiff', ['tif', 'tiff']],\n    ['image/x-windows-bmp', 'bmp'],\n    ['image/x-xbitmap', 'xbm'],\n    ['image/x-xbm', 'xbm'],\n    ['image/x-xpixmap', ['xpm', 'pm']],\n    ['image/x-xwd', 'xwd'],\n    ['image/x-xwindowdump', 'xwd'],\n    ['image/xbm', 'xbm'],\n    ['image/xpm', 'xpm'],\n    ['message/rfc822', ['eml', 'mht', 'mhtml', 'nws', 'mime']],\n    ['model/iges', ['iges', 'igs']],\n    ['model/mesh', 'msh'],\n    ['model/vnd.collada+xml', 'dae'],\n    ['model/vnd.dwf', 'dwf'],\n    ['model/vnd.gdl', 'gdl'],\n    ['model/vnd.gtw', 'gtw'],\n    ['model/vnd.mts', 'mts'],\n    ['model/vnd.vtu', 'vtu'],\n    ['model/vrml', ['vrml', 'wrl', 'wrz']],\n    ['model/x-pov', 'pov'],\n    ['multipart/x-gzip', 'gzip'],\n    ['multipart/x-ustar', 'ustar'],\n    ['multipart/x-zip', 'zip'],\n    ['music/crescendo', ['mid', 'midi']],\n    ['music/x-karaoke', 'kar'],\n    ['paleovu/x-pv', 'pvu'],\n    ['text/asp', 'asp'],\n    ['text/calendar', 'ics'],\n    ['text/css', 'css'],\n    ['text/csv', 'csv'],\n    ['text/ecmascript', 'js'],\n    ['text/h323', '323'],\n    ['text/html', ['html', 'htm', 'stm', 'acgi', 'htmls', 'htx', 'shtml']],\n    ['text/iuls', 'uls'],\n    ['text/javascript', 'js'],\n    ['text/mcf', 'mcf'],\n    ['text/n3', 'n3'],\n    ['text/pascal', 'pas'],\n    [\n        'text/plain',\n        [\n            'txt',\n            'bas',\n            'c',\n            'h',\n            'c++',\n            'cc',\n            'com',\n            'conf',\n            'cxx',\n            'def',\n            'f',\n            'f90',\n            'for',\n            'g',\n            'hh',\n            'idc',\n            'jav',\n            'java',\n            'list',\n            'log',\n            'lst',\n            'm',\n            'mar',\n            'pl',\n            'sdml',\n            'text'\n        ]\n    ],\n    ['text/plain-bas', 'par'],\n    ['text/prs.lines.tag', 'dsc'],\n    ['text/richtext', ['rtx', 'rt', 'rtf']],\n    ['text/scriplet', 'wsc'],\n    ['text/scriptlet', 'sct'],\n    ['text/sgml', ['sgm', 'sgml']],\n    ['text/tab-separated-values', 'tsv'],\n    ['text/troff', 't'],\n    ['text/turtle', 'ttl'],\n    ['text/uri-list', ['uni', 'unis', 'uri', 'uris']],\n    ['text/vnd.abc', 'abc'],\n    ['text/vnd.curl', 'curl'],\n    ['text/vnd.curl.dcurl', 'dcurl'],\n    ['text/vnd.curl.mcurl', 'mcurl'],\n    ['text/vnd.curl.scurl', 'scurl'],\n    ['text/vnd.fly', 'fly'],\n    ['text/vnd.fmi.flexstor', 'flx'],\n    ['text/vnd.graphviz', 'gv'],\n    ['text/vnd.in3d.3dml', '3dml'],\n    ['text/vnd.in3d.spot', 'spot'],\n    ['text/vnd.rn-realtext', 'rt'],\n    ['text/vnd.sun.j2me.app-descriptor', 'jad'],\n    ['text/vnd.wap.wml', 'wml'],\n    ['text/vnd.wap.wmlscript', 'wmls'],\n    ['text/webviewhtml', 'htt'],\n    ['text/x-asm', ['asm', 's']],\n    ['text/x-audiosoft-intra', 'aip'],\n    ['text/x-c', ['c', 'cc', 'cpp']],\n    ['text/x-component', 'htc'],\n    ['text/x-fortran', ['for', 'f', 'f77', 'f90']],\n    ['text/x-h', ['h', 'hh']],\n    ['text/x-java-source', ['java', 'jav']],\n    ['text/x-java-source,java', 'java'],\n    ['text/x-la-asf', 'lsx'],\n    ['text/x-m', 'm'],\n    ['text/x-pascal', 'p'],\n    ['text/x-script', 'hlb'],\n    ['text/x-script.csh', 'csh'],\n    ['text/x-script.elisp', 'el'],\n    ['text/x-script.guile', 'scm'],\n    ['text/x-script.ksh', 'ksh'],\n    ['text/x-script.lisp', 'lsp'],\n    ['text/x-script.perl', 'pl'],\n    ['text/x-script.perl-module', 'pm'],\n    ['text/x-script.phyton', 'py'],\n    ['text/x-script.rexx', 'rexx'],\n    ['text/x-script.scheme', 'scm'],\n    ['text/x-script.sh', 'sh'],\n    ['text/x-script.tcl', 'tcl'],\n    ['text/x-script.tcsh', 'tcsh'],\n    ['text/x-script.zsh', 'zsh'],\n    ['text/x-server-parsed-html', ['shtml', 'ssi']],\n    ['text/x-setext', 'etx'],\n    ['text/x-sgml', ['sgm', 'sgml']],\n    ['text/x-speech', ['spc', 'talk']],\n    ['text/x-uil', 'uil'],\n    ['text/x-uuencode', ['uu', 'uue']],\n    ['text/x-vcalendar', 'vcs'],\n    ['text/x-vcard', 'vcf'],\n    ['text/xml', 'xml'],\n    ['video/3gpp', '3gp'],\n    ['video/3gpp2', '3g2'],\n    ['video/animaflex', 'afl'],\n    ['video/avi', 'avi'],\n    ['video/avs-video', 'avs'],\n    ['video/dl', 'dl'],\n    ['video/fli', 'fli'],\n    ['video/gl', 'gl'],\n    ['video/h261', 'h261'],\n    ['video/h263', 'h263'],\n    ['video/h264', 'h264'],\n    ['video/jpeg', 'jpgv'],\n    ['video/jpm', 'jpm'],\n    ['video/mj2', 'mj2'],\n    ['video/mp4', 'mp4'],\n    ['video/mpeg', ['mpeg', 'mp2', 'mpa', 'mpe', 'mpg', 'mpv2', 'm1v', 'm2v', 'mp3']],\n    ['video/msvideo', 'avi'],\n    ['video/ogg', 'ogv'],\n    ['video/quicktime', ['mov', 'qt', 'moov']],\n    ['video/vdo', 'vdo'],\n    ['video/vivo', ['viv', 'vivo']],\n    ['video/vnd.dece.hd', 'uvh'],\n    ['video/vnd.dece.mobile', 'uvm'],\n    ['video/vnd.dece.pd', 'uvp'],\n    ['video/vnd.dece.sd', 'uvs'],\n    ['video/vnd.dece.video', 'uvv'],\n    ['video/vnd.fvt', 'fvt'],\n    ['video/vnd.mpegurl', 'mxu'],\n    ['video/vnd.ms-playready.media.pyv', 'pyv'],\n    ['video/vnd.rn-realvideo', 'rv'],\n    ['video/vnd.uvvu.mp4', 'uvu'],\n    ['video/vnd.vivo', ['viv', 'vivo']],\n    ['video/vosaic', 'vos'],\n    ['video/webm', 'webm'],\n    ['video/x-amt-demorun', 'xdr'],\n    ['video/x-amt-showrun', 'xsr'],\n    ['video/x-atomic3d-feature', 'fmf'],\n    ['video/x-dl', 'dl'],\n    ['video/x-dv', ['dif', 'dv']],\n    ['video/x-f4v', 'f4v'],\n    ['video/x-fli', 'fli'],\n    ['video/x-flv', 'flv'],\n    ['video/x-gl', 'gl'],\n    ['video/x-isvideo', 'isu'],\n    ['video/x-la-asf', ['lsf', 'lsx']],\n    ['video/x-m4v', 'm4v'],\n    ['video/x-motion-jpeg', 'mjpg'],\n    ['video/x-mpeg', ['mp3', 'mp2']],\n    ['video/x-mpeq2a', 'mp2'],\n    ['video/x-ms-asf', ['asf', 'asr', 'asx']],\n    ['video/x-ms-asf-plugin', 'asx'],\n    ['video/x-ms-wm', 'wm'],\n    ['video/x-ms-wmv', 'wmv'],\n    ['video/x-ms-wmx', 'wmx'],\n    ['video/x-ms-wvx', 'wvx'],\n    ['video/x-msvideo', 'avi'],\n    ['video/x-qtc', 'qtc'],\n    ['video/x-scm', 'scm'],\n    ['video/x-sgi-movie', ['movie', 'mv']],\n    ['windows/metafile', 'wmf'],\n    ['www/mime', 'mime'],\n    ['x-conference/x-cooltalk', 'ice'],\n    ['x-music/x-midi', ['mid', 'midi']],\n    ['x-world/x-3dmf', ['3dm', '3dmf', 'qd3', 'qd3d']],\n    ['x-world/x-svr', 'svr'],\n    ['x-world/x-vrml', ['flr', 'vrml', 'wrl', 'wrz', 'xaf', 'xof']],\n    ['x-world/x-vrt', 'vrt'],\n    ['xgl/drawing', 'xgz'],\n    ['xgl/movie', 'xmz']\n]);\nconst extensions = new Map([\n    ['123', 'application/vnd.lotus-1-2-3'],\n    ['323', 'text/h323'],\n    ['*', 'application/octet-stream'],\n    ['3dm', 'x-world/x-3dmf'],\n    ['3dmf', 'x-world/x-3dmf'],\n    ['3dml', 'text/vnd.in3d.3dml'],\n    ['3g2', 'video/3gpp2'],\n    ['3gp', 'video/3gpp'],\n    ['7z', 'application/x-7z-compressed'],\n    ['a', 'application/octet-stream'],\n    ['aab', 'application/x-authorware-bin'],\n    ['aac', 'audio/x-aac'],\n    ['aam', 'application/x-authorware-map'],\n    ['aas', 'application/x-authorware-seg'],\n    ['abc', 'text/vnd.abc'],\n    ['abw', 'application/x-abiword'],\n    ['ac', 'application/pkix-attr-cert'],\n    ['acc', 'application/vnd.americandynamics.acc'],\n    ['ace', 'application/x-ace-compressed'],\n    ['acgi', 'text/html'],\n    ['acu', 'application/vnd.acucobol'],\n    ['acx', 'application/internet-property-stream'],\n    ['adp', 'audio/adpcm'],\n    ['aep', 'application/vnd.audiograph'],\n    ['afl', 'video/animaflex'],\n    ['afp', 'application/vnd.ibm.modcap'],\n    ['ahead', 'application/vnd.ahead.space'],\n    ['ai', 'application/postscript'],\n    ['aif', ['audio/aiff', 'audio/x-aiff']],\n    ['aifc', ['audio/aiff', 'audio/x-aiff']],\n    ['aiff', ['audio/aiff', 'audio/x-aiff']],\n    ['aim', 'application/x-aim'],\n    ['aip', 'text/x-audiosoft-intra'],\n    ['air', 'application/vnd.adobe.air-application-installer-package+zip'],\n    ['ait', 'application/vnd.dvb.ait'],\n    ['ami', 'application/vnd.amiga.ami'],\n    ['ani', 'application/x-navi-animation'],\n    ['aos', 'application/x-nokia-9000-communicator-add-on-software'],\n    ['apk', 'application/vnd.android.package-archive'],\n    ['application', 'application/x-ms-application'],\n    ['apr', 'application/vnd.lotus-approach'],\n    ['aps', 'application/mime'],\n    ['arc', 'application/octet-stream'],\n    ['arj', ['application/arj', 'application/octet-stream']],\n    ['art', 'image/x-jg'],\n    ['asf', 'video/x-ms-asf'],\n    ['asm', 'text/x-asm'],\n    ['aso', 'application/vnd.accpac.simply.aso'],\n    ['asp', 'text/asp'],\n    ['asr', 'video/x-ms-asf'],\n    ['asx', ['video/x-ms-asf', 'application/x-mplayer2', 'video/x-ms-asf-plugin']],\n    ['atc', 'application/vnd.acucorp'],\n    ['atomcat', 'application/atomcat+xml'],\n    ['atomsvc', 'application/atomsvc+xml'],\n    ['atx', 'application/vnd.antix.game-component'],\n    ['au', ['audio/basic', 'audio/x-au']],\n    ['avi', ['video/avi', 'video/msvideo', 'application/x-troff-msvideo', 'video/x-msvideo']],\n    ['avs', 'video/avs-video'],\n    ['aw', 'application/applixware'],\n    ['axs', 'application/olescript'],\n    ['azf', 'application/vnd.airzip.filesecure.azf'],\n    ['azs', 'application/vnd.airzip.filesecure.azs'],\n    ['azw', 'application/vnd.amazon.ebook'],\n    ['bas', 'text/plain'],\n    ['bcpio', 'application/x-bcpio'],\n    ['bdf', 'application/x-font-bdf'],\n    ['bdm', 'application/vnd.syncml.dm+wbxml'],\n    ['bed', 'application/vnd.realvnc.bed'],\n    ['bh2', 'application/vnd.fujitsu.oasysprs'],\n    ['bin', ['application/octet-stream', 'application/mac-binary', 'application/macbinary', 'application/x-macbinary', 'application/x-binary']],\n    ['bm', 'image/bmp'],\n    ['bmi', 'application/vnd.bmi'],\n    ['bmp', ['image/bmp', 'image/x-windows-bmp']],\n    ['boo', 'application/book'],\n    ['book', 'application/book'],\n    ['box', 'application/vnd.previewsystems.box'],\n    ['boz', 'application/x-bzip2'],\n    ['bsh', 'application/x-bsh'],\n    ['btif', 'image/prs.btif'],\n    ['bz', 'application/x-bzip'],\n    ['bz2', 'application/x-bzip2'],\n    ['c', ['text/plain', 'text/x-c']],\n    ['c++', 'text/plain'],\n    ['c11amc', 'application/vnd.cluetrust.cartomobile-config'],\n    ['c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg'],\n    ['c4g', 'application/vnd.clonk.c4group'],\n    ['cab', 'application/vnd.ms-cab-compressed'],\n    ['car', 'application/vnd.curl.car'],\n    ['cat', ['application/vnd.ms-pkiseccat', 'application/vnd.ms-pki.seccat']],\n    ['cc', ['text/plain', 'text/x-c']],\n    ['ccad', 'application/clariscad'],\n    ['cco', 'application/x-cocoa'],\n    ['ccxml', 'application/ccxml+xml,'],\n    ['cdbcmsg', 'application/vnd.contact.cmsg'],\n    ['cdf', ['application/cdf', 'application/x-cdf', 'application/x-netcdf']],\n    ['cdkey', 'application/vnd.mediastation.cdkey'],\n    ['cdmia', 'application/cdmi-capability'],\n    ['cdmic', 'application/cdmi-container'],\n    ['cdmid', 'application/cdmi-domain'],\n    ['cdmio', 'application/cdmi-object'],\n    ['cdmiq', 'application/cdmi-queue'],\n    ['cdx', 'chemical/x-cdx'],\n    ['cdxml', 'application/vnd.chemdraw+xml'],\n    ['cdy', 'application/vnd.cinderella'],\n    ['cer', ['application/pkix-cert', 'application/x-x509-ca-cert']],\n    ['cgm', 'image/cgm'],\n    ['cha', 'application/x-chat'],\n    ['chat', 'application/x-chat'],\n    ['chm', 'application/vnd.ms-htmlhelp'],\n    ['chrt', 'application/vnd.kde.kchart'],\n    ['cif', 'chemical/x-cif'],\n    ['cii', 'application/vnd.anser-web-certificate-issue-initiation'],\n    ['cil', 'application/vnd.ms-artgalry'],\n    ['cla', 'application/vnd.claymore'],\n    ['class', ['application/octet-stream', 'application/java', 'application/java-byte-code', 'application/java-vm', 'application/x-java-class']],\n    ['clkk', 'application/vnd.crick.clicker.keyboard'],\n    ['clkp', 'application/vnd.crick.clicker.palette'],\n    ['clkt', 'application/vnd.crick.clicker.template'],\n    ['clkw', 'application/vnd.crick.clicker.wordbank'],\n    ['clkx', 'application/vnd.crick.clicker'],\n    ['clp', 'application/x-msclip'],\n    ['cmc', 'application/vnd.cosmocaller'],\n    ['cmdf', 'chemical/x-cmdf'],\n    ['cml', 'chemical/x-cml'],\n    ['cmp', 'application/vnd.yellowriver-custom-menu'],\n    ['cmx', 'image/x-cmx'],\n    ['cod', ['image/cis-cod', 'application/vnd.rim.cod']],\n    ['com', ['application/octet-stream', 'text/plain']],\n    ['conf', 'text/plain'],\n    ['cpio', 'application/x-cpio'],\n    ['cpp', 'text/x-c'],\n    ['cpt', ['application/mac-compactpro', 'application/x-compactpro', 'application/x-cpt']],\n    ['crd', 'application/x-mscardfile'],\n    ['crl', ['application/pkix-crl', 'application/pkcs-crl']],\n    ['crt', ['application/pkix-cert', 'application/x-x509-user-cert', 'application/x-x509-ca-cert']],\n    ['cryptonote', 'application/vnd.rig.cryptonote'],\n    ['csh', ['text/x-script.csh', 'application/x-csh']],\n    ['csml', 'chemical/x-csml'],\n    ['csp', 'application/vnd.commonspace'],\n    ['css', ['text/css', 'application/x-pointplus']],\n    ['csv', 'text/csv'],\n    ['cu', 'application/cu-seeme'],\n    ['curl', 'text/vnd.curl'],\n    ['cww', 'application/prs.cww'],\n    ['cxx', 'text/plain'],\n    ['dae', 'model/vnd.collada+xml'],\n    ['daf', 'application/vnd.mobius.daf'],\n    ['davmount', 'application/davmount+xml'],\n    ['dcr', 'application/x-director'],\n    ['dcurl', 'text/vnd.curl.dcurl'],\n    ['dd2', 'application/vnd.oma.dd2+xml'],\n    ['ddd', 'application/vnd.fujixerox.ddd'],\n    ['deb', 'application/x-debian-package'],\n    ['deepv', 'application/x-deepv'],\n    ['def', 'text/plain'],\n    ['der', 'application/x-x509-ca-cert'],\n    ['dfac', 'application/vnd.dreamfactory'],\n    ['dif', 'video/x-dv'],\n    ['dir', 'application/x-director'],\n    ['dis', 'application/vnd.mobius.dis'],\n    ['djvu', 'image/vnd.djvu'],\n    ['dl', ['video/dl', 'video/x-dl']],\n    ['dll', 'application/x-msdownload'],\n    ['dms', 'application/octet-stream'],\n    ['dna', 'application/vnd.dna'],\n    ['doc', 'application/msword'],\n    ['docm', 'application/vnd.ms-word.document.macroenabled.12'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    ['dot', 'application/msword'],\n    ['dotm', 'application/vnd.ms-word.template.macroenabled.12'],\n    ['dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'],\n    ['dp', ['application/commonground', 'application/vnd.osgi.dp']],\n    ['dpg', 'application/vnd.dpgraph'],\n    ['dra', 'audio/vnd.dra'],\n    ['drw', 'application/drafting'],\n    ['dsc', 'text/prs.lines.tag'],\n    ['dssc', 'application/dssc+der'],\n    ['dtb', 'application/x-dtbook+xml'],\n    ['dtd', 'application/xml-dtd'],\n    ['dts', 'audio/vnd.dts'],\n    ['dtshd', 'audio/vnd.dts.hd'],\n    ['dump', 'application/octet-stream'],\n    ['dv', 'video/x-dv'],\n    ['dvi', 'application/x-dvi'],\n    ['dwf', ['model/vnd.dwf', 'drawing/x-dwf']],\n    ['dwg', ['application/acad', 'image/vnd.dwg', 'image/x-dwg']],\n    ['dxf', ['application/dxf', 'image/vnd.dwg', 'image/vnd.dxf', 'image/x-dwg']],\n    ['dxp', 'application/vnd.spotfire.dxp'],\n    ['dxr', 'application/x-director'],\n    ['ecelp4800', 'audio/vnd.nuera.ecelp4800'],\n    ['ecelp7470', 'audio/vnd.nuera.ecelp7470'],\n    ['ecelp9600', 'audio/vnd.nuera.ecelp9600'],\n    ['edm', 'application/vnd.novadigm.edm'],\n    ['edx', 'application/vnd.novadigm.edx'],\n    ['efif', 'application/vnd.picsel'],\n    ['ei6', 'application/vnd.pg.osasli'],\n    ['el', 'text/x-script.elisp'],\n    ['elc', ['application/x-elc', 'application/x-bytecode.elisp']],\n    ['eml', 'message/rfc822'],\n    ['emma', 'application/emma+xml'],\n    ['env', 'application/x-envoy'],\n    ['eol', 'audio/vnd.digital-winds'],\n    ['eot', 'application/vnd.ms-fontobject'],\n    ['eps', 'application/postscript'],\n    ['epub', 'application/epub+zip'],\n    ['es', ['application/ecmascript', 'application/x-esrehber']],\n    ['es3', 'application/vnd.eszigno3+xml'],\n    ['esf', 'application/vnd.epson.esf'],\n    ['etx', 'text/x-setext'],\n    ['evy', ['application/envoy', 'application/x-envoy']],\n    ['exe', ['application/octet-stream', 'application/x-msdownload']],\n    ['exi', 'application/exi'],\n    ['ext', 'application/vnd.novadigm.ext'],\n    ['ez2', 'application/vnd.ezpix-album'],\n    ['ez3', 'application/vnd.ezpix-package'],\n    ['f', ['text/plain', 'text/x-fortran']],\n    ['f4v', 'video/x-f4v'],\n    ['f77', 'text/x-fortran'],\n    ['f90', ['text/plain', 'text/x-fortran']],\n    ['fbs', 'image/vnd.fastbidsheet'],\n    ['fcs', 'application/vnd.isac.fcs'],\n    ['fdf', 'application/vnd.fdf'],\n    ['fe_launch', 'application/vnd.denovo.fcselayout-link'],\n    ['fg5', 'application/vnd.fujitsu.oasysgp'],\n    ['fh', 'image/x-freehand'],\n    ['fif', ['application/fractals', 'image/fif']],\n    ['fig', 'application/x-xfig'],\n    ['fli', ['video/fli', 'video/x-fli']],\n    ['flo', ['image/florian', 'application/vnd.micrografx.flo']],\n    ['flr', 'x-world/x-vrml'],\n    ['flv', 'video/x-flv'],\n    ['flw', 'application/vnd.kde.kivio'],\n    ['flx', 'text/vnd.fmi.flexstor'],\n    ['fly', 'text/vnd.fly'],\n    ['fm', 'application/vnd.framemaker'],\n    ['fmf', 'video/x-atomic3d-feature'],\n    ['fnc', 'application/vnd.frogans.fnc'],\n    ['for', ['text/plain', 'text/x-fortran']],\n    ['fpx', ['image/vnd.fpx', 'image/vnd.net-fpx']],\n    ['frl', 'application/freeloader'],\n    ['fsc', 'application/vnd.fsc.weblaunch'],\n    ['fst', 'image/vnd.fst'],\n    ['ftc', 'application/vnd.fluxtime.clip'],\n    ['fti', 'application/vnd.anser-web-funds-transfer-initiation'],\n    ['funk', 'audio/make'],\n    ['fvt', 'video/vnd.fvt'],\n    ['fxp', 'application/vnd.adobe.fxp'],\n    ['fzs', 'application/vnd.fuzzysheet'],\n    ['g', 'text/plain'],\n    ['g2w', 'application/vnd.geoplan'],\n    ['g3', 'image/g3fax'],\n    ['g3w', 'application/vnd.geospace'],\n    ['gac', 'application/vnd.groove-account'],\n    ['gdl', 'model/vnd.gdl'],\n    ['geo', 'application/vnd.dynageo'],\n    ['gex', 'application/vnd.geometry-explorer'],\n    ['ggb', 'application/vnd.geogebra.file'],\n    ['ggt', 'application/vnd.geogebra.tool'],\n    ['ghf', 'application/vnd.groove-help'],\n    ['gif', 'image/gif'],\n    ['gim', 'application/vnd.groove-identity-message'],\n    ['gl', ['video/gl', 'video/x-gl']],\n    ['gmx', 'application/vnd.gmx'],\n    ['gnumeric', 'application/x-gnumeric'],\n    ['gph', 'application/vnd.flographit'],\n    ['gqf', 'application/vnd.grafeq'],\n    ['gram', 'application/srgs'],\n    ['grv', 'application/vnd.groove-injector'],\n    ['grxml', 'application/srgs+xml'],\n    ['gsd', 'audio/x-gsm'],\n    ['gsf', 'application/x-font-ghostscript'],\n    ['gsm', 'audio/x-gsm'],\n    ['gsp', 'application/x-gsp'],\n    ['gss', 'application/x-gss'],\n    ['gtar', 'application/x-gtar'],\n    ['gtm', 'application/vnd.groove-tool-message'],\n    ['gtw', 'model/vnd.gtw'],\n    ['gv', 'text/vnd.graphviz'],\n    ['gxt', 'application/vnd.geonext'],\n    ['gz', ['application/x-gzip', 'application/x-compressed']],\n    ['gzip', ['multipart/x-gzip', 'application/x-gzip']],\n    ['h', ['text/plain', 'text/x-h']],\n    ['h261', 'video/h261'],\n    ['h263', 'video/h263'],\n    ['h264', 'video/h264'],\n    ['hal', 'application/vnd.hal+xml'],\n    ['hbci', 'application/vnd.hbci'],\n    ['hdf', 'application/x-hdf'],\n    ['help', 'application/x-helpfile'],\n    ['hgl', 'application/vnd.hp-hpgl'],\n    ['hh', ['text/plain', 'text/x-h']],\n    ['hlb', 'text/x-script'],\n    ['hlp', ['application/winhlp', 'application/hlp', 'application/x-helpfile', 'application/x-winhelp']],\n    ['hpg', 'application/vnd.hp-hpgl'],\n    ['hpgl', 'application/vnd.hp-hpgl'],\n    ['hpid', 'application/vnd.hp-hpid'],\n    ['hps', 'application/vnd.hp-hps'],\n    [\n        'hqx',\n        [\n            'application/mac-binhex40',\n            'application/binhex',\n            'application/binhex4',\n            'application/mac-binhex',\n            'application/x-binhex40',\n            'application/x-mac-binhex40'\n        ]\n    ],\n    ['hta', 'application/hta'],\n    ['htc', 'text/x-component'],\n    ['htke', 'application/vnd.kenameaapp'],\n    ['htm', 'text/html'],\n    ['html', 'text/html'],\n    ['htmls', 'text/html'],\n    ['htt', 'text/webviewhtml'],\n    ['htx', 'text/html'],\n    ['hvd', 'application/vnd.yamaha.hv-dic'],\n    ['hvp', 'application/vnd.yamaha.hv-voice'],\n    ['hvs', 'application/vnd.yamaha.hv-script'],\n    ['i2g', 'application/vnd.intergeo'],\n    ['icc', 'application/vnd.iccprofile'],\n    ['ice', 'x-conference/x-cooltalk'],\n    ['ico', 'image/x-icon'],\n    ['ics', 'text/calendar'],\n    ['idc', 'text/plain'],\n    ['ief', 'image/ief'],\n    ['iefs', 'image/ief'],\n    ['ifm', 'application/vnd.shana.informed.formdata'],\n    ['iges', ['application/iges', 'model/iges']],\n    ['igl', 'application/vnd.igloader'],\n    ['igm', 'application/vnd.insors.igm'],\n    ['igs', ['application/iges', 'model/iges']],\n    ['igx', 'application/vnd.micrografx.igx'],\n    ['iif', 'application/vnd.shana.informed.interchange'],\n    ['iii', 'application/x-iphone'],\n    ['ima', 'application/x-ima'],\n    ['imap', 'application/x-httpd-imap'],\n    ['imp', 'application/vnd.accpac.simply.imp'],\n    ['ims', 'application/vnd.ms-ims'],\n    ['inf', 'application/inf'],\n    ['ins', ['application/x-internet-signup', 'application/x-internett-signup']],\n    ['ip', 'application/x-ip2'],\n    ['ipfix', 'application/ipfix'],\n    ['ipk', 'application/vnd.shana.informed.package'],\n    ['irm', 'application/vnd.ibm.rights-management'],\n    ['irp', 'application/vnd.irepository.package+xml'],\n    ['isp', 'application/x-internet-signup'],\n    ['isu', 'video/x-isvideo'],\n    ['it', 'audio/it'],\n    ['itp', 'application/vnd.shana.informed.formtemplate'],\n    ['iv', 'application/x-inventor'],\n    ['ivp', 'application/vnd.immervision-ivp'],\n    ['ivr', 'i-world/i-vrml'],\n    ['ivu', 'application/vnd.immervision-ivu'],\n    ['ivy', 'application/x-livescreen'],\n    ['jad', 'text/vnd.sun.j2me.app-descriptor'],\n    ['jam', ['application/vnd.jam', 'audio/x-jam']],\n    ['jar', 'application/java-archive'],\n    ['jav', ['text/plain', 'text/x-java-source']],\n    ['java', ['text/plain', 'text/x-java-source,java', 'text/x-java-source']],\n    ['jcm', 'application/x-java-commerce'],\n    ['jfif', ['image/pipeg', 'image/jpeg', 'image/pjpeg']],\n    ['jfif-tbnl', 'image/jpeg'],\n    ['jisp', 'application/vnd.jisp'],\n    ['jlt', 'application/vnd.hp-jlyt'],\n    ['jnlp', 'application/x-java-jnlp-file'],\n    ['joda', 'application/vnd.joost.joda-archive'],\n    ['jpe', ['image/jpeg', 'image/pjpeg']],\n    ['jpeg', ['image/jpeg', 'image/pjpeg']],\n    ['jpg', ['image/jpeg', 'image/pjpeg']],\n    ['jpgv', 'video/jpeg'],\n    ['jpm', 'video/jpm'],\n    ['jps', 'image/x-jps'],\n    ['js', ['application/javascript', 'application/ecmascript', 'text/javascript', 'text/ecmascript', 'application/x-javascript']],\n    ['json', 'application/json'],\n    ['jut', 'image/jutvision'],\n    ['kar', ['audio/midi', 'music/x-karaoke']],\n    ['karbon', 'application/vnd.kde.karbon'],\n    ['kfo', 'application/vnd.kde.kformula'],\n    ['kia', 'application/vnd.kidspiration'],\n    ['kml', 'application/vnd.google-earth.kml+xml'],\n    ['kmz', 'application/vnd.google-earth.kmz'],\n    ['kne', 'application/vnd.kinar'],\n    ['kon', 'application/vnd.kde.kontour'],\n    ['kpr', 'application/vnd.kde.kpresenter'],\n    ['ksh', ['application/x-ksh', 'text/x-script.ksh']],\n    ['ksp', 'application/vnd.kde.kspread'],\n    ['ktx', 'image/ktx'],\n    ['ktz', 'application/vnd.kahootz'],\n    ['kwd', 'application/vnd.kde.kword'],\n    ['la', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['lam', 'audio/x-liveaudio'],\n    ['lasxml', 'application/vnd.las.las+xml'],\n    ['latex', 'application/x-latex'],\n    ['lbd', 'application/vnd.llamagraphics.life-balance.desktop'],\n    ['lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml'],\n    ['les', 'application/vnd.hhe.lesson-player'],\n    ['lha', ['application/octet-stream', 'application/lha', 'application/x-lha']],\n    ['lhx', 'application/octet-stream'],\n    ['link66', 'application/vnd.route66.link66+xml'],\n    ['list', 'text/plain'],\n    ['lma', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['log', 'text/plain'],\n    ['lrm', 'application/vnd.ms-lrm'],\n    ['lsf', 'video/x-la-asf'],\n    ['lsp', ['application/x-lisp', 'text/x-script.lisp']],\n    ['lst', 'text/plain'],\n    ['lsx', ['video/x-la-asf', 'text/x-la-asf']],\n    ['ltf', 'application/vnd.frogans.ltf'],\n    ['ltx', 'application/x-latex'],\n    ['lvp', 'audio/vnd.lucent.voice'],\n    ['lwp', 'application/vnd.lotus-wordpro'],\n    ['lzh', ['application/octet-stream', 'application/x-lzh']],\n    ['lzx', ['application/lzx', 'application/octet-stream', 'application/x-lzx']],\n    ['m', ['text/plain', 'text/x-m']],\n    ['m13', 'application/x-msmediaview'],\n    ['m14', 'application/x-msmediaview'],\n    ['m1v', 'video/mpeg'],\n    ['m21', 'application/mp21'],\n    ['m2a', 'audio/mpeg'],\n    ['m2v', 'video/mpeg'],\n    ['m3u', ['audio/x-mpegurl', 'audio/x-mpequrl']],\n    ['m3u8', 'application/vnd.apple.mpegurl'],\n    ['m4v', 'video/x-m4v'],\n    ['ma', 'application/mathematica'],\n    ['mads', 'application/mads+xml'],\n    ['mag', 'application/vnd.ecowin.chart'],\n    ['man', 'application/x-troff-man'],\n    ['map', 'application/x-navimap'],\n    ['mar', 'text/plain'],\n    ['mathml', 'application/mathml+xml'],\n    ['mbd', 'application/mbedlet'],\n    ['mbk', 'application/vnd.mobius.mbk'],\n    ['mbox', 'application/mbox'],\n    ['mc$', 'application/x-magic-cap-package-1.0'],\n    ['mc1', 'application/vnd.medcalcdata'],\n    ['mcd', ['application/mcad', 'application/vnd.mcd', 'application/x-mathcad']],\n    ['mcf', ['image/vasa', 'text/mcf']],\n    ['mcp', 'application/netmc'],\n    ['mcurl', 'text/vnd.curl.mcurl'],\n    ['mdb', 'application/x-msaccess'],\n    ['mdi', 'image/vnd.ms-modi'],\n    ['me', 'application/x-troff-me'],\n    ['meta4', 'application/metalink4+xml'],\n    ['mets', 'application/mets+xml'],\n    ['mfm', 'application/vnd.mfmp'],\n    ['mgp', 'application/vnd.osgeo.mapguide.package'],\n    ['mgz', 'application/vnd.proteus.magazine'],\n    ['mht', 'message/rfc822'],\n    ['mhtml', 'message/rfc822'],\n    ['mid', ['audio/mid', 'audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['midi', ['audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['mif', ['application/vnd.mif', 'application/x-mif', 'application/x-frame']],\n    ['mime', ['message/rfc822', 'www/mime']],\n    ['mj2', 'video/mj2'],\n    ['mjf', 'audio/x-vnd.audioexplosion.mjuicemediafile'],\n    ['mjpg', 'video/x-motion-jpeg'],\n    ['mlp', 'application/vnd.dolby.mlp'],\n    ['mm', ['application/base64', 'application/x-meme']],\n    ['mmd', 'application/vnd.chipnuts.karaoke-mmd'],\n    ['mme', 'application/base64'],\n    ['mmf', 'application/vnd.smaf'],\n    ['mmr', 'image/vnd.fujixerox.edmics-mmr'],\n    ['mny', 'application/x-msmoney'],\n    ['mod', ['audio/mod', 'audio/x-mod']],\n    ['mods', 'application/mods+xml'],\n    ['moov', 'video/quicktime'],\n    ['mov', 'video/quicktime'],\n    ['movie', 'video/x-sgi-movie'],\n    ['mp2', ['video/mpeg', 'audio/mpeg', 'video/x-mpeg', 'audio/x-mpeg', 'video/x-mpeq2a']],\n    ['mp3', ['audio/mpeg', 'audio/mpeg3', 'video/mpeg', 'audio/x-mpeg-3', 'video/x-mpeg']],\n    ['mp4', ['video/mp4', 'application/mp4']],\n    ['mp4a', 'audio/mp4'],\n    ['mpa', ['video/mpeg', 'audio/mpeg']],\n    ['mpc', ['application/vnd.mophun.certificate', 'application/x-project']],\n    ['mpe', 'video/mpeg'],\n    ['mpeg', 'video/mpeg'],\n    ['mpg', ['video/mpeg', 'audio/mpeg']],\n    ['mpga', 'audio/mpeg'],\n    ['mpkg', 'application/vnd.apple.installer+xml'],\n    ['mpm', 'application/vnd.blueice.multipass'],\n    ['mpn', 'application/vnd.mophun.application'],\n    ['mpp', 'application/vnd.ms-project'],\n    ['mpt', 'application/x-project'],\n    ['mpv', 'application/x-project'],\n    ['mpv2', 'video/mpeg'],\n    ['mpx', 'application/x-project'],\n    ['mpy', 'application/vnd.ibm.minipay'],\n    ['mqy', 'application/vnd.mobius.mqy'],\n    ['mrc', 'application/marc'],\n    ['mrcx', 'application/marcxml+xml'],\n    ['ms', 'application/x-troff-ms'],\n    ['mscml', 'application/mediaservercontrol+xml'],\n    ['mseq', 'application/vnd.mseq'],\n    ['msf', 'application/vnd.epson.msf'],\n    ['msg', 'application/vnd.ms-outlook'],\n    ['msh', 'model/mesh'],\n    ['msl', 'application/vnd.mobius.msl'],\n    ['msty', 'application/vnd.muvee.style'],\n    ['mts', 'model/vnd.mts'],\n    ['mus', 'application/vnd.musician'],\n    ['musicxml', 'application/vnd.recordare.musicxml+xml'],\n    ['mv', 'video/x-sgi-movie'],\n    ['mvb', 'application/x-msmediaview'],\n    ['mwf', 'application/vnd.mfer'],\n    ['mxf', 'application/mxf'],\n    ['mxl', 'application/vnd.recordare.musicxml'],\n    ['mxml', 'application/xv+xml'],\n    ['mxs', 'application/vnd.triscape.mxs'],\n    ['mxu', 'video/vnd.mpegurl'],\n    ['my', 'audio/make'],\n    ['mzz', 'application/x-vnd.audioexplosion.mzz'],\n    ['n-gage', 'application/vnd.nokia.n-gage.symbian.install'],\n    ['n3', 'text/n3'],\n    ['nap', 'image/naplps'],\n    ['naplps', 'image/naplps'],\n    ['nbp', 'application/vnd.wolfram.player'],\n    ['nc', 'application/x-netcdf'],\n    ['ncm', 'application/vnd.nokia.configuration-message'],\n    ['ncx', 'application/x-dtbncx+xml'],\n    ['ngdat', 'application/vnd.nokia.n-gage.data'],\n    ['nif', 'image/x-niff'],\n    ['niff', 'image/x-niff'],\n    ['nix', 'application/x-mix-transfer'],\n    ['nlu', 'application/vnd.neurolanguage.nlu'],\n    ['nml', 'application/vnd.enliven'],\n    ['nnd', 'application/vnd.noblenet-directory'],\n    ['nns', 'application/vnd.noblenet-sealer'],\n    ['nnw', 'application/vnd.noblenet-web'],\n    ['npx', 'image/vnd.net-fpx'],\n    ['nsc', 'application/x-conference'],\n    ['nsf', 'application/vnd.lotus-notes'],\n    ['nvd', 'application/x-navidoc'],\n    ['nws', 'message/rfc822'],\n    ['o', 'application/octet-stream'],\n    ['oa2', 'application/vnd.fujitsu.oasys2'],\n    ['oa3', 'application/vnd.fujitsu.oasys3'],\n    ['oas', 'application/vnd.fujitsu.oasys'],\n    ['obd', 'application/x-msbinder'],\n    ['oda', 'application/oda'],\n    ['odb', 'application/vnd.oasis.opendocument.database'],\n    ['odc', 'application/vnd.oasis.opendocument.chart'],\n    ['odf', 'application/vnd.oasis.opendocument.formula'],\n    ['odft', 'application/vnd.oasis.opendocument.formula-template'],\n    ['odg', 'application/vnd.oasis.opendocument.graphics'],\n    ['odi', 'application/vnd.oasis.opendocument.image'],\n    ['odm', 'application/vnd.oasis.opendocument.text-master'],\n    ['odp', 'application/vnd.oasis.opendocument.presentation'],\n    ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\n    ['odt', 'application/vnd.oasis.opendocument.text'],\n    ['oga', 'audio/ogg'],\n    ['ogv', 'video/ogg'],\n    ['ogx', 'application/ogg'],\n    ['omc', 'application/x-omc'],\n    ['omcd', 'application/x-omcdatamaker'],\n    ['omcr', 'application/x-omcregerator'],\n    ['onetoc', 'application/onenote'],\n    ['opf', 'application/oebps-package+xml'],\n    ['org', 'application/vnd.lotus-organizer'],\n    ['osf', 'application/vnd.yamaha.openscoreformat'],\n    ['osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'],\n    ['otc', 'application/vnd.oasis.opendocument.chart-template'],\n    ['otf', 'application/x-font-otf'],\n    ['otg', 'application/vnd.oasis.opendocument.graphics-template'],\n    ['oth', 'application/vnd.oasis.opendocument.text-web'],\n    ['oti', 'application/vnd.oasis.opendocument.image-template'],\n    ['otp', 'application/vnd.oasis.opendocument.presentation-template'],\n    ['ots', 'application/vnd.oasis.opendocument.spreadsheet-template'],\n    ['ott', 'application/vnd.oasis.opendocument.text-template'],\n    ['oxt', 'application/vnd.openofficeorg.extension'],\n    ['p', 'text/x-pascal'],\n    ['p10', ['application/pkcs10', 'application/x-pkcs10']],\n    ['p12', ['application/pkcs-12', 'application/x-pkcs12']],\n    ['p7a', 'application/x-pkcs7-signature'],\n    ['p7b', 'application/x-pkcs7-certificates'],\n    ['p7c', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7m', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7r', 'application/x-pkcs7-certreqresp'],\n    ['p7s', ['application/pkcs7-signature', 'application/x-pkcs7-signature']],\n    ['p8', 'application/pkcs8'],\n    ['par', 'text/plain-bas'],\n    ['part', 'application/pro_eng'],\n    ['pas', 'text/pascal'],\n    ['paw', 'application/vnd.pawaafile'],\n    ['pbd', 'application/vnd.powerbuilder6'],\n    ['pbm', 'image/x-portable-bitmap'],\n    ['pcf', 'application/x-font-pcf'],\n    ['pcl', ['application/vnd.hp-pcl', 'application/x-pcl']],\n    ['pclxl', 'application/vnd.hp-pclxl'],\n    ['pct', 'image/x-pict'],\n    ['pcurl', 'application/vnd.curl.pcurl'],\n    ['pcx', 'image/x-pcx'],\n    ['pdb', ['application/vnd.palm', 'chemical/x-pdb']],\n    ['pdf', 'application/pdf'],\n    ['pfa', 'application/x-font-type1'],\n    ['pfr', 'application/font-tdpfr'],\n    ['pfunk', ['audio/make', 'audio/make.my.funk']],\n    ['pfx', 'application/x-pkcs12'],\n    ['pgm', ['image/x-portable-graymap', 'image/x-portable-greymap']],\n    ['pgn', 'application/x-chess-pgn'],\n    ['pgp', 'application/pgp-signature'],\n    ['pic', ['image/pict', 'image/x-pict']],\n    ['pict', 'image/pict'],\n    ['pkg', 'application/x-newton-compatible-pkg'],\n    ['pki', 'application/pkixcmp'],\n    ['pkipath', 'application/pkix-pkipath'],\n    ['pko', ['application/ynd.ms-pkipko', 'application/vnd.ms-pki.pko']],\n    ['pl', ['text/plain', 'text/x-script.perl']],\n    ['plb', 'application/vnd.3gpp.pic-bw-large'],\n    ['plc', 'application/vnd.mobius.plc'],\n    ['plf', 'application/vnd.pocketlearn'],\n    ['pls', 'application/pls+xml'],\n    ['plx', 'application/x-pixclscript'],\n    ['pm', ['text/x-script.perl-module', 'image/x-xpixmap']],\n    ['pm4', 'application/x-pagemaker'],\n    ['pm5', 'application/x-pagemaker'],\n    ['pma', 'application/x-perfmon'],\n    ['pmc', 'application/x-perfmon'],\n    ['pml', ['application/vnd.ctc-posml', 'application/x-perfmon']],\n    ['pmr', 'application/x-perfmon'],\n    ['pmw', 'application/x-perfmon'],\n    ['png', 'image/png'],\n    ['pnm', ['application/x-portable-anymap', 'image/x-portable-anymap']],\n    ['portpkg', 'application/vnd.macports.portpkg'],\n    ['pot', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['potm', 'application/vnd.ms-powerpoint.template.macroenabled.12'],\n    ['potx', 'application/vnd.openxmlformats-officedocument.presentationml.template'],\n    ['pov', 'model/x-pov'],\n    ['ppa', 'application/vnd.ms-powerpoint'],\n    ['ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12'],\n    ['ppd', 'application/vnd.cups-ppd'],\n    ['ppm', 'image/x-portable-pixmap'],\n    ['pps', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12'],\n    ['ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'],\n    ['ppt', ['application/vnd.ms-powerpoint', 'application/mspowerpoint', 'application/powerpoint', 'application/x-mspowerpoint']],\n    ['pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12'],\n    ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\n    ['ppz', 'application/mspowerpoint'],\n    ['prc', 'application/x-mobipocket-ebook'],\n    ['pre', ['application/vnd.lotus-freelance', 'application/x-freelance']],\n    ['prf', 'application/pics-rules'],\n    ['prt', 'application/pro_eng'],\n    ['ps', 'application/postscript'],\n    ['psb', 'application/vnd.3gpp.pic-bw-small'],\n    ['psd', ['application/octet-stream', 'image/vnd.adobe.photoshop']],\n    ['psf', 'application/x-font-linux-psf'],\n    ['pskcxml', 'application/pskc+xml'],\n    ['ptid', 'application/vnd.pvi.ptid1'],\n    ['pub', 'application/x-mspublisher'],\n    ['pvb', 'application/vnd.3gpp.pic-bw-var'],\n    ['pvu', 'paleovu/x-pv'],\n    ['pwn', 'application/vnd.3m.post-it-notes'],\n    ['pwz', 'application/vnd.ms-powerpoint'],\n    ['py', 'text/x-script.phyton'],\n    ['pya', 'audio/vnd.ms-playready.media.pya'],\n    ['pyc', 'application/x-bytecode.python'],\n    ['pyv', 'video/vnd.ms-playready.media.pyv'],\n    ['qam', 'application/vnd.epson.quickanime'],\n    ['qbo', 'application/vnd.intu.qbo'],\n    ['qcp', 'audio/vnd.qcelp'],\n    ['qd3', 'x-world/x-3dmf'],\n    ['qd3d', 'x-world/x-3dmf'],\n    ['qfx', 'application/vnd.intu.qfx'],\n    ['qif', 'image/x-quicktime'],\n    ['qps', 'application/vnd.publishare-delta-tree'],\n    ['qt', 'video/quicktime'],\n    ['qtc', 'video/x-qtc'],\n    ['qti', 'image/x-quicktime'],\n    ['qtif', 'image/x-quicktime'],\n    ['qxd', 'application/vnd.quark.quarkxpress'],\n    ['ra', ['audio/x-realaudio', 'audio/x-pn-realaudio', 'audio/x-pn-realaudio-plugin']],\n    ['ram', 'audio/x-pn-realaudio'],\n    ['rar', 'application/x-rar-compressed'],\n    ['ras', ['image/cmu-raster', 'application/x-cmu-raster', 'image/x-cmu-raster']],\n    ['rast', 'image/cmu-raster'],\n    ['rcprofile', 'application/vnd.ipunplugged.rcprofile'],\n    ['rdf', 'application/rdf+xml'],\n    ['rdz', 'application/vnd.data-vision.rdz'],\n    ['rep', 'application/vnd.businessobjects'],\n    ['res', 'application/x-dtbresource+xml'],\n    ['rexx', 'text/x-script.rexx'],\n    ['rf', 'image/vnd.rn-realflash'],\n    ['rgb', 'image/x-rgb'],\n    ['rif', 'application/reginfo+xml'],\n    ['rip', 'audio/vnd.rip'],\n    ['rl', 'application/resource-lists+xml'],\n    ['rlc', 'image/vnd.fujixerox.edmics-rlc'],\n    ['rld', 'application/resource-lists-diff+xml'],\n    ['rm', ['application/vnd.rn-realmedia', 'audio/x-pn-realaudio']],\n    ['rmi', 'audio/mid'],\n    ['rmm', 'audio/x-pn-realaudio'],\n    ['rmp', ['audio/x-pn-realaudio-plugin', 'audio/x-pn-realaudio']],\n    ['rms', 'application/vnd.jcp.javame.midlet-rms'],\n    ['rnc', 'application/relax-ng-compact-syntax'],\n    ['rng', ['application/ringing-tones', 'application/vnd.nokia.ringing-tone']],\n    ['rnx', 'application/vnd.rn-realplayer'],\n    ['roff', 'application/x-troff'],\n    ['rp', 'image/vnd.rn-realpix'],\n    ['rp9', 'application/vnd.cloanto.rp9'],\n    ['rpm', 'audio/x-pn-realaudio-plugin'],\n    ['rpss', 'application/vnd.nokia.radio-presets'],\n    ['rpst', 'application/vnd.nokia.radio-preset'],\n    ['rq', 'application/sparql-query'],\n    ['rs', 'application/rls-services+xml'],\n    ['rsd', 'application/rsd+xml'],\n    ['rt', ['text/richtext', 'text/vnd.rn-realtext']],\n    ['rtf', ['application/rtf', 'text/richtext', 'application/x-rtf']],\n    ['rtx', ['text/richtext', 'application/rtf']],\n    ['rv', 'video/vnd.rn-realvideo'],\n    ['s', 'text/x-asm'],\n    ['s3m', 'audio/s3m'],\n    ['saf', 'application/vnd.yamaha.smaf-audio'],\n    ['saveme', 'application/octet-stream'],\n    ['sbk', 'application/x-tbook'],\n    ['sbml', 'application/sbml+xml'],\n    ['sc', 'application/vnd.ibm.secure-container'],\n    ['scd', 'application/x-msschedule'],\n    ['scm', ['application/vnd.lotus-screencam', 'video/x-scm', 'text/x-script.guile', 'application/x-lotusscreencam', 'text/x-script.scheme']],\n    ['scq', 'application/scvp-cv-request'],\n    ['scs', 'application/scvp-cv-response'],\n    ['sct', 'text/scriptlet'],\n    ['scurl', 'text/vnd.curl.scurl'],\n    ['sda', 'application/vnd.stardivision.draw'],\n    ['sdc', 'application/vnd.stardivision.calc'],\n    ['sdd', 'application/vnd.stardivision.impress'],\n    ['sdkm', 'application/vnd.solent.sdkm+xml'],\n    ['sdml', 'text/plain'],\n    ['sdp', ['application/sdp', 'application/x-sdp']],\n    ['sdr', 'application/sounder'],\n    ['sdw', 'application/vnd.stardivision.writer'],\n    ['sea', ['application/sea', 'application/x-sea']],\n    ['see', 'application/vnd.seemail'],\n    ['seed', 'application/vnd.fdsn.seed'],\n    ['sema', 'application/vnd.sema'],\n    ['semd', 'application/vnd.semd'],\n    ['semf', 'application/vnd.semf'],\n    ['ser', 'application/java-serialized-object'],\n    ['set', 'application/set'],\n    ['setpay', 'application/set-payment-initiation'],\n    ['setreg', 'application/set-registration-initiation'],\n    ['sfd-hdstx', 'application/vnd.hydrostatix.sof-data'],\n    ['sfs', 'application/vnd.spotfire.sfs'],\n    ['sgl', 'application/vnd.stardivision.writer-global'],\n    ['sgm', ['text/sgml', 'text/x-sgml']],\n    ['sgml', ['text/sgml', 'text/x-sgml']],\n    ['sh', ['application/x-shar', 'application/x-bsh', 'application/x-sh', 'text/x-script.sh']],\n    ['shar', ['application/x-bsh', 'application/x-shar']],\n    ['shf', 'application/shf+xml'],\n    ['shtml', ['text/html', 'text/x-server-parsed-html']],\n    ['sid', 'audio/x-psid'],\n    ['sis', 'application/vnd.symbian.install'],\n    ['sit', ['application/x-stuffit', 'application/x-sit']],\n    ['sitx', 'application/x-stuffitx'],\n    ['skd', 'application/x-koan'],\n    ['skm', 'application/x-koan'],\n    ['skp', ['application/vnd.koan', 'application/x-koan']],\n    ['skt', 'application/x-koan'],\n    ['sl', 'application/x-seelogo'],\n    ['sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12'],\n    ['sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide'],\n    ['slt', 'application/vnd.epson.salt'],\n    ['sm', 'application/vnd.stepmania.stepchart'],\n    ['smf', 'application/vnd.stardivision.math'],\n    ['smi', ['application/smil', 'application/smil+xml']],\n    ['smil', 'application/smil'],\n    ['snd', ['audio/basic', 'audio/x-adpcm']],\n    ['snf', 'application/x-font-snf'],\n    ['sol', 'application/solids'],\n    ['spc', ['text/x-speech', 'application/x-pkcs7-certificates']],\n    ['spf', 'application/vnd.yamaha.smaf-phrase'],\n    ['spl', ['application/futuresplash', 'application/x-futuresplash']],\n    ['spot', 'text/vnd.in3d.spot'],\n    ['spp', 'application/scvp-vp-response'],\n    ['spq', 'application/scvp-vp-request'],\n    ['spr', 'application/x-sprite'],\n    ['sprite', 'application/x-sprite'],\n    ['src', 'application/x-wais-source'],\n    ['sru', 'application/sru+xml'],\n    ['srx', 'application/sparql-results+xml'],\n    ['sse', 'application/vnd.kodak-descriptor'],\n    ['ssf', 'application/vnd.epson.ssf'],\n    ['ssi', 'text/x-server-parsed-html'],\n    ['ssm', 'application/streamingmedia'],\n    ['ssml', 'application/ssml+xml'],\n    ['sst', ['application/vnd.ms-pkicertstore', 'application/vnd.ms-pki.certstore']],\n    ['st', 'application/vnd.sailingtracker.track'],\n    ['stc', 'application/vnd.sun.xml.calc.template'],\n    ['std', 'application/vnd.sun.xml.draw.template'],\n    ['step', 'application/step'],\n    ['stf', 'application/vnd.wt.stf'],\n    ['sti', 'application/vnd.sun.xml.impress.template'],\n    ['stk', 'application/hyperstudio'],\n    ['stl', ['application/vnd.ms-pkistl', 'application/sla', 'application/vnd.ms-pki.stl', 'application/x-navistyle']],\n    ['stm', 'text/html'],\n    ['stp', 'application/step'],\n    ['str', 'application/vnd.pg.format'],\n    ['stw', 'application/vnd.sun.xml.writer.template'],\n    ['sub', 'image/vnd.dvb.subtitle'],\n    ['sus', 'application/vnd.sus-calendar'],\n    ['sv4cpio', 'application/x-sv4cpio'],\n    ['sv4crc', 'application/x-sv4crc'],\n    ['svc', 'application/vnd.dvb.service'],\n    ['svd', 'application/vnd.svd'],\n    ['svf', ['image/vnd.dwg', 'image/x-dwg']],\n    ['svg', 'image/svg+xml'],\n    ['svr', ['x-world/x-svr', 'application/x-world']],\n    ['swf', 'application/x-shockwave-flash'],\n    ['swi', 'application/vnd.aristanetworks.swi'],\n    ['sxc', 'application/vnd.sun.xml.calc'],\n    ['sxd', 'application/vnd.sun.xml.draw'],\n    ['sxg', 'application/vnd.sun.xml.writer.global'],\n    ['sxi', 'application/vnd.sun.xml.impress'],\n    ['sxm', 'application/vnd.sun.xml.math'],\n    ['sxw', 'application/vnd.sun.xml.writer'],\n    ['t', ['text/troff', 'application/x-troff']],\n    ['talk', 'text/x-speech'],\n    ['tao', 'application/vnd.tao.intent-module-archive'],\n    ['tar', 'application/x-tar'],\n    ['tbk', ['application/toolbook', 'application/x-tbook']],\n    ['tcap', 'application/vnd.3gpp2.tcap'],\n    ['tcl', ['text/x-script.tcl', 'application/x-tcl']],\n    ['tcsh', 'text/x-script.tcsh'],\n    ['teacher', 'application/vnd.smart.teacher'],\n    ['tei', 'application/tei+xml'],\n    ['tex', 'application/x-tex'],\n    ['texi', 'application/x-texinfo'],\n    ['texinfo', 'application/x-texinfo'],\n    ['text', ['application/plain', 'text/plain']],\n    ['tfi', 'application/thraud+xml'],\n    ['tfm', 'application/x-tex-tfm'],\n    ['tgz', ['application/gnutar', 'application/x-compressed']],\n    ['thmx', 'application/vnd.ms-officetheme'],\n    ['tif', ['image/tiff', 'image/x-tiff']],\n    ['tiff', ['image/tiff', 'image/x-tiff']],\n    ['tmo', 'application/vnd.tmobile-livetv'],\n    ['torrent', 'application/x-bittorrent'],\n    ['tpl', 'application/vnd.groove-tool-template'],\n    ['tpt', 'application/vnd.trid.tpt'],\n    ['tr', 'application/x-troff'],\n    ['tra', 'application/vnd.trueapp'],\n    ['trm', 'application/x-msterminal'],\n    ['tsd', 'application/timestamped-data'],\n    ['tsi', 'audio/tsp-audio'],\n    ['tsp', ['application/dsptype', 'audio/tsplayer']],\n    ['tsv', 'text/tab-separated-values'],\n    ['ttf', 'application/x-font-ttf'],\n    ['ttl', 'text/turtle'],\n    ['turbot', 'image/florian'],\n    ['twd', 'application/vnd.simtech-mindmapper'],\n    ['txd', 'application/vnd.genomatix.tuxedo'],\n    ['txf', 'application/vnd.mobius.txf'],\n    ['txt', 'text/plain'],\n    ['ufd', 'application/vnd.ufdl'],\n    ['uil', 'text/x-uil'],\n    ['uls', 'text/iuls'],\n    ['umj', 'application/vnd.umajin'],\n    ['uni', 'text/uri-list'],\n    ['unis', 'text/uri-list'],\n    ['unityweb', 'application/vnd.unity'],\n    ['unv', 'application/i-deas'],\n    ['uoml', 'application/vnd.uoml+xml'],\n    ['uri', 'text/uri-list'],\n    ['uris', 'text/uri-list'],\n    ['ustar', ['application/x-ustar', 'multipart/x-ustar']],\n    ['utz', 'application/vnd.uiq.theme'],\n    ['uu', ['application/octet-stream', 'text/x-uuencode']],\n    ['uue', 'text/x-uuencode'],\n    ['uva', 'audio/vnd.dece.audio'],\n    ['uvh', 'video/vnd.dece.hd'],\n    ['uvi', 'image/vnd.dece.graphic'],\n    ['uvm', 'video/vnd.dece.mobile'],\n    ['uvp', 'video/vnd.dece.pd'],\n    ['uvs', 'video/vnd.dece.sd'],\n    ['uvu', 'video/vnd.uvvu.mp4'],\n    ['uvv', 'video/vnd.dece.video'],\n    ['vcd', 'application/x-cdlink'],\n    ['vcf', 'text/x-vcard'],\n    ['vcg', 'application/vnd.groove-vcard'],\n    ['vcs', 'text/x-vcalendar'],\n    ['vcx', 'application/vnd.vcx'],\n    ['vda', 'application/vda'],\n    ['vdo', 'video/vdo'],\n    ['vew', 'application/groupwise'],\n    ['vis', 'application/vnd.visionary'],\n    ['viv', ['video/vivo', 'video/vnd.vivo']],\n    ['vivo', ['video/vivo', 'video/vnd.vivo']],\n    ['vmd', 'application/vocaltec-media-desc'],\n    ['vmf', 'application/vocaltec-media-file'],\n    ['voc', ['audio/voc', 'audio/x-voc']],\n    ['vos', 'video/vosaic'],\n    ['vox', 'audio/voxware'],\n    ['vqe', 'audio/x-twinvq-plugin'],\n    ['vqf', 'audio/x-twinvq'],\n    ['vql', 'audio/x-twinvq-plugin'],\n    ['vrml', ['model/vrml', 'x-world/x-vrml', 'application/x-vrml']],\n    ['vrt', 'x-world/x-vrt'],\n    ['vsd', ['application/vnd.visio', 'application/x-visio']],\n    ['vsf', 'application/vnd.vsf'],\n    ['vst', 'application/x-visio'],\n    ['vsw', 'application/x-visio'],\n    ['vtu', 'model/vnd.vtu'],\n    ['vxml', 'application/voicexml+xml'],\n    ['w60', 'application/wordperfect6.0'],\n    ['w61', 'application/wordperfect6.1'],\n    ['w6w', 'application/msword'],\n    ['wad', 'application/x-doom'],\n    ['wav', ['audio/wav', 'audio/x-wav']],\n    ['wax', 'audio/x-ms-wax'],\n    ['wb1', 'application/x-qpro'],\n    ['wbmp', 'image/vnd.wap.wbmp'],\n    ['wbs', 'application/vnd.criticaltools.wbs+xml'],\n    ['wbxml', 'application/vnd.wap.wbxml'],\n    ['wcm', 'application/vnd.ms-works'],\n    ['wdb', 'application/vnd.ms-works'],\n    ['web', 'application/vnd.xara'],\n    ['weba', 'audio/webm'],\n    ['webm', 'video/webm'],\n    ['webp', 'image/webp'],\n    ['wg', 'application/vnd.pmi.widget'],\n    ['wgt', 'application/widget'],\n    ['wiz', 'application/msword'],\n    ['wk1', 'application/x-123'],\n    ['wks', 'application/vnd.ms-works'],\n    ['wm', 'video/x-ms-wm'],\n    ['wma', 'audio/x-ms-wma'],\n    ['wmd', 'application/x-ms-wmd'],\n    ['wmf', ['windows/metafile', 'application/x-msmetafile']],\n    ['wml', 'text/vnd.wap.wml'],\n    ['wmlc', 'application/vnd.wap.wmlc'],\n    ['wmls', 'text/vnd.wap.wmlscript'],\n    ['wmlsc', 'application/vnd.wap.wmlscriptc'],\n    ['wmv', 'video/x-ms-wmv'],\n    ['wmx', 'video/x-ms-wmx'],\n    ['wmz', 'application/x-ms-wmz'],\n    ['woff', 'application/x-font-woff'],\n    ['word', 'application/msword'],\n    ['wp', 'application/wordperfect'],\n    ['wp5', ['application/wordperfect', 'application/wordperfect6.0']],\n    ['wp6', 'application/wordperfect'],\n    ['wpd', ['application/wordperfect', 'application/vnd.wordperfect', 'application/x-wpwin']],\n    ['wpl', 'application/vnd.ms-wpl'],\n    ['wps', 'application/vnd.ms-works'],\n    ['wq1', 'application/x-lotus'],\n    ['wqd', 'application/vnd.wqd'],\n    ['wri', ['application/mswrite', 'application/x-wri', 'application/x-mswrite']],\n    ['wrl', ['model/vrml', 'x-world/x-vrml', 'application/x-world']],\n    ['wrz', ['model/vrml', 'x-world/x-vrml']],\n    ['wsc', 'text/scriplet'],\n    ['wsdl', 'application/wsdl+xml'],\n    ['wspolicy', 'application/wspolicy+xml'],\n    ['wsrc', 'application/x-wais-source'],\n    ['wtb', 'application/vnd.webturbo'],\n    ['wtk', 'application/x-wintalk'],\n    ['wvx', 'video/x-ms-wvx'],\n    ['x-png', 'image/png'],\n    ['x3d', 'application/vnd.hzn-3d-crossword'],\n    ['xaf', 'x-world/x-vrml'],\n    ['xap', 'application/x-silverlight-app'],\n    ['xar', 'application/vnd.xara'],\n    ['xbap', 'application/x-ms-xbap'],\n    ['xbd', 'application/vnd.fujixerox.docuworks.binder'],\n    ['xbm', ['image/xbm', 'image/x-xbm', 'image/x-xbitmap']],\n    ['xdf', 'application/xcap-diff+xml'],\n    ['xdm', 'application/vnd.syncml.dm+xml'],\n    ['xdp', 'application/vnd.adobe.xdp+xml'],\n    ['xdr', 'video/x-amt-demorun'],\n    ['xdssc', 'application/dssc+xml'],\n    ['xdw', 'application/vnd.fujixerox.docuworks'],\n    ['xenc', 'application/xenc+xml'],\n    ['xer', 'application/patch-ops-error+xml'],\n    ['xfdf', 'application/vnd.adobe.xfdf'],\n    ['xfdl', 'application/vnd.xfdl'],\n    ['xgz', 'xgl/drawing'],\n    ['xhtml', 'application/xhtml+xml'],\n    ['xif', 'image/vnd.xiff'],\n    ['xl', 'application/excel'],\n    ['xla', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlam', 'application/vnd.ms-excel.addin.macroenabled.12'],\n    ['xlb', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlc', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xld', ['application/excel', 'application/x-excel']],\n    ['xlk', ['application/excel', 'application/x-excel']],\n    ['xll', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlm', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xls', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12'],\n    ['xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12'],\n    ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n    ['xlt', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xltm', 'application/vnd.ms-excel.template.macroenabled.12'],\n    ['xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'],\n    ['xlv', ['application/excel', 'application/x-excel']],\n    ['xlw', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xm', 'audio/xm'],\n    ['xml', ['application/xml', 'text/xml', 'application/atom+xml', 'application/rss+xml']],\n    ['xmz', 'xgl/movie'],\n    ['xo', 'application/vnd.olpc-sugar'],\n    ['xof', 'x-world/x-vrml'],\n    ['xop', 'application/xop+xml'],\n    ['xpi', 'application/x-xpinstall'],\n    ['xpix', 'application/x-vnd.ls-xpix'],\n    ['xpm', ['image/xpm', 'image/x-xpixmap']],\n    ['xpr', 'application/vnd.is-xpr'],\n    ['xps', 'application/vnd.ms-xpsdocument'],\n    ['xpw', 'application/vnd.intercon.formnet'],\n    ['xslt', 'application/xslt+xml'],\n    ['xsm', 'application/vnd.syncml+xml'],\n    ['xspf', 'application/xspf+xml'],\n    ['xsr', 'video/x-amt-showrun'],\n    ['xul', 'application/vnd.mozilla.xul+xml'],\n    ['xwd', ['image/x-xwd', 'image/x-xwindowdump']],\n    ['xyz', ['chemical/x-xyz', 'chemical/x-pdb']],\n    ['yang', 'application/yang'],\n    ['yin', 'application/yin+xml'],\n    ['z', ['application/x-compressed', 'application/x-compress']],\n    ['zaz', 'application/vnd.zzazz.deck+xml'],\n    ['zip', ['application/zip', 'multipart/x-zip', 'application/x-zip-compressed', 'application/x-compressed']],\n    ['zir', 'application/vnd.zul'],\n    ['zmm', 'application/vnd.handheld-entertainment+xml'],\n    ['zoo', 'application/octet-stream'],\n    ['zsh', 'text/x-script.zsh']\n]);\n\nmodule.exports = {\n    detectMimeType(filename) {\n        if (!filename) {\n            return defaultMimeType;\n        }\n\n        let parsed = path.parse(filename);\n        let extension = (parsed.ext.substr(1) || parsed.name || '').split('?').shift().trim().toLowerCase();\n        let value = defaultMimeType;\n\n        if (extensions.has(extension)) {\n            value = extensions.get(extension);\n        }\n\n        if (Array.isArray(value)) {\n            return value[0];\n        }\n        return value;\n    },\n\n    detectExtension(mimeType) {\n        if (!mimeType) {\n            return defaultExtension;\n        }\n        let parts = (mimeType || '').toLowerCase().trim().split('/');\n        let rootType = parts.shift().trim();\n        let subType = parts.join('/').trim();\n\n        if (mimeTypes.has(rootType + '/' + subType)) {\n            let value = mimeTypes.get(rootType + '/' + subType);\n            if (Array.isArray(value)) {\n                return value[0];\n            }\n            return value;\n        }\n\n        switch (rootType) {\n            case 'text':\n                return 'txt';\n            default:\n                return 'bin';\n        }\n    }\n};\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a base64 encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} base64 encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    return buffer.toString('base64');\n}\n\n/**\n * Adds soft line breaks to a base64 string\n *\n * @param {String} str base64 encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped base64 encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let result = [];\n    let pos = 0;\n    let chunkLength = lineLength * 1024;\n    while (pos < str.length) {\n        let wrappedLines = str\n            .substr(pos, chunkLength)\n            .replace(new RegExp('.{' + lineLength + '}', 'g'), '$&\\r\\n')\n            .trim();\n        result.push(wrappedLines);\n        pos += chunkLength;\n    }\n\n    return result.join('\\r\\n').trim();\n}\n\n/**\n * Creates a transform stream for encoding data to base64 encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n        // init Transform\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n        this._remainingBytes = false;\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return setImmediate(done);\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this._remainingBytes && this._remainingBytes.length) {\n            chunk = Buffer.concat([this._remainingBytes, chunk], this._remainingBytes.length + chunk.length);\n            this._remainingBytes = false;\n        }\n\n        if (chunk.length % 3) {\n            this._remainingBytes = chunk.slice(chunk.length - (chunk.length % 3));\n            chunk = chunk.slice(0, chunk.length - (chunk.length % 3));\n        } else {\n            this._remainingBytes = false;\n        }\n\n        let b64 = this._curLine + encode(chunk);\n\n        if (this.options.lineLength) {\n            b64 = wrap(b64, this.options.lineLength);\n\n            // remove last line as it is still most probably incomplete\n            let lastLF = b64.lastIndexOf('\\n');\n            if (lastLF < 0) {\n                this._curLine = b64;\n                b64 = '';\n            } else if (lastLF === b64.length - 1) {\n                this._curLine = '';\n            } else {\n                this._curLine = b64.substr(lastLF + 1);\n                b64 = b64.substr(0, lastLF + 1);\n            }\n        }\n\n        if (b64) {\n            this.outputBytes += b64.length;\n            this.push(Buffer.from(b64, 'ascii'));\n        }\n\n        setImmediate(done);\n    }\n\n    _flush(done) {\n        if (this._remainingBytes && this._remainingBytes.length) {\n            this._curLine += encode(this._remainingBytes);\n        }\n\n        if (this._curLine) {\n            this._curLine = wrap(this._curLine, this.options.lineLength);\n            this.outputBytes += this._curLine.length;\n            this.push(this._curLine, 'ascii');\n            this._curLine = '';\n        }\n        done();\n    }\n}\n\n// expose to the world\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a Quoted-Printable encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} Quoted-Printable encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    // usable characters that do not need encoding\n    let ranges = [\n        // https://tools.ietf.org/html/rfc2045#section-6.7\n        [0x09], // <TAB>\n        [0x0a], // <LF>\n        [0x0d], // <CR>\n        [0x20, 0x3c], // <SP>!\"#$%&'()*+,-./0123456789:;\n        [0x3e, 0x7e] // >?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}\n    ];\n    let result = '';\n    let ord;\n\n    for (let i = 0, len = buffer.length; i < len; i++) {\n        ord = buffer[i];\n        // if the char is in allowed range, then keep as is, unless it is a WS in the end of a line\n        if (checkRanges(ord, ranges) && !((ord === 0x20 || ord === 0x09) && (i === len - 1 || buffer[i + 1] === 0x0a || buffer[i + 1] === 0x0d))) {\n            result += String.fromCharCode(ord);\n            continue;\n        }\n        result += '=' + (ord < 0x10 ? '0' : '') + ord.toString(16).toUpperCase();\n    }\n\n    return result;\n}\n\n/**\n * Adds soft line breaks to a Quoted-Printable string\n *\n * @param {String} str Quoted-Printable encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped Quoted-Printable encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let pos = 0;\n    let len = str.length;\n    let match, code, line;\n    let lineMargin = Math.floor(lineLength / 3);\n    let result = '';\n\n    // insert soft linebreaks where needed\n    while (pos < len) {\n        line = str.substr(pos, lineLength);\n        if ((match = line.match(/\\r\\n/))) {\n            line = line.substr(0, match.index + match[0].length);\n            result += line;\n            pos += line.length;\n            continue;\n        }\n\n        if (line.substr(-1) === '\\n') {\n            // nothing to change here\n            result += line;\n            pos += line.length;\n            continue;\n        } else if ((match = line.substr(-lineMargin).match(/\\n.*?$/))) {\n            // truncate to nearest line break\n            line = line.substr(0, line.length - (match[0].length - 1));\n            result += line;\n            pos += line.length;\n            continue;\n        } else if (line.length > lineLength - lineMargin && (match = line.substr(-lineMargin).match(/[ \\t.,!?][^ \\t.,!?]*$/))) {\n            // truncate to nearest space\n            line = line.substr(0, line.length - (match[0].length - 1));\n        } else if (line.match(/[=][\\da-f]{0,2}$/i)) {\n            // push incomplete encoding sequences to the next line\n            if ((match = line.match(/[=][\\da-f]{0,1}$/i))) {\n                line = line.substr(0, line.length - match[0].length);\n            }\n\n            // ensure that utf-8 sequences are not split\n            while (line.length > 3 && line.length < len - pos && !line.match(/^(?:=[\\da-f]{2}){1,4}$/i) && (match = line.match(/[=][\\da-f]{2}$/gi))) {\n                code = parseInt(match[0].substr(1, 2), 16);\n                if (code < 128) {\n                    break;\n                }\n\n                line = line.substr(0, line.length - 3);\n\n                if (code >= 0xc0) {\n                    break;\n                }\n            }\n        }\n\n        if (pos + line.length < len && line.substr(-1) !== '\\n') {\n            if (line.length === lineLength && line.match(/[=][\\da-f]{2}$/i)) {\n                line = line.substr(0, line.length - 3);\n            } else if (line.length === lineLength) {\n                line = line.substr(0, line.length - 1);\n            }\n            pos += line.length;\n            line += '=\\r\\n';\n        } else {\n            pos += line.length;\n        }\n\n        result += line;\n    }\n\n    return result;\n}\n\n/**\n * Helper function to check if a number is inside provided ranges\n *\n * @param {Number} nr Number to check for\n * @param {Array} ranges An Array of allowed values\n * @returns {Boolean} True if the value was found inside allowed ranges, false otherwise\n */\nfunction checkRanges(nr, ranges) {\n    for (let i = ranges.length - 1; i >= 0; i--) {\n        if (!ranges[i].length) {\n            continue;\n        }\n        if (ranges[i].length === 1 && nr === ranges[i][0]) {\n            return true;\n        }\n        if (ranges[i].length === 2 && nr >= ranges[i][0] && nr <= ranges[i][1]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Creates a transform stream for encoding data to Quoted-Printable encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n\n        // init Transform\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        let qp;\n\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this.options.lineLength) {\n            qp = this._curLine + encode(chunk);\n            qp = wrap(qp, this.options.lineLength);\n            qp = qp.replace(/(^|\\n)([^\\n]*)$/, (match, lineBreak, lastLine) => {\n                this._curLine = lastLine;\n                return lineBreak;\n            });\n\n            if (qp) {\n                this.outputBytes += qp.length;\n                this.push(qp);\n            }\n        } else {\n            qp = encode(chunk);\n            this.outputBytes += qp.length;\n            this.push(qp, 'ascii');\n        }\n\n        done();\n    }\n\n    _flush(done) {\n        if (this._curLine) {\n            this.outputBytes += this._curLine.length;\n            this.push(this._curLine, 'ascii');\n        }\n        done();\n    }\n}\n\n// expose to the world\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n", "/* eslint no-control-regex:0 */\n\n'use strict';\n\nconst base64 = require('../base64');\nconst qp = require('../qp');\nconst mimeTypes = require('./mime-types');\n\nmodule.exports = {\n    /**\n     * Checks if a value is plaintext string (uses only printable 7bit chars)\n     *\n     * @param {String} value String to be tested\n     * @returns {Boolean} true if it is a plaintext string\n     */\n    isPlainText(value, isParam) {\n        const re = isParam ? /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\"\\u0080-\\uFFFF]/ : /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\u0080-\\uFFFF]/;\n        if (typeof value !== 'string' || re.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Checks if a multi line string containes lines longer than the selected value.\n     *\n     * Useful when detecting if a mail message needs any processing at all \u2013\n     * if only plaintext characters are used and lines are short, then there is\n     * no need to encode the values in any way. If the value is plaintext but has\n     * longer lines then allowed, then use format=flowed\n     *\n     * @param {Number} lineLength Max line length to check for\n     * @returns {Boolean} Returns true if there is at least one line longer than lineLength chars\n     */\n    hasLongerLines(str, lineLength) {\n        if (str.length > 128 * 1024) {\n            // do not test strings longer than 128kB\n            return true;\n        }\n        return new RegExp('^.{' + (lineLength + 1) + ',}', 'm').test(str);\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 MIME Word (rfc2047)\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @return {String} Single or several mime words joined together\n     */\n    encodeWord(data, mimeWordEncoding, maxLength) {\n        mimeWordEncoding = (mimeWordEncoding || 'Q').toString().toUpperCase().trim().charAt(0);\n        maxLength = maxLength || 0;\n\n        let encodedStr;\n        let toCharset = 'UTF-8';\n\n        if (maxLength && maxLength > 7 + toCharset.length) {\n            maxLength -= 7 + toCharset.length;\n        }\n\n        if (mimeWordEncoding === 'Q') {\n            // https://tools.ietf.org/html/rfc2047#section-5 rule (3)\n            encodedStr = qp.encode(data).replace(/[^a-z0-9!*+\\-/=]/gi, chr => {\n                let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n                if (chr === ' ') {\n                    return '_';\n                } else {\n                    return '=' + (ord.length === 1 ? '0' + ord : ord);\n                }\n            });\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = typeof data === 'string' ? data : base64.encode(data);\n            maxLength = maxLength ? Math.max(3, ((maxLength - (maxLength % 4)) / 4) * 3) : 0;\n        }\n\n        if (maxLength && (mimeWordEncoding !== 'B' ? encodedStr : base64.encode(data)).length > maxLength) {\n            if (mimeWordEncoding === 'Q') {\n                encodedStr = this.splitMimeEncodedString(encodedStr, maxLength).join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n            } else {\n                // RFC2047 6.3 (2) states that encoded-word must include an integral number of characters, so no chopping unicode sequences\n                let parts = [];\n                let lpart = '';\n                for (let i = 0, len = encodedStr.length; i < len; i++) {\n                    let chr = encodedStr.charAt(i);\n\n                    if (/[\\ud83c\\ud83d\\ud83e]/.test(chr) && i < len - 1) {\n                        // composite emoji byte, so add the next byte as well\n                        chr += encodedStr.charAt(++i);\n                    }\n\n                    // check if we can add this character to the existing string\n                    // without breaking byte length limit\n                    if (Buffer.byteLength(lpart + chr) <= maxLength || i === 0) {\n                        lpart += chr;\n                    } else {\n                        // we hit the length limit, so push the existing string and start over\n                        parts.push(base64.encode(lpart));\n                        lpart = chr;\n                    }\n                }\n                if (lpart) {\n                    parts.push(base64.encode(lpart));\n                }\n\n                if (parts.length > 1) {\n                    encodedStr = parts.join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n                } else {\n                    encodedStr = parts.join('');\n                }\n            }\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = base64.encode(data);\n        }\n\n        return '=?' + toCharset + '?' + mimeWordEncoding + '?' + encodedStr + (encodedStr.substr(-2) === '?=' ? '' : '?=');\n    },\n\n    /**\n     * Finds word sequences with non ascii text and converts these to mime words\n     *\n     * @param {String} value String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @param {Boolean} [encodeAll=false] If true and the value needs encoding then encodes entire string, not just the smallest match\n     * @return {String} String with possible mime words\n     */\n    encodeWords(value, mimeWordEncoding, maxLength, encodeAll) {\n        maxLength = maxLength || 0;\n\n        let encodedValue;\n\n        // find first word with a non-printable ascii or special symbol in it\n        let firstMatch = value.match(/(?:^|\\s)([^\\s]*[\"\\u0080-\\uFFFF])/);\n        if (!firstMatch) {\n            return value;\n        }\n\n        if (encodeAll) {\n            // if it is requested to encode everything or the string contains something that resebles encoded word, then encode everything\n\n            return this.encodeWord(value, mimeWordEncoding, maxLength);\n        }\n\n        // find the last word with a non-printable ascii in it\n        let lastMatch = value.match(/([\"\\u0080-\\uFFFF][^\\s]*)[^\"\\u0080-\\uFFFF]*$/);\n        if (!lastMatch) {\n            // should not happen\n            return value;\n        }\n\n        let startIndex =\n            firstMatch.index +\n            (\n                firstMatch[0].match(/[^\\s]/) || {\n                    index: 0\n                }\n            ).index;\n        let endIndex = lastMatch.index + (lastMatch[1] || '').length;\n\n        encodedValue =\n            (startIndex ? value.substr(0, startIndex) : '') +\n            this.encodeWord(value.substring(startIndex, endIndex), mimeWordEncoding || 'Q', maxLength) +\n            (endIndex < value.length ? value.substr(endIndex) : '');\n\n        return encodedValue;\n    },\n\n    /**\n     * Joins parsed header value together as 'value; param1=value1; param2=value2'\n     * PS: We are following RFC 822 for the list of special characters that we need to keep in quotes.\n     *      Refer: https://www.w3.org/Protocols/rfc1341/4_Content-Type.html\n     * @param {Object} structured Parsed header value\n     * @return {String} joined header value\n     */\n    buildHeaderValue(structured) {\n        let paramsArray = [];\n\n        Object.keys(structured.params || {}).forEach(param => {\n            // filename might include unicode characters so it is a special case\n            // other values probably do not\n            let value = structured.params[param];\n            if (!this.isPlainText(value, true) || value.length >= 75) {\n                this.buildHeaderParam(param, value, 50).forEach(encodedParam => {\n                    if (!/[\\s\"\\\\;:/=(),<>@[\\]?]|^[-']|'$/.test(encodedParam.value) || encodedParam.key.substr(-1) === '*') {\n                        paramsArray.push(encodedParam.key + '=' + encodedParam.value);\n                    } else {\n                        paramsArray.push(encodedParam.key + '=' + JSON.stringify(encodedParam.value));\n                    }\n                });\n            } else if (/[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(value)) {\n                paramsArray.push(param + '=' + JSON.stringify(value));\n            } else {\n                paramsArray.push(param + '=' + value);\n            }\n        });\n\n        return structured.value + (paramsArray.length ? '; ' + paramsArray.join('; ') : '');\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 Parameter Value Continuation encoding (rfc2231)\n     * Useful for splitting long parameter values.\n     *\n     * For example\n     *      title=\"unicode string\"\n     * becomes\n     *     title*0*=utf-8''unicode\n     *     title*1*=%20string\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {Number} [maxLength=50] Max length for generated chunks\n     * @param {String} [fromCharset='UTF-8'] Source sharacter set\n     * @return {Array} A list of encoded keys and headers\n     */\n    buildHeaderParam(key, data, maxLength) {\n        let list = [];\n        let encodedStr = typeof data === 'string' ? data : (data || '').toString();\n        let encodedStrArr;\n        let chr, ord;\n        let line;\n        let startPos = 0;\n        let i, len;\n\n        maxLength = maxLength || 50;\n\n        // process ascii only text\n        if (this.isPlainText(data, true)) {\n            // check if conversion is even needed\n            if (encodedStr.length <= maxLength) {\n                return [\n                    {\n                        key,\n                        value: encodedStr\n                    }\n                ];\n            }\n\n            encodedStr = encodedStr.replace(new RegExp('.{' + maxLength + '}', 'g'), str => {\n                list.push({\n                    line: str\n                });\n                return '';\n            });\n\n            if (encodedStr) {\n                list.push({\n                    line: encodedStr\n                });\n            }\n        } else {\n            if (/[\\uD800-\\uDBFF]/.test(encodedStr)) {\n                // string containts surrogate pairs, so normalize it to an array of bytes\n                encodedStrArr = [];\n                for (i = 0, len = encodedStr.length; i < len; i++) {\n                    chr = encodedStr.charAt(i);\n                    ord = chr.charCodeAt(0);\n                    if (ord >= 0xd800 && ord <= 0xdbff && i < len - 1) {\n                        chr += encodedStr.charAt(i + 1);\n                        encodedStrArr.push(chr);\n                        i++;\n                    } else {\n                        encodedStrArr.push(chr);\n                    }\n                }\n                encodedStr = encodedStrArr;\n            }\n\n            // first line includes the charset and language info and needs to be encoded\n            // even if it does not contain any unicode characters\n            line = 'utf-8\\x27\\x27';\n            let encoded = true;\n            startPos = 0;\n\n            // process text with unicode or special chars\n            for (i = 0, len = encodedStr.length; i < len; i++) {\n                chr = encodedStr[i];\n\n                if (encoded) {\n                    chr = this.safeEncodeURIComponent(chr);\n                } else {\n                    // try to urlencode current char\n                    chr = chr === ' ' ? chr : this.safeEncodeURIComponent(chr);\n                    // By default it is not required to encode a line, the need\n                    // only appears when the string contains unicode or special chars\n                    // in this case we start processing the line over and encode all chars\n                    if (chr !== encodedStr[i]) {\n                        // Check if it is even possible to add the encoded char to the line\n                        // If not, there is no reason to use this line, just push it to the list\n                        // and start a new line with the char that needs encoding\n                        if ((this.safeEncodeURIComponent(line) + chr).length >= maxLength) {\n                            list.push({\n                                line,\n                                encoded\n                            });\n                            line = '';\n                            startPos = i - 1;\n                        } else {\n                            encoded = true;\n                            i = startPos;\n                            line = '';\n                            continue;\n                        }\n                    }\n                }\n\n                // if the line is already too long, push it to the list and start a new one\n                if ((line + chr).length >= maxLength) {\n                    list.push({\n                        line,\n                        encoded\n                    });\n                    line = chr = encodedStr[i] === ' ' ? ' ' : this.safeEncodeURIComponent(encodedStr[i]);\n                    if (chr === encodedStr[i]) {\n                        encoded = false;\n                        startPos = i - 1;\n                    } else {\n                        encoded = true;\n                    }\n                } else {\n                    line += chr;\n                }\n            }\n\n            if (line) {\n                list.push({\n                    line,\n                    encoded\n                });\n            }\n        }\n\n        return list.map((item, i) => ({\n            // encoded lines: {name}*{part}*\n            // unencoded lines: {name}*{part}\n            // if any line needs to be encoded then the first line (part==0) is always encoded\n            key: key + '*' + i + (item.encoded ? '*' : ''),\n            value: item.line\n        }));\n    },\n\n    /**\n     * Parses a header value with key=value arguments into a structured\n     * object.\n     *\n     *   parseHeaderValue('content-type: text/plain; CHARSET='UTF-8'') ->\n     *   {\n     *     'value': 'text/plain',\n     *     'params': {\n     *       'charset': 'UTF-8'\n     *     }\n     *   }\n     *\n     * @param {String} str Header value\n     * @return {Object} Header value as a parsed structure\n     */\n    parseHeaderValue(str) {\n        let response = {\n            value: false,\n            params: {}\n        };\n        let key = false;\n        let value = '';\n        let type = 'value';\n        let quote = false;\n        let escaped = false;\n        let chr;\n\n        for (let i = 0, len = str.length; i < len; i++) {\n            chr = str.charAt(i);\n            if (type === 'key') {\n                if (chr === '=') {\n                    key = value.trim().toLowerCase();\n                    type = 'value';\n                    value = '';\n                    continue;\n                }\n                value += chr;\n            } else {\n                if (escaped) {\n                    value += chr;\n                } else if (chr === '\\\\') {\n                    escaped = true;\n                    continue;\n                } else if (quote && chr === quote) {\n                    quote = false;\n                } else if (!quote && chr === '\"') {\n                    quote = chr;\n                } else if (!quote && chr === ';') {\n                    if (key === false) {\n                        response.value = value.trim();\n                    } else {\n                        response.params[key] = value.trim();\n                    }\n                    type = 'key';\n                    value = '';\n                } else {\n                    value += chr;\n                }\n                escaped = false;\n            }\n        }\n\n        if (type === 'value') {\n            if (key === false) {\n                response.value = value.trim();\n            } else {\n                response.params[key] = value.trim();\n            }\n        } else if (value.trim()) {\n            response.params[value.trim().toLowerCase()] = '';\n        }\n\n        // handle parameter value continuations\n        // https://tools.ietf.org/html/rfc2231#section-3\n\n        // preprocess values\n        Object.keys(response.params).forEach(key => {\n            let actualKey, nr, match, value;\n            if ((match = key.match(/(\\*(\\d+)|\\*(\\d+)\\*|\\*)$/))) {\n                actualKey = key.substr(0, match.index);\n                nr = Number(match[2] || match[3]) || 0;\n\n                if (!response.params[actualKey] || typeof response.params[actualKey] !== 'object') {\n                    response.params[actualKey] = {\n                        charset: false,\n                        values: []\n                    };\n                }\n\n                value = response.params[key];\n\n                if (nr === 0 && match[0].substr(-1) === '*' && (match = value.match(/^([^']*)'[^']*'(.*)$/))) {\n                    response.params[actualKey].charset = match[1] || 'iso-8859-1';\n                    value = match[2];\n                }\n\n                response.params[actualKey].values[nr] = value;\n\n                // remove the old reference\n                delete response.params[key];\n            }\n        });\n\n        // concatenate split rfc2231 strings and convert encoded strings to mime encoded words\n        Object.keys(response.params).forEach(key => {\n            let value;\n            if (response.params[key] && Array.isArray(response.params[key].values)) {\n                value = response.params[key].values.map(val => val || '').join('');\n\n                if (response.params[key].charset) {\n                    // convert \"%AB\" to \"=?charset?Q?=AB?=\"\n                    response.params[key] =\n                        '=?' +\n                        response.params[key].charset +\n                        '?Q?' +\n                        value\n                            // fix invalidly encoded chars\n                            .replace(/[=?_\\s]/g, s => {\n                                let c = s.charCodeAt(0).toString(16);\n                                if (s === ' ') {\n                                    return '_';\n                                } else {\n                                    return '%' + (c.length < 2 ? '0' : '') + c;\n                                }\n                            })\n                            // change from urlencoding to percent encoding\n                            .replace(/%/g, '=') +\n                        '?=';\n                } else {\n                    response.params[key] = value;\n                }\n            }\n        });\n\n        return response;\n    },\n\n    /**\n     * Returns file extension for a content type string. If no suitable extensions\n     * are found, 'bin' is used as the default extension\n     *\n     * @param {String} mimeType Content type to be checked for\n     * @return {String} File extension\n     */\n    detectExtension: mimeType => mimeTypes.detectExtension(mimeType),\n\n    /**\n     * Returns content type for a file extension. If no suitable content types\n     * are found, 'application/octet-stream' is used as the default content type\n     *\n     * @param {String} extension Extension to be checked for\n     * @return {String} File extension\n     */\n    detectMimeType: extension => mimeTypes.detectMimeType(extension),\n\n    /**\n     * Folds long lines, useful for folding header lines (afterSpace=false) and\n     * flowed text (afterSpace=true)\n     *\n     * @param {String} str String to be folded\n     * @param {Number} [lineLength=76] Maximum length of a line\n     * @param {Boolean} afterSpace If true, leave a space in th end of a line\n     * @return {String} String with folded lines\n     */\n    foldLines(str, lineLength, afterSpace) {\n        str = (str || '').toString();\n        lineLength = lineLength || 76;\n\n        let pos = 0,\n            len = str.length,\n            result = '',\n            line,\n            match;\n\n        while (pos < len) {\n            line = str.substr(pos, lineLength);\n            if (line.length < lineLength) {\n                result += line;\n                break;\n            }\n            if ((match = line.match(/^[^\\n\\r]*(\\r?\\n|\\r)/))) {\n                line = match[0];\n                result += line;\n                pos += line.length;\n                continue;\n            } else if ((match = line.match(/(\\s+)[^\\s]*$/)) && match[0].length - (afterSpace ? (match[1] || '').length : 0) < line.length) {\n                line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || '').length : 0)));\n            } else if ((match = str.substr(pos + line.length).match(/^[^\\s]+(\\s*)/))) {\n                line = line + match[0].substr(0, match[0].length - (!afterSpace ? (match[1] || '').length : 0));\n            }\n\n            result += line;\n            pos += line.length;\n            if (pos < len) {\n                result += '\\r\\n';\n            }\n        }\n\n        return result;\n    },\n\n    /**\n     * Splits a mime encoded string. Needed for dividing mime words into smaller chunks\n     *\n     * @param {String} str Mime encoded string to be split up\n     * @param {Number} maxlen Maximum length of characters for one part (minimum 12)\n     * @return {Array} Split string\n     */\n    splitMimeEncodedString: (str, maxlen) => {\n        let curLine,\n            match,\n            chr,\n            done,\n            lines = [];\n\n        // require at least 12 symbols to fit possible 4 octet UTF-8 sequences\n        maxlen = Math.max(maxlen || 0, 12);\n\n        while (str.length) {\n            curLine = str.substr(0, maxlen);\n\n            // move incomplete escaped char back to main\n            if ((match = curLine.match(/[=][0-9A-F]?$/i))) {\n                curLine = curLine.substr(0, match.index);\n            }\n\n            done = false;\n            while (!done) {\n                done = true;\n                // check if not middle of a unicode char sequence\n                if ((match = str.substr(curLine.length).match(/^[=]([0-9A-F]{2})/i))) {\n                    chr = parseInt(match[1], 16);\n                    // invalid sequence, move one char back anc recheck\n                    if (chr < 0xc2 && chr > 0x7f) {\n                        curLine = curLine.substr(0, curLine.length - 3);\n                        done = false;\n                    }\n                }\n            }\n\n            if (curLine.length) {\n                lines.push(curLine);\n            }\n            str = str.substr(curLine.length);\n        }\n\n        return lines;\n    },\n\n    encodeURICharComponent: chr => {\n        let res = '';\n        let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n\n        if (ord.length % 2) {\n            ord = '0' + ord;\n        }\n\n        if (ord.length > 2) {\n            for (let i = 0, len = ord.length / 2; i < len; i++) {\n                res += '%' + ord.substr(i, 2);\n            }\n        } else {\n            res += '%' + ord;\n        }\n\n        return res;\n    },\n\n    safeEncodeURIComponent(str) {\n        str = (str || '').toString();\n\n        try {\n            // might throw if we try to encode invalid sequences, eg. partial emoji\n            str = encodeURIComponent(str);\n        } catch (E) {\n            // should never run\n            return str.replace(/[^\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]+/g, '');\n        }\n\n        // ensure chars that are not handled by encodeURICompent are converted as well\n        return str.replace(/[\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]/g, chr => this.encodeURICharComponent(chr));\n    }\n};\n", "'use strict';\n\n/**\n * Converts tokens for a single address into an address object\n *\n * @param {Array} tokens Tokens object\n * @return {Object} Address object\n */\nfunction _handleAddress(tokens) {\n    let token;\n    let isGroup = false;\n    let state = 'text';\n    let address;\n    let addresses = [];\n    let data = {\n        address: [],\n        comment: [],\n        group: [],\n        text: []\n    };\n    let i;\n    let len;\n\n    // Filter out <addresses>, (comments) and regular text\n    for (i = 0, len = tokens.length; i < len; i++) {\n        token = tokens[i];\n        if (token.type === 'operator') {\n            switch (token.value) {\n                case '<':\n                    state = 'address';\n                    break;\n                case '(':\n                    state = 'comment';\n                    break;\n                case ':':\n                    state = 'group';\n                    isGroup = true;\n                    break;\n                default:\n                    state = 'text';\n            }\n        } else if (token.value) {\n            if (state === 'address') {\n                // handle use case where unquoted name includes a \"<\"\n                // Apple Mail truncates everything between an unexpected < and an address\n                // and so will we\n                token.value = token.value.replace(/^[^<]*<\\s*/, '');\n            }\n            data[state].push(token.value);\n        }\n    }\n\n    // If there is no text but a comment, replace the two\n    if (!data.text.length && data.comment.length) {\n        data.text = data.comment;\n        data.comment = [];\n    }\n\n    if (isGroup) {\n        // http://tools.ietf.org/html/rfc2822#appendix-A.1.3\n        data.text = data.text.join(' ');\n        addresses.push({\n            name: data.text || (address && address.name),\n            group: data.group.length ? addressparser(data.group.join(',')) : []\n        });\n    } else {\n        // If no address was found, try to detect one from regular text\n        if (!data.address.length && data.text.length) {\n            for (i = data.text.length - 1; i >= 0; i--) {\n                if (data.text[i].match(/^[^@\\s]+@[^@\\s]+$/)) {\n                    data.address = data.text.splice(i, 1);\n                    break;\n                }\n            }\n\n            let _regexHandler = function (address) {\n                if (!data.address.length) {\n                    data.address = [address.trim()];\n                    return ' ';\n                } else {\n                    return address;\n                }\n            };\n\n            // still no address\n            if (!data.address.length) {\n                for (i = data.text.length - 1; i >= 0; i--) {\n                    // fixed the regex to parse email address correctly when email address has more than one @\n                    data.text[i] = data.text[i].replace(/\\s*\\b[^@\\s]+@[^\\s]+\\b\\s*/, _regexHandler).trim();\n                    if (data.address.length) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // If there's still is no text but a comment exixts, replace the two\n        if (!data.text.length && data.comment.length) {\n            data.text = data.comment;\n            data.comment = [];\n        }\n\n        // Keep only the first address occurence, push others to regular text\n        if (data.address.length > 1) {\n            data.text = data.text.concat(data.address.splice(1));\n        }\n\n        // Join values with spaces\n        data.text = data.text.join(' ');\n        data.address = data.address.join(' ');\n\n        if (!data.address && isGroup) {\n            return [];\n        } else {\n            address = {\n                address: data.address || data.text || '',\n                name: data.text || data.address || ''\n            };\n\n            if (address.address === address.name) {\n                if ((address.address || '').match(/@/)) {\n                    address.name = '';\n                } else {\n                    address.address = '';\n                }\n            }\n\n            addresses.push(address);\n        }\n    }\n\n    return addresses;\n}\n\n/**\n * Creates a Tokenizer object for tokenizing address field strings\n *\n * @constructor\n * @param {String} str Address field string\n */\nclass Tokenizer {\n    constructor(str) {\n        this.str = (str || '').toString();\n        this.operatorCurrent = '';\n        this.operatorExpecting = '';\n        this.node = null;\n        this.escaped = false;\n\n        this.list = [];\n        /**\n         * Operator tokens and which tokens are expected to end the sequence\n         */\n        this.operators = {\n            '\"': '\"',\n            '(': ')',\n            '<': '>',\n            ',': '',\n            ':': ';',\n            // Semicolons are not a legal delimiter per the RFC2822 grammar other\n            // than for terminating a group, but they are also not valid for any\n            // other use in this context.  Given that some mail clients have\n            // historically allowed the semicolon as a delimiter equivalent to the\n            // comma in their UI, it makes sense to treat them the same as a comma\n            // when used outside of a group.\n            ';': ''\n        };\n    }\n\n    /**\n     * Tokenizes the original input string\n     *\n     * @return {Array} An array of operator|text tokens\n     */\n    tokenize() {\n        let chr,\n            list = [];\n        for (let i = 0, len = this.str.length; i < len; i++) {\n            chr = this.str.charAt(i);\n            this.checkChar(chr);\n        }\n\n        this.list.forEach(node => {\n            node.value = (node.value || '').toString().trim();\n            if (node.value) {\n                list.push(node);\n            }\n        });\n\n        return list;\n    }\n\n    /**\n     * Checks if a character is an operator or text and acts accordingly\n     *\n     * @param {String} chr Character from the address field\n     */\n    checkChar(chr) {\n        if (this.escaped) {\n            // ignore next condition blocks\n        } else if (chr === this.operatorExpecting) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = '';\n            this.escaped = false;\n            return;\n        } else if (!this.operatorExpecting && chr in this.operators) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = this.operators[chr];\n            this.escaped = false;\n            return;\n        } else if (['\"', \"'\"].includes(this.operatorExpecting) && chr === '\\\\') {\n            this.escaped = true;\n            return;\n        }\n\n        if (!this.node) {\n            this.node = {\n                type: 'text',\n                value: ''\n            };\n            this.list.push(this.node);\n        }\n\n        if (chr === '\\n') {\n            // Convert newlines to spaces. Carriage return is ignored as \\r and \\n usually\n            // go together anyway and there already is a WS for \\n. Lone \\r means something is fishy.\n            chr = ' ';\n        }\n\n        if (chr.charCodeAt(0) >= 0x21 || [' ', '\\t'].includes(chr)) {\n            // skip command bytes\n            this.node.value += chr;\n        }\n\n        this.escaped = false;\n    }\n}\n\n/**\n * Parses structured e-mail addresses from an address field\n *\n * Example:\n *\n *    'Name <address@domain>'\n *\n * will be converted to\n *\n *     [{name: 'Name', address: 'address@domain'}]\n *\n * @param {String} str Address field\n * @return {Array} An array of address objects\n */\nfunction addressparser(str, options) {\n    options = options || {};\n\n    let tokenizer = new Tokenizer(str);\n    let tokens = tokenizer.tokenize();\n\n    let addresses = [];\n    let address = [];\n    let parsedAddresses = [];\n\n    tokens.forEach(token => {\n        if (token.type === 'operator' && (token.value === ',' || token.value === ';')) {\n            if (address.length) {\n                addresses.push(address);\n            }\n            address = [];\n        } else {\n            address.push(token);\n        }\n    });\n\n    if (address.length) {\n        addresses.push(address);\n    }\n\n    addresses.forEach(address => {\n        address = _handleAddress(address);\n        if (address.length) {\n            parsedAddresses = parsedAddresses.concat(address);\n        }\n    });\n\n    if (options.flatten) {\n        let addresses = [];\n        let walkAddressList = list => {\n            list.forEach(address => {\n                if (address.group) {\n                    return walkAddressList(address.group);\n                } else {\n                    addresses.push(address);\n                }\n            });\n        };\n        walkAddressList(parsedAddresses);\n        return addresses;\n    }\n\n    return parsedAddresses;\n}\n\n// expose to the world\nmodule.exports = addressparser;\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\nclass LastNewline extends Transform {\n    constructor() {\n        super();\n        this.lastByte = false;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (chunk.length) {\n            this.lastByte = chunk[chunk.length - 1];\n        }\n\n        this.push(chunk);\n        done();\n    }\n\n    _flush(done) {\n        if (this.lastByte === 0x0a) {\n            return done();\n        }\n        if (this.lastByte === 0x0d) {\n            this.push(Buffer.from('\\n'));\n            return done();\n        }\n        this.push(Buffer.from('\\r\\n'));\n        return done();\n    }\n}\n\nmodule.exports = LastNewline;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0a) {\n                // \\n\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        this.push(buf);\n                    }\n                    this.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0d) {\n                // \\n\n                buf = chunk.slice(lastPos, i);\n                lastPos = i + 1;\n                this.push(buf);\n            }\n        }\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n", "/* eslint no-undefined: 0, prefer-spread: 0, no-control-regex: 0 */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst punycode = require('punycode');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\nconst mimeFuncs = require('../mime-funcs');\nconst qp = require('../qp');\nconst base64 = require('../base64');\nconst addressparser = require('../addressparser');\nconst nmfetch = require('../fetch');\nconst LastNewline = require('./last-newline');\n\nconst LeWindows = require('./le-windows');\nconst LeUnix = require('./le-unix');\n\n/**\n * Creates a new mime tree node. Assumes 'multipart/*' as the content type\n * if it is a branch, anything else counts as leaf. If rootNode is missing from\n * the options, assumes this is the root.\n *\n * @param {String} contentType Define the content type for the node. Can be left blank for attachments (derived from filename)\n * @param {Object} [options] optional options\n * @param {Object} [options.rootNode] root node for this tree\n * @param {Object} [options.parentNode] immediate parent for this node\n * @param {Object} [options.filename] filename for an attachment node\n * @param {String} [options.baseBoundary] shared part of the unique multipart boundary\n * @param {Boolean} [options.keepBcc] If true, do not exclude Bcc from the generated headers\n * @param {Function} [options.normalizeHeaderKey] method to normalize header keys for custom caseing\n * @param {String} [options.textEncoding] either 'Q' (the default) or 'B'\n */\nclass MimeNode {\n    constructor(contentType, options) {\n        this.nodeCounter = 0;\n\n        options = options || {};\n\n        /**\n         * shared part of the unique multipart boundary\n         */\n        this.baseBoundary = options.baseBoundary || crypto.randomBytes(8).toString('hex');\n        this.boundaryPrefix = options.boundaryPrefix || '--_NmP';\n\n        this.disableFileAccess = !!options.disableFileAccess;\n        this.disableUrlAccess = !!options.disableUrlAccess;\n\n        this.normalizeHeaderKey = options.normalizeHeaderKey;\n\n        /**\n         * If date headers is missing and current node is the root, this value is used instead\n         */\n        this.date = new Date();\n\n        /**\n         * Root node for current mime tree\n         */\n        this.rootNode = options.rootNode || this;\n\n        /**\n         * If true include Bcc in generated headers (if available)\n         */\n        this.keepBcc = !!options.keepBcc;\n\n        /**\n         * If filename is specified but contentType is not (probably an attachment)\n         * detect the content type from filename extension\n         */\n        if (options.filename) {\n            /**\n             * Filename for this node. Useful with attachments\n             */\n            this.filename = options.filename;\n            if (!contentType) {\n                contentType = mimeFuncs.detectMimeType(this.filename.split('.').pop());\n            }\n        }\n\n        /**\n         * Indicates which encoding should be used for header strings: \"Q\" or \"B\"\n         */\n        this.textEncoding = (options.textEncoding || '').toString().trim().charAt(0).toUpperCase();\n\n        /**\n         * Immediate parent for this node (or undefined if not set)\n         */\n        this.parentNode = options.parentNode;\n\n        /**\n         * Hostname for default message-id values\n         */\n        this.hostname = options.hostname;\n\n        /**\n         * If set to 'win' then uses \\r\\n, if 'linux' then \\n. If not set (or `raw` is used) then newlines are kept as is.\n         */\n        this.newline = options.newline;\n\n        /**\n         * An array for possible child nodes\n         */\n        this.childNodes = [];\n\n        /**\n         * Used for generating unique boundaries (prepended to the shared base)\n         */\n        this._nodeId = ++this.rootNode.nodeCounter;\n\n        /**\n         * A list of header values for this node in the form of [{key:'', value:''}]\n         */\n        this._headers = [];\n\n        /**\n         * True if the content only uses ASCII printable characters\n         * @type {Boolean}\n         */\n        this._isPlainText = false;\n\n        /**\n         * True if the content is plain text but has longer lines than allowed\n         * @type {Boolean}\n         */\n        this._hasLongLines = false;\n\n        /**\n         * If set, use instead this value for envelopes instead of generating one\n         * @type {Boolean}\n         */\n        this._envelope = false;\n\n        /**\n         * If set then use this value as the stream content instead of building it\n         * @type {String|Buffer|Stream}\n         */\n        this._raw = false;\n\n        /**\n         * Additional transform streams that the message will be piped before\n         * exposing by createReadStream\n         * @type {Array}\n         */\n        this._transforms = [];\n\n        /**\n         * Additional process functions that the message will be piped through before\n         * exposing by createReadStream. These functions are run after transforms\n         * @type {Array}\n         */\n        this._processFuncs = [];\n\n        /**\n         * If content type is set (or derived from the filename) add it to headers\n         */\n        if (contentType) {\n            this.setHeader('Content-Type', contentType);\n        }\n    }\n\n    /////// PUBLIC METHODS\n\n    /**\n     * Creates and appends a child node.Arguments provided are passed to MimeNode constructor\n     *\n     * @param {String} [contentType] Optional content type\n     * @param {Object} [options] Optional options object\n     * @return {Object} Created node object\n     */\n    createChild(contentType, options) {\n        if (!options && typeof contentType === 'object') {\n            options = contentType;\n            contentType = undefined;\n        }\n        let node = new MimeNode(contentType, options);\n        this.appendChild(node);\n        return node;\n    }\n\n    /**\n     * Appends an existing node to the mime tree. Removes the node from an existing\n     * tree if needed\n     *\n     * @param {Object} childNode node to be appended\n     * @return {Object} Appended node object\n     */\n    appendChild(childNode) {\n        if (childNode.rootNode !== this.rootNode) {\n            childNode.rootNode = this.rootNode;\n            childNode._nodeId = ++this.rootNode.nodeCounter;\n        }\n\n        childNode.parentNode = this;\n\n        this.childNodes.push(childNode);\n        return childNode;\n    }\n\n    /**\n     * Replaces current node with another node\n     *\n     * @param {Object} node Replacement node\n     * @return {Object} Replacement node\n     */\n    replace(node) {\n        if (node === this) {\n            return this;\n        }\n\n        this.parentNode.childNodes.forEach((childNode, i) => {\n            if (childNode === this) {\n                node.rootNode = this.rootNode;\n                node.parentNode = this.parentNode;\n                node._nodeId = this._nodeId;\n\n                this.rootNode = this;\n                this.parentNode = undefined;\n\n                node.parentNode.childNodes[i] = node;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Removes current node from the mime tree\n     *\n     * @return {Object} removed node\n     */\n    remove() {\n        if (!this.parentNode) {\n            return this;\n        }\n\n        for (let i = this.parentNode.childNodes.length - 1; i >= 0; i--) {\n            if (this.parentNode.childNodes[i] === this) {\n                this.parentNode.childNodes.splice(i, 1);\n                this.parentNode = undefined;\n                this.rootNode = this;\n                return this;\n            }\n        }\n    }\n\n    /**\n     * Sets a header value. If the value for selected key exists, it is overwritten.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    setHeader(key, value) {\n        let added = false,\n            headerValue;\n\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && 'value' in key) {\n                this.setHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.setHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.setHeader(i, key[i]);\n                });\n            }\n            return this;\n        }\n\n        key = this._normalizeHeaderKey(key);\n\n        headerValue = {\n            key,\n            value\n        };\n\n        // Check if the value exists and overwrite\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                if (!added) {\n                    // replace the first match\n                    this._headers[i] = headerValue;\n                    added = true;\n                } else {\n                    // remove following matches\n                    this._headers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n\n        // match not found, append the value\n        if (!added) {\n            this._headers.push(headerValue);\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds a header value. If the value for selected key exists, the value is appended\n     * as a new field and old one is not touched.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    addHeader(key, value) {\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && key.value) {\n                this.addHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.addHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.addHeader(i, key[i]);\n                });\n            }\n            return this;\n        } else if (Array.isArray(value)) {\n            value.forEach(val => {\n                this.addHeader(key, val);\n            });\n            return this;\n        }\n\n        this._headers.push({\n            key: this._normalizeHeaderKey(key),\n            value\n        });\n\n        return this;\n    }\n\n    /**\n     * Retrieves the first mathcing value of a selected key\n     *\n     * @param {String} key Key to search for\n     * @retun {String} Value for the key\n     */\n    getHeader(key) {\n        key = this._normalizeHeaderKey(key);\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                return this._headers[i].value;\n            }\n        }\n    }\n\n    /**\n     * Sets body content for current node. If the value is a string, charset is added automatically\n     * to Content-Type (if it is text/*). If the value is a Buffer, you need to specify\n     * the charset yourself\n     *\n     * @param (String|Buffer) content Body content\n     * @return {Object} current node\n     */\n    setContent(content) {\n        this.content = content;\n        if (typeof this.content.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this.content.removeListener('error', this._contentErrorHandler);\n                this.content = err;\n            };\n            this.content.once('error', this._contentErrorHandler);\n        } else if (typeof this.content === 'string') {\n            this._isPlainText = mimeFuncs.isPlainText(this.content);\n            if (this._isPlainText && mimeFuncs.hasLongerLines(this.content, 76)) {\n                // If there are lines longer than 76 symbols/bytes do not use 7bit\n                this._hasLongLines = true;\n            }\n        }\n        return this;\n    }\n\n    build(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let stream = this.createReadStream();\n        let buf = [];\n        let buflen = 0;\n        let returned = false;\n\n        stream.on('readable', () => {\n            let chunk;\n\n            while ((chunk = stream.read()) !== null) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n        });\n\n        stream.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            return callback(err);\n        });\n\n        stream.once('end', chunk => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            if (chunk && chunk.length) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n            return callback(null, Buffer.concat(buf, buflen));\n        });\n\n        return promise;\n    }\n\n    getTransferEncoding() {\n        let transferEncoding = false;\n        let contentType = (this.getHeader('Content-Type') || '').toString().toLowerCase().trim();\n\n        if (this.content) {\n            transferEncoding = (this.getHeader('Content-Transfer-Encoding') || '').toString().toLowerCase().trim();\n            if (!transferEncoding || !['base64', 'quoted-printable'].includes(transferEncoding)) {\n                if (/^text\\//i.test(contentType)) {\n                    // If there are no special symbols, no need to modify the text\n                    if (this._isPlainText && !this._hasLongLines) {\n                        transferEncoding = '7bit';\n                    } else if (typeof this.content === 'string' || this.content instanceof Buffer) {\n                        // detect preferred encoding for string value\n                        transferEncoding = this._getTextEncoding(this.content) === 'Q' ? 'quoted-printable' : 'base64';\n                    } else {\n                        // we can not check content for a stream, so either use preferred encoding or fallback to QP\n                        transferEncoding = this.textEncoding === 'B' ? 'base64' : 'quoted-printable';\n                    }\n                } else if (!/^(multipart|message)\\//i.test(contentType)) {\n                    transferEncoding = transferEncoding || 'base64';\n                }\n            }\n        }\n        return transferEncoding;\n    }\n\n    /**\n     * Builds the header block for the mime node. Append \\r\\n\\r\\n before writing the content\n     *\n     * @returns {String} Headers\n     */\n    buildHeaders() {\n        let transferEncoding = this.getTransferEncoding();\n        let headers = [];\n\n        if (transferEncoding) {\n            this.setHeader('Content-Transfer-Encoding', transferEncoding);\n        }\n\n        if (this.filename && !this.getHeader('Content-Disposition')) {\n            this.setHeader('Content-Disposition', 'attachment');\n        }\n\n        // Ensure mandatory header fields\n        if (this.rootNode === this) {\n            if (!this.getHeader('Date')) {\n                this.setHeader('Date', this.date.toUTCString().replace(/GMT/, '+0000'));\n            }\n\n            // ensure that Message-Id is present\n            this.messageId();\n\n            if (!this.getHeader('MIME-Version')) {\n                this.setHeader('MIME-Version', '1.0');\n            }\n        }\n\n        this._headers.forEach(header => {\n            let key = header.key;\n            let value = header.value;\n            let structured;\n            let param;\n            let options = {};\n            let formattedHeaders = ['From', 'Sender', 'To', 'Cc', 'Bcc', 'Reply-To', 'Date', 'References'];\n\n            if (value && typeof value === 'object' && !formattedHeaders.includes(key)) {\n                Object.keys(value).forEach(key => {\n                    if (key !== 'value') {\n                        options[key] = value[key];\n                    }\n                });\n                value = (value.value || '').toString();\n                if (!value.trim()) {\n                    return;\n                }\n            }\n\n            if (options.prepared) {\n                // header value is\n                if (options.foldLines) {\n                    headers.push(mimeFuncs.foldLines(key + ': ' + value));\n                } else {\n                    headers.push(key + ': ' + value);\n                }\n                return;\n            }\n\n            switch (header.key) {\n                case 'Content-Disposition':\n                    structured = mimeFuncs.parseHeaderValue(value);\n                    if (this.filename) {\n                        structured.params.filename = this.filename;\n                    }\n                    value = mimeFuncs.buildHeaderValue(structured);\n                    break;\n\n                case 'Content-Type':\n                    structured = mimeFuncs.parseHeaderValue(value);\n\n                    this._handleContentType(structured);\n\n                    if (structured.value.match(/^text\\/plain\\b/) && typeof this.content === 'string' && /[\\u0080-\\uFFFF]/.test(this.content)) {\n                        structured.params.charset = 'utf-8';\n                    }\n\n                    value = mimeFuncs.buildHeaderValue(structured);\n\n                    if (this.filename) {\n                        // add support for non-compliant clients like QQ webmail\n                        // we can't build the value with buildHeaderValue as the value is non standard and\n                        // would be converted to parameter continuation encoding that we do not want\n                        param = this._encodeWords(this.filename);\n\n                        if (param !== this.filename || /[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(param)) {\n                            // include value in quotes if needed\n                            param = '\"' + param + '\"';\n                        }\n                        value += '; name=' + param;\n                    }\n                    break;\n\n                case 'Bcc':\n                    if (!this.keepBcc) {\n                        // skip BCC values\n                        return;\n                    }\n                    break;\n            }\n\n            value = this._encodeHeaderValue(key, value);\n\n            // skip empty lines\n            if (!(value || '').toString().trim()) {\n                return;\n            }\n\n            if (typeof this.normalizeHeaderKey === 'function') {\n                let normalized = this.normalizeHeaderKey(key, value);\n                if (normalized && typeof normalized === 'string' && normalized.length) {\n                    key = normalized;\n                }\n            }\n\n            headers.push(mimeFuncs.foldLines(key + ': ' + value, 76));\n        });\n\n        return headers.join('\\r\\n');\n    }\n\n    /**\n     * Streams the rfc2822 message from the current node. If this is a root node,\n     * mandatory header fields are set if missing (Date, Message-Id, MIME-Version)\n     *\n     * @return {String} Compiled message\n     */\n    createReadStream(options) {\n        options = options || {};\n\n        let stream = new PassThrough(options);\n        let outputStream = stream;\n        let transform;\n\n        this.stream(stream, options, err => {\n            if (err) {\n                outputStream.emit('error', err);\n                return;\n            }\n            stream.end();\n        });\n\n        for (let i = 0, len = this._transforms.length; i < len; i++) {\n            transform = typeof this._transforms[i] === 'function' ? this._transforms[i]() : this._transforms[i];\n            outputStream.once('error', err => {\n                transform.emit('error', err);\n            });\n            outputStream = outputStream.pipe(transform);\n        }\n\n        // ensure terminating newline after possible user transforms\n        transform = new LastNewline();\n        outputStream.once('error', err => {\n            transform.emit('error', err);\n        });\n        outputStream = outputStream.pipe(transform);\n\n        // dkim and stuff\n        for (let i = 0, len = this._processFuncs.length; i < len; i++) {\n            transform = this._processFuncs[i];\n            outputStream = transform(outputStream);\n        }\n\n        if (this.newline) {\n            const winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes(this.newline.toString().toLowerCase());\n            const newlineTransform = winbreak ? new LeWindows() : new LeUnix();\n\n            const stream = outputStream.pipe(newlineTransform);\n            outputStream.on('error', err => stream.emit('error', err));\n            return stream;\n        }\n\n        return outputStream;\n    }\n\n    /**\n     * Appends a transform stream object to the transforms list. Final output\n     * is passed through this stream before exposing\n     *\n     * @param {Object} transform Read-Write stream\n     */\n    transform(transform) {\n        this._transforms.push(transform);\n    }\n\n    /**\n     * Appends a post process function. The functon is run after transforms and\n     * uses the following syntax\n     *\n     *   processFunc(input) -> outputStream\n     *\n     * @param {Object} processFunc Read-Write stream\n     */\n    processFunc(processFunc) {\n        this._processFuncs.push(processFunc);\n    }\n\n    stream(outputStream, options, done) {\n        let transferEncoding = this.getTransferEncoding();\n        let contentStream;\n        let localStream;\n\n        // protect actual callback against multiple triggering\n        let returned = false;\n        let callback = err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            done(err);\n        };\n\n        // for multipart nodes, push child nodes\n        // for content nodes end the stream\n        let finalize = () => {\n            let childId = 0;\n            let processChildNode = () => {\n                if (childId >= this.childNodes.length) {\n                    outputStream.write('\\r\\n--' + this.boundary + '--\\r\\n');\n                    return callback();\n                }\n                let child = this.childNodes[childId++];\n                outputStream.write((childId > 1 ? '\\r\\n' : '') + '--' + this.boundary + '\\r\\n');\n                child.stream(outputStream, options, err => {\n                    if (err) {\n                        return callback(err);\n                    }\n                    setImmediate(processChildNode);\n                });\n            };\n\n            if (this.multipart) {\n                setImmediate(processChildNode);\n            } else {\n                return callback();\n            }\n        };\n\n        // pushes node content\n        let sendContent = () => {\n            if (this.content) {\n                if (Object.prototype.toString.call(this.content) === '[object Error]') {\n                    // content is already errored\n                    return callback(this.content);\n                }\n\n                if (typeof this.content.pipe === 'function') {\n                    this.content.removeListener('error', this._contentErrorHandler);\n                    this._contentErrorHandler = err => callback(err);\n                    this.content.once('error', this._contentErrorHandler);\n                }\n\n                let createStream = () => {\n                    if (['quoted-printable', 'base64'].includes(transferEncoding)) {\n                        contentStream = new (transferEncoding === 'base64' ? base64 : qp).Encoder(options);\n\n                        contentStream.pipe(outputStream, {\n                            end: false\n                        });\n                        contentStream.once('end', finalize);\n                        contentStream.once('error', err => callback(err));\n\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(contentStream);\n                    } else {\n                        // anything that is not QP or Base54 passes as-is\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(outputStream, {\n                            end: false\n                        });\n                        localStream.once('end', finalize);\n                    }\n\n                    localStream.once('error', err => callback(err));\n                };\n\n                if (this.content._resolve) {\n                    let chunks = [];\n                    let chunklen = 0;\n                    let returned = false;\n                    let sourceStream = this._getStream(this.content);\n                    sourceStream.on('error', err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        callback(err);\n                    });\n                    sourceStream.on('readable', () => {\n                        let chunk;\n                        while ((chunk = sourceStream.read()) !== null) {\n                            chunks.push(chunk);\n                            chunklen += chunk.length;\n                        }\n                    });\n                    sourceStream.on('end', () => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        this.content._resolve = false;\n                        this.content._resolvedValue = Buffer.concat(chunks, chunklen);\n                        setImmediate(createStream);\n                    });\n                } else {\n                    setImmediate(createStream);\n                }\n                return;\n            } else {\n                return setImmediate(finalize);\n            }\n        };\n\n        if (this._raw) {\n            setImmediate(() => {\n                if (Object.prototype.toString.call(this._raw) === '[object Error]') {\n                    // content is already errored\n                    return callback(this._raw);\n                }\n\n                // remove default error handler (if set)\n                if (typeof this._raw.pipe === 'function') {\n                    this._raw.removeListener('error', this._contentErrorHandler);\n                }\n\n                let raw = this._getStream(this._raw);\n                raw.pipe(outputStream, {\n                    end: false\n                });\n                raw.on('error', err => outputStream.emit('error', err));\n                raw.on('end', finalize);\n            });\n        } else {\n            outputStream.write(this.buildHeaders() + '\\r\\n\\r\\n');\n            setImmediate(sendContent);\n        }\n    }\n\n    /**\n     * Sets envelope to be used instead of the generated one\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    setEnvelope(envelope) {\n        let list;\n\n        this._envelope = {\n            from: false,\n            to: []\n        };\n\n        if (envelope.from) {\n            list = [];\n            this._convertAddresses(this._parseAddresses(envelope.from), list);\n            list = list.filter(address => address && address.address);\n            if (list.length && list[0]) {\n                this._envelope.from = list[0].address;\n            }\n        }\n        ['to', 'cc', 'bcc'].forEach(key => {\n            if (envelope[key]) {\n                this._convertAddresses(this._parseAddresses(envelope[key]), this._envelope.to);\n            }\n        });\n\n        this._envelope.to = this._envelope.to.map(to => to.address).filter(address => address);\n\n        let standardFields = ['to', 'cc', 'bcc', 'from'];\n        Object.keys(envelope).forEach(key => {\n            if (!standardFields.includes(key)) {\n                this._envelope[key] = envelope[key];\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Generates and returns an object with parsed address fields\n     *\n     * @return {Object} Address object\n     */\n    getAddresses() {\n        let addresses = {};\n\n        this._headers.forEach(header => {\n            let key = header.key.toLowerCase();\n            if (['from', 'sender', 'reply-to', 'to', 'cc', 'bcc'].includes(key)) {\n                if (!Array.isArray(addresses[key])) {\n                    addresses[key] = [];\n                }\n\n                this._convertAddresses(this._parseAddresses(header.value), addresses[key]);\n            }\n        });\n\n        return addresses;\n    }\n\n    /**\n     * Generates and returns SMTP envelope with the sender address and a list of recipients addresses\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    getEnvelope() {\n        if (this._envelope) {\n            return this._envelope;\n        }\n\n        let envelope = {\n            from: false,\n            to: []\n        };\n        this._headers.forEach(header => {\n            let list = [];\n            if (header.key === 'From' || (!envelope.from && ['Reply-To', 'Sender'].includes(header.key))) {\n                this._convertAddresses(this._parseAddresses(header.value), list);\n                if (list.length && list[0]) {\n                    envelope.from = list[0].address;\n                }\n            } else if (['To', 'Cc', 'Bcc'].includes(header.key)) {\n                this._convertAddresses(this._parseAddresses(header.value), envelope.to);\n            }\n        });\n\n        envelope.to = envelope.to.map(to => to.address);\n\n        return envelope;\n    }\n\n    /**\n     * Returns Message-Id value. If it does not exist, then creates one\n     *\n     * @return {String} Message-Id value\n     */\n    messageId() {\n        let messageId = this.getHeader('Message-ID');\n        // You really should define your own Message-Id field!\n        if (!messageId) {\n            messageId = this._generateMessageId();\n            this.setHeader('Message-ID', messageId);\n        }\n        return messageId;\n    }\n\n    /**\n     * Sets pregenerated content that will be used as the output of this node\n     *\n     * @param {String|Buffer|Stream} Raw MIME contents\n     */\n    setRaw(raw) {\n        this._raw = raw;\n\n        if (this._raw && typeof this._raw.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this._raw.removeListener('error', this._contentErrorHandler);\n                this._raw = err;\n            };\n            this._raw.once('error', this._contentErrorHandler);\n        }\n\n        return this;\n    }\n\n    /////// PRIVATE METHODS\n\n    /**\n     * Detects and returns handle to a stream related with the content.\n     *\n     * @param {Mixed} content Node content\n     * @returns {Object} Stream object\n     */\n    _getStream(content) {\n        let contentStream;\n\n        if (content._resolvedValue) {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n\n            setImmediate(() => {\n                try {\n                    contentStream.end(content._resolvedValue);\n                } catch (err) {\n                    contentStream.emit('error', err);\n                }\n            });\n\n            return contentStream;\n        } else if (typeof content.pipe === 'function') {\n            // assume as stream\n            return content;\n        } else if (content && typeof content.path === 'string' && !content.href) {\n            if (this.disableFileAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('File access rejected for ' + content.path)));\n                return contentStream;\n            }\n            // read file\n            return fs.createReadStream(content.path);\n        } else if (content && typeof content.href === 'string') {\n            if (this.disableUrlAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('Url access rejected for ' + content.href)));\n                return contentStream;\n            }\n            // fetch URL\n            return nmfetch(content.href, { headers: content.httpHeaders });\n        } else {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n\n            setImmediate(() => {\n                try {\n                    contentStream.end(content || '');\n                } catch (err) {\n                    contentStream.emit('error', err);\n                }\n            });\n            return contentStream;\n        }\n    }\n\n    /**\n     * Parses addresses. Takes in a single address or an array or an\n     * array of address arrays (eg. To: [[first group], [second group],...])\n     *\n     * @param {Mixed} addresses Addresses to be parsed\n     * @return {Array} An array of address objects\n     */\n    _parseAddresses(addresses) {\n        return [].concat.apply(\n            [],\n            [].concat(addresses).map(address => {\n                // eslint-disable-line prefer-spread\n                if (address && address.address) {\n                    address.address = this._normalizeAddress(address.address);\n                    address.name = address.name || '';\n                    return [address];\n                }\n                return addressparser(address);\n            })\n        );\n    }\n\n    /**\n     * Normalizes a header key, uses Camel-Case form, except for uppercase MIME-\n     *\n     * @param {String} key Key to be normalized\n     * @return {String} key in Camel-Case form\n     */\n    _normalizeHeaderKey(key) {\n        key = (key || '')\n            .toString()\n            // no newlines in keys\n            .replace(/\\r?\\n|\\r/g, ' ')\n            .trim()\n            .toLowerCase()\n            // use uppercase words, except MIME\n            .replace(/^X-SMTPAPI$|^(MIME|DKIM|ARC|BIMI)\\b|^[a-z]|-(SPF|FBL|ID|MD5)$|-[a-z]/gi, c => c.toUpperCase())\n            // special case\n            .replace(/^Content-Features$/i, 'Content-features');\n\n        return key;\n    }\n\n    /**\n     * Checks if the content type is multipart and defines boundary if needed.\n     * Doesn't return anything, modifies object argument instead.\n     *\n     * @param {Object} structured Parsed header value for 'Content-Type' key\n     */\n    _handleContentType(structured) {\n        this.contentType = structured.value.trim().toLowerCase();\n\n        this.multipart = /^multipart\\//i.test(this.contentType) ? this.contentType.substr(this.contentType.indexOf('/') + 1) : false;\n\n        if (this.multipart) {\n            this.boundary = structured.params.boundary = structured.params.boundary || this.boundary || this._generateBoundary();\n        } else {\n            this.boundary = false;\n        }\n    }\n\n    /**\n     * Generates a multipart boundary value\n     *\n     * @return {String} boundary value\n     */\n    _generateBoundary() {\n        return this.rootNode.boundaryPrefix + '-' + this.rootNode.baseBoundary + '-Part_' + this._nodeId;\n    }\n\n    /**\n     * Encodes a header value for use in the generated rfc2822 email.\n     *\n     * @param {String} key Header key\n     * @param {String} value Header value\n     */\n    _encodeHeaderValue(key, value) {\n        key = this._normalizeHeaderKey(key);\n\n        switch (key) {\n            // Structured headers\n            case 'From':\n            case 'Sender':\n            case 'To':\n            case 'Cc':\n            case 'Bcc':\n            case 'Reply-To':\n                return this._convertAddresses(this._parseAddresses(value));\n\n            // values enclosed in <>\n            case 'Message-ID':\n            case 'In-Reply-To':\n            case 'Content-Id':\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n                if (value.charAt(0) !== '<') {\n                    value = '<' + value;\n                }\n\n                if (value.charAt(value.length - 1) !== '>') {\n                    value = value + '>';\n                }\n                return value;\n\n            // space separated list of values enclosed in <>\n            case 'References':\n                value = [].concat\n                    .apply(\n                        [],\n                        [].concat(value || '').map(elm => {\n                            // eslint-disable-line prefer-spread\n                            elm = (elm || '')\n                                .toString()\n                                .replace(/\\r?\\n|\\r/g, ' ')\n                                .trim();\n                            return elm.replace(/<[^>]*>/g, str => str.replace(/\\s/g, '')).split(/\\s+/);\n                        })\n                    )\n                    .map(elm => {\n                        if (elm.charAt(0) !== '<') {\n                            elm = '<' + elm;\n                        }\n                        if (elm.charAt(elm.length - 1) !== '>') {\n                            elm = elm + '>';\n                        }\n                        return elm;\n                    });\n\n                return value.join(' ').trim();\n\n            case 'Date':\n                if (Object.prototype.toString.call(value) === '[object Date]') {\n                    return value.toUTCString().replace(/GMT/, '+0000');\n                }\n\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                return this._encodeWords(value);\n\n            case 'Content-Type':\n            case 'Content-Disposition':\n                // if it includes a filename then it is already encoded\n                return (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n            default:\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                // encodeWords only encodes if needed, otherwise the original string is returned\n                return this._encodeWords(value);\n        }\n    }\n\n    /**\n     * Rebuilds address object using punycode and other adjustments\n     *\n     * @param {Array} addresses An array of address objects\n     * @param {Array} [uniqueList] An array to be populated with addresses\n     * @return {String} address string\n     */\n    _convertAddresses(addresses, uniqueList) {\n        let values = [];\n\n        uniqueList = uniqueList || [];\n\n        [].concat(addresses || []).forEach(address => {\n            if (address.address) {\n                address.address = this._normalizeAddress(address.address);\n\n                if (!address.name) {\n                    values.push(address.address.indexOf(' ') >= 0 ? `<${address.address}>` : `${address.address}`);\n                } else if (address.name) {\n                    values.push(`${this._encodeAddressName(address.name)} <${address.address}>`);\n                }\n\n                if (address.address) {\n                    if (!uniqueList.filter(a => a.address === address.address).length) {\n                        uniqueList.push(address);\n                    }\n                }\n            } else if (address.group) {\n                let groupListAddresses = (address.group.length ? this._convertAddresses(address.group, uniqueList) : '').trim();\n                values.push(`${this._encodeAddressName(address.name)}:${groupListAddresses};`);\n            }\n        });\n\n        return values.join(', ');\n    }\n\n    /**\n     * Normalizes an email address\n     *\n     * @param {Array} address An array of address objects\n     * @return {String} address string\n     */\n    _normalizeAddress(address) {\n        address = (address || '')\n            .toString()\n            .replace(/[\\x00-\\x1F<>]+/g, ' ') // remove unallowed characters\n            .trim();\n\n        let lastAt = address.lastIndexOf('@');\n        if (lastAt < 0) {\n            // Bare username\n            return address;\n        }\n\n        let user = address.substr(0, lastAt);\n        let domain = address.substr(lastAt + 1);\n\n        // Usernames are not touched and are kept as is even if these include unicode\n        // Domains are punycoded by default\n        // 'j\u00F5geva.ee' will be converted to 'xn--jgeva-dua.ee'\n        // non-unicode domains are left as is\n\n        let encodedDomain;\n\n        try {\n            encodedDomain = punycode.toASCII(domain.toLowerCase());\n        } catch (err) {\n            // keep as is?\n        }\n\n        if (user.indexOf(' ') >= 0) {\n            if (user.charAt(0) !== '\"') {\n                user = '\"' + user;\n            }\n            if (user.substr(-1) !== '\"') {\n                user = user + '\"';\n            }\n        }\n\n        return `${user}@${encodedDomain}`;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeAddressName(name) {\n        if (!/^[\\w ']*$/.test(name)) {\n            if (/^[\\x20-\\x7e]*$/.test(name)) {\n                return '\"' + name.replace(/([\\\\\"])/g, '\\\\$1') + '\"';\n            } else {\n                return mimeFuncs.encodeWord(name, this._getTextEncoding(name), 52);\n            }\n        }\n        return name;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeWords(value) {\n        // set encodeAll parameter to true even though it is against the recommendation of RFC2047,\n        // by default only words that include non-ascii should be converted into encoded words\n        // but some clients (eg. Zimbra) do not handle it properly and remove surrounding whitespace\n        return mimeFuncs.encodeWords(value, this._getTextEncoding(value), 52, true);\n    }\n\n    /**\n     * Detects best mime encoding for a text value\n     *\n     * @param {String} value Value to check for\n     * @return {String} either 'Q' or 'B'\n     */\n    _getTextEncoding(value) {\n        value = (value || '').toString();\n\n        let encoding = this.textEncoding;\n        let latinLen;\n        let nonLatinLen;\n\n        if (!encoding) {\n            // count latin alphabet symbols and 8-bit range symbols + control symbols\n            // if there are more latin characters, then use quoted-printable\n            // encoding, otherwise use base64\n            nonLatinLen = (value.match(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\u0080-\\uFFFF]/g) || []).length; // eslint-disable-line no-control-regex\n            latinLen = (value.match(/[a-z]/gi) || []).length;\n            // if there are more latin symbols than binary/unicode, then prefer Q, otherwise B\n            encoding = nonLatinLen < latinLen ? 'Q' : 'B';\n        }\n        return encoding;\n    }\n\n    /**\n     * Generates a message id\n     *\n     * @return {String} Random Message-ID value\n     */\n    _generateMessageId() {\n        return (\n            '<' +\n            [2, 2, 2, 6].reduce(\n                // crux to generate UUID-like random strings\n                (prev, len) => prev + '-' + crypto.randomBytes(len).toString('hex'),\n                crypto.randomBytes(4).toString('hex')\n            ) +\n            '@' +\n            // try to use the domain of the FROM address or fallback to server hostname\n            (this.getEnvelope().from || this.hostname || 'localhost').split('@').pop() +\n            '>'\n        );\n    }\n}\n\nmodule.exports = MimeNode;\n", "/* eslint no-undefined: 0 */\n\n'use strict';\n\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\n/**\n * Creates the object for composing a MimeNode instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\nclass MailComposer {\n    constructor(mail) {\n        this.mail = mail || {};\n        this.message = false;\n    }\n\n    /**\n     * Builds MimeNode instance\n     */\n    compile() {\n        this._alternatives = this.getAlternatives();\n        this._htmlNode = this._alternatives.filter(alternative => /^text\\/html\\b/i.test(alternative.contentType)).pop();\n        this._attachments = this.getAttachments(!!this._htmlNode);\n\n        this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n        this._useAlternative = this._alternatives.length > 1;\n        this._useMixed = this._attachments.attached.length > 1 || (this._alternatives.length && this._attachments.attached.length === 1);\n\n        // Compose MIME tree\n        if (this.mail.raw) {\n            this.message = new MimeNode('message/rfc822', { newline: this.mail.newline }).setRaw(this.mail.raw);\n        } else if (this._useMixed) {\n            this.message = this._createMixed();\n        } else if (this._useAlternative) {\n            this.message = this._createAlternative();\n        } else if (this._useRelated) {\n            this.message = this._createRelated();\n        } else {\n            this.message = this._createContentNode(\n                false,\n                []\n                    .concat(this._alternatives || [])\n                    .concat(this._attachments.attached || [])\n                    .shift() || {\n                    contentType: 'text/plain',\n                    content: ''\n                }\n            );\n        }\n\n        // Add custom headers\n        if (this.mail.headers) {\n            this.message.addHeader(this.mail.headers);\n        }\n\n        // Add headers to the root node, always overrides custom headers\n        ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(header => {\n            let key = header.replace(/-(\\w)/g, (o, c) => c.toUpperCase());\n            if (this.mail[key]) {\n                this.message.setHeader(header, this.mail[key]);\n            }\n        });\n\n        // Sets custom envelope\n        if (this.mail.envelope) {\n            this.message.setEnvelope(this.mail.envelope);\n        }\n\n        // ensure Message-Id value\n        this.message.messageId();\n\n        return this.message;\n    }\n\n    /**\n     * List all attachments. Resulting attachment objects can be used as input for MimeNode nodes\n     *\n     * @param {Boolean} findRelated If true separate related attachments from attached ones\n     * @returns {Object} An object of arrays (`related` and `attached`)\n     */\n    getAttachments(findRelated) {\n        let icalEvent, eventObject;\n        let attachments = [].concat(this.mail.attachments || []).map((attachment, i) => {\n            let data;\n            let isMessageNode = /^message\\//i.test(attachment.contentType);\n\n            if (/^data:/i.test(attachment.path || attachment.href)) {\n                attachment = this._processDataUrl(attachment);\n            }\n\n            data = {\n                contentType: attachment.contentType || mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n                contentDisposition: attachment.contentDisposition || (isMessageNode ? 'inline' : 'attachment'),\n                contentTransferEncoding: 'contentTransferEncoding' in attachment ? attachment.contentTransferEncoding : 'base64'\n            };\n\n            if (attachment.filename) {\n                data.filename = attachment.filename;\n            } else if (!isMessageNode && attachment.filename !== false) {\n                data.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                if (data.filename.indexOf('.') < 0) {\n                    data.filename += '.' + mimeFuncs.detectExtension(data.contentType);\n                }\n            }\n\n            if (/^https?:\\/\\//i.test(attachment.path)) {\n                attachment.href = attachment.path;\n                attachment.path = undefined;\n            }\n\n            if (attachment.cid) {\n                data.cid = attachment.cid;\n            }\n\n            if (attachment.raw) {\n                data.raw = attachment.raw;\n            } else if (attachment.path) {\n                data.content = {\n                    path: attachment.path\n                };\n            } else if (attachment.href) {\n                data.content = {\n                    href: attachment.href,\n                    httpHeaders: attachment.httpHeaders\n                };\n            } else {\n                data.content = attachment.content || '';\n            }\n\n            if (attachment.encoding) {\n                data.encoding = attachment.encoding;\n            }\n\n            if (attachment.headers) {\n                data.headers = attachment.headers;\n            }\n\n            return data;\n        });\n\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            eventObject.contentType = 'application/ics';\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n            eventObject.filename = eventObject.filename || 'invite.ics';\n            eventObject.headers['Content-Disposition'] = 'attachment';\n            eventObject.headers['Content-Transfer-Encoding'] = 'base64';\n        }\n\n        if (!findRelated) {\n            return {\n                attached: attachments.concat(eventObject || []),\n                related: []\n            };\n        } else {\n            return {\n                attached: attachments.filter(attachment => !attachment.cid).concat(eventObject || []),\n                related: attachments.filter(attachment => !!attachment.cid)\n            };\n        }\n    }\n\n    /**\n     * List alternatives. Resulting objects can be used as input for MimeNode nodes\n     *\n     * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n     */\n    getAlternatives() {\n        let alternatives = [],\n            text,\n            html,\n            watchHtml,\n            amp,\n            icalEvent,\n            eventObject;\n\n        if (this.mail.text) {\n            if (typeof this.mail.text === 'object' && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {\n                text = this.mail.text;\n            } else {\n                text = {\n                    content: this.mail.text\n                };\n            }\n            text.contentType = 'text/plain; charset=utf-8';\n        }\n\n        if (this.mail.watchHtml) {\n            if (\n                typeof this.mail.watchHtml === 'object' &&\n                (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)\n            ) {\n                watchHtml = this.mail.watchHtml;\n            } else {\n                watchHtml = {\n                    content: this.mail.watchHtml\n                };\n            }\n            watchHtml.contentType = 'text/watch-html; charset=utf-8';\n        }\n\n        if (this.mail.amp) {\n            if (typeof this.mail.amp === 'object' && (this.mail.amp.content || this.mail.amp.path || this.mail.amp.href || this.mail.amp.raw)) {\n                amp = this.mail.amp;\n            } else {\n                amp = {\n                    content: this.mail.amp\n                };\n            }\n            amp.contentType = 'text/x-amp-html; charset=utf-8';\n        }\n\n        // NB! when including attachments with a calendar alternative you might end up in a blank screen on some clients\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            if (eventObject.content && typeof eventObject.content === 'object') {\n                // we are going to have the same attachment twice, so mark this to be\n                // resolved just once\n                eventObject.content._resolve = true;\n            }\n\n            eventObject.filename = false;\n            eventObject.contentType = 'text/calendar; charset=utf-8; method=' + (eventObject.method || 'PUBLISH').toString().trim().toUpperCase();\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n        }\n\n        if (this.mail.html) {\n            if (typeof this.mail.html === 'object' && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {\n                html = this.mail.html;\n            } else {\n                html = {\n                    content: this.mail.html\n                };\n            }\n            html.contentType = 'text/html; charset=utf-8';\n        }\n\n        []\n            .concat(text || [])\n            .concat(watchHtml || [])\n            .concat(amp || [])\n            .concat(html || [])\n            .concat(eventObject || [])\n            .concat(this.mail.alternatives || [])\n            .forEach(alternative => {\n                let data;\n\n                if (/^data:/i.test(alternative.path || alternative.href)) {\n                    alternative = this._processDataUrl(alternative);\n                }\n\n                data = {\n                    contentType: alternative.contentType || mimeFuncs.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n                    contentTransferEncoding: alternative.contentTransferEncoding\n                };\n\n                if (alternative.filename) {\n                    data.filename = alternative.filename;\n                }\n\n                if (/^https?:\\/\\//i.test(alternative.path)) {\n                    alternative.href = alternative.path;\n                    alternative.path = undefined;\n                }\n\n                if (alternative.raw) {\n                    data.raw = alternative.raw;\n                } else if (alternative.path) {\n                    data.content = {\n                        path: alternative.path\n                    };\n                } else if (alternative.href) {\n                    data.content = {\n                        href: alternative.href\n                    };\n                } else {\n                    data.content = alternative.content || '';\n                }\n\n                if (alternative.encoding) {\n                    data.encoding = alternative.encoding;\n                }\n\n                if (alternative.headers) {\n                    data.headers = alternative.headers;\n                }\n\n                alternatives.push(data);\n            });\n\n        return alternatives;\n    }\n\n    /**\n     * Builds multipart/mixed node. It should always contain different type of elements on the same level\n     * eg. text + attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createMixed(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/mixed', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/mixed', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        if (this._useAlternative) {\n            this._createAlternative(node);\n        } else if (this._useRelated) {\n            this._createRelated(node);\n        }\n\n        []\n            .concat((!this._useAlternative && this._alternatives) || [])\n            .concat(this._attachments.attached || [])\n            .forEach(element => {\n                // if the element is a html node from related subpart then ignore it\n                if (!this._useRelated || element !== this._htmlNode) {\n                    this._createContentNode(node, element);\n                }\n            });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/alternative node. It should always contain same type of elements on the same level\n     * eg. text + html view of the same data\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createAlternative(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/alternative', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/alternative', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._alternatives.forEach(alternative => {\n            if (this._useRelated && this._htmlNode === alternative) {\n                this._createRelated(node);\n            } else {\n                this._createContentNode(node, alternative);\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/related node. It should always contain html node with related attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createRelated(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/related; type=\"text/html\"', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/related; type=\"text/html\"', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._createContentNode(node, this._htmlNode);\n\n        this._attachments.related.forEach(alternative => this._createContentNode(node, alternative));\n\n        return node;\n    }\n\n    /**\n     * Creates a regular node with contents\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @param {Object} element Node data\n     * @returns {Object} MimeNode node element\n     */\n    _createContentNode(parentNode, element) {\n        element = element || {};\n        element.content = element.content || '';\n\n        let node;\n        let encoding = (element.encoding || 'utf8')\n            .toString()\n            .toLowerCase()\n            .replace(/[-_\\s]/g, '');\n\n        if (!parentNode) {\n            node = new MimeNode(element.contentType, {\n                filename: element.filename,\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild(element.contentType, {\n                filename: element.filename,\n                textEncoding: this.mail.textEncoding,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        // add custom headers\n        if (element.headers) {\n            node.addHeader(element.headers);\n        }\n\n        if (element.cid) {\n            node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n        }\n\n        if (element.contentTransferEncoding) {\n            node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n        } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n            node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n        }\n\n        if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n            node.setHeader('Content-Disposition', element.contentDisposition || (element.cid ? 'inline' : 'attachment'));\n        }\n\n        if (typeof element.content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n            element.content = Buffer.from(element.content, encoding);\n        }\n\n        // prefer pregenerated raw content\n        if (element.raw) {\n            node.setRaw(element.raw);\n        } else {\n            node.setContent(element.content);\n        }\n\n        return node;\n    }\n\n    /**\n     * Parses data uri and converts it to a Buffer\n     *\n     * @param {Object} element Content element\n     * @return {Object} Parsed element\n     */\n    _processDataUrl(element) {\n        let parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n        if (!parts) {\n            return element;\n        }\n\n        element.content = /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2]));\n\n        if ('path' in element) {\n            element.path = false;\n        }\n\n        if ('href' in element) {\n            element.href = false;\n        }\n\n        parts[1].split(';').forEach(item => {\n            if (/^\\w+\\/[^/]+$/i.test(item)) {\n                element.contentType = element.contentType || item.toLowerCase();\n            }\n        });\n\n        return element;\n    }\n}\n\nmodule.exports = MailComposer;\n", "'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * MessageParser instance is a transform stream that separates message headers\n * from the rest of the body. Headers are emitted with the 'headers' event. Message\n * body is passed on as the resulting stream.\n */\nclass MessageParser extends Transform {\n    constructor(options) {\n        super(options);\n        this.lastBytes = Buffer.alloc(4);\n        this.headersParsed = false;\n        this.headerBytes = 0;\n        this.headerChunks = [];\n        this.rawHeaders = false;\n        this.bodySize = 0;\n    }\n\n    /**\n     * Keeps count of the last 4 bytes in order to detect line breaks on chunk boundaries\n     *\n     * @param {Buffer} data Next data chunk from the stream\n     */\n    updateLastBytes(data) {\n        let lblen = this.lastBytes.length;\n        let nblen = Math.min(data.length, lblen);\n\n        // shift existing bytes\n        for (let i = 0, len = lblen - nblen; i < len; i++) {\n            this.lastBytes[i] = this.lastBytes[i + nblen];\n        }\n\n        // add new bytes\n        for (let i = 1; i <= nblen; i++) {\n            this.lastBytes[lblen - i] = data[data.length - i];\n        }\n    }\n\n    /**\n     * Finds and removes message headers from the remaining body. We want to keep\n     * headers separated until final delivery to be able to modify these\n     *\n     * @param {Buffer} data Next chunk of data\n     * @return {Boolean} Returns true if headers are already found or false otherwise\n     */\n    checkHeaders(data) {\n        if (this.headersParsed) {\n            return true;\n        }\n\n        let lblen = this.lastBytes.length;\n        let headerPos = 0;\n        this.curLinePos = 0;\n        for (let i = 0, len = this.lastBytes.length + data.length; i < len; i++) {\n            let chr;\n            if (i < lblen) {\n                chr = this.lastBytes[i];\n            } else {\n                chr = data[i - lblen];\n            }\n            if (chr === 0x0a && i) {\n                let pr1 = i - 1 < lblen ? this.lastBytes[i - 1] : data[i - 1 - lblen];\n                let pr2 = i > 1 ? (i - 2 < lblen ? this.lastBytes[i - 2] : data[i - 2 - lblen]) : false;\n                if (pr1 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                } else if (pr1 === 0x0d && pr2 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                }\n            }\n        }\n\n        if (this.headersParsed) {\n            this.headerChunks.push(data.slice(0, headerPos));\n            this.rawHeaders = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.headerChunks = null;\n            this.emit('headers', this.parseHeaders());\n            if (data.length - 1 > headerPos) {\n                let chunk = data.slice(headerPos);\n                this.bodySize += chunk.length;\n                // this would be the first chunk of data sent downstream\n                setImmediate(() => this.push(chunk));\n            }\n            return false;\n        } else {\n            this.headerBytes += data.length;\n            this.headerChunks.push(data);\n        }\n\n        // store last 4 bytes to catch header break\n        this.updateLastBytes(data);\n\n        return false;\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        let headersFound;\n\n        try {\n            headersFound = this.checkHeaders(chunk);\n        } catch (E) {\n            return callback(E);\n        }\n\n        if (headersFound) {\n            this.bodySize += chunk.length;\n            this.push(chunk);\n        }\n\n        setImmediate(callback);\n    }\n\n    _flush(callback) {\n        if (this.headerChunks) {\n            let chunk = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.bodySize += chunk.length;\n            this.push(chunk);\n            this.headerChunks = null;\n        }\n        callback();\n    }\n\n    parseHeaders() {\n        let lines = (this.rawHeaders || '').toString().split(/\\r?\\n/);\n        for (let i = lines.length - 1; i > 0; i--) {\n            if (/^\\s/.test(lines[i])) {\n                lines[i - 1] += '\\n' + lines[i];\n                lines.splice(i, 1);\n            }\n        }\n        return lines\n            .filter(line => line.trim())\n            .map(line => ({\n                key: line.substr(0, line.indexOf(':')).trim().toLowerCase(),\n                line\n            }));\n    }\n}\n\nmodule.exports = MessageParser;\n", "'use strict';\n\n// streams through a message body and calculates relaxed body hash\n\nconst Transform = require('stream').Transform;\nconst crypto = require('crypto');\n\nclass RelaxedBody extends Transform {\n    constructor(options) {\n        super();\n        options = options || {};\n        this.chunkBuffer = [];\n        this.chunkBufferLen = 0;\n        this.bodyHash = crypto.createHash(options.hashAlgo || 'sha1');\n        this.remainder = '';\n        this.byteLength = 0;\n\n        this.debug = options.debug;\n        this._debugBody = options.debug ? [] : false;\n    }\n\n    updateHash(chunk) {\n        let bodyStr;\n\n        // find next remainder\n        let nextRemainder = '';\n\n        // This crux finds and removes the spaces from the last line and the newline characters after the last non-empty line\n        // If we get another chunk that does not match this description then we can restore the previously processed data\n        let state = 'file';\n        for (let i = chunk.length - 1; i >= 0; i--) {\n            let c = chunk[i];\n\n            if (state === 'file' && (c === 0x0a || c === 0x0d)) {\n                // do nothing, found \\n or \\r at the end of chunk, stil end of file\n            } else if (state === 'file' && (c === 0x09 || c === 0x20)) {\n                // switch to line ending mode, this is the last non-empty line\n                state = 'line';\n            } else if (state === 'line' && (c === 0x09 || c === 0x20)) {\n                // do nothing, found ' ' or \\t at the end of line, keep processing the last non-empty line\n            } else if (state === 'file' || state === 'line') {\n                // non line/file ending character found, switch to body mode\n                state = 'body';\n                if (i === chunk.length - 1) {\n                    // final char is not part of line end or file end, so do nothing\n                    break;\n                }\n            }\n\n            if (i === 0) {\n                // reached to the beginning of the chunk, check if it is still about the ending\n                // and if the remainder also matches\n                if (\n                    (state === 'file' && (!this.remainder || /[\\r\\n]$/.test(this.remainder))) ||\n                    (state === 'line' && (!this.remainder || /[ \\t]$/.test(this.remainder)))\n                ) {\n                    // keep everything\n                    this.remainder += chunk.toString('binary');\n                    return;\n                } else if (state === 'line' || state === 'file') {\n                    // process existing remainder as normal line but store the current chunk\n                    nextRemainder = chunk.toString('binary');\n                    chunk = false;\n                    break;\n                }\n            }\n\n            if (state !== 'body') {\n                continue;\n            }\n\n            // reached first non ending byte\n            nextRemainder = chunk.slice(i + 1).toString('binary');\n            chunk = chunk.slice(0, i + 1);\n            break;\n        }\n\n        let needsFixing = !!this.remainder;\n        if (chunk && !needsFixing) {\n            // check if we even need to change anything\n            for (let i = 0, len = chunk.length; i < len; i++) {\n                if (i && chunk[i] === 0x0a && chunk[i - 1] !== 0x0d) {\n                    // missing \\r before \\n\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x0d && chunk[i - 1] === 0x20) {\n                    // trailing WSP found\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x20 && chunk[i - 1] === 0x20) {\n                    // multiple spaces found, needs to be replaced with just one\n                    needsFixing = true;\n                    break;\n                } else if (chunk[i] === 0x09) {\n                    // TAB found, needs to be replaced with a space\n                    needsFixing = true;\n                    break;\n                }\n            }\n        }\n\n        if (needsFixing) {\n            bodyStr = this.remainder + (chunk ? chunk.toString('binary') : '');\n            this.remainder = nextRemainder;\n            bodyStr = bodyStr\n                .replace(/\\r?\\n/g, '\\n') // use js line endings\n                .replace(/[ \\t]*$/gm, '') // remove line endings, rtrim\n                .replace(/[ \\t]+/gm, ' ') // single spaces\n                .replace(/\\n/g, '\\r\\n'); // restore rfc822 line endings\n            chunk = Buffer.from(bodyStr, 'binary');\n        } else if (nextRemainder) {\n            this.remainder = nextRemainder;\n        }\n\n        if (this.debug) {\n            this._debugBody.push(chunk);\n        }\n        this.bodyHash.update(chunk);\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        this.updateHash(chunk);\n\n        this.byteLength += chunk.length;\n        this.push(chunk);\n        callback();\n    }\n\n    _flush(callback) {\n        // generate final hash and emit it\n        if (/[\\r\\n]$/.test(this.remainder) && this.byteLength > 2) {\n            // add terminating line end\n            this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n        if (!this.byteLength) {\n            // emit empty line buffer to keep the stream flowing\n            this.push(Buffer.from('\\r\\n'));\n            // this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n\n        this.emit('hash', this.bodyHash.digest('base64'), this.debug ? Buffer.concat(this._debugBody) : false);\n        callback();\n    }\n}\n\nmodule.exports = RelaxedBody;\n", "'use strict';\n\nconst punycode = require('punycode');\nconst mimeFuncs = require('../mime-funcs');\nconst crypto = require('crypto');\n\n/**\n * Returns DKIM signature header line\n *\n * @param {Object} headers Parsed headers object from MessageParser\n * @param {String} bodyHash Base64 encoded hash of the message\n * @param {Object} options DKIM options\n * @param {String} options.domainName Domain name to be signed for\n * @param {String} options.keySelector DKIM key selector to use\n * @param {String} options.privateKey DKIM private key to use\n * @return {String} Complete header line\n */\n\nmodule.exports = (headers, hashAlgo, bodyHash, options) => {\n    options = options || {};\n\n    // all listed fields from RFC4871 #5.5\n    let defaultFieldNames =\n        'From:Sender:Reply-To:Subject:Date:Message-ID:To:' +\n        'Cc:MIME-Version:Content-Type:Content-Transfer-Encoding:Content-ID:' +\n        'Content-Description:Resent-Date:Resent-From:Resent-Sender:' +\n        'Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:' +\n        'List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:' +\n        'List-Owner:List-Archive';\n\n    let fieldNames = options.headerFieldNames || defaultFieldNames;\n\n    let canonicalizedHeaderData = relaxedHeaders(headers, fieldNames, options.skipFields);\n    let dkimHeader = generateDKIMHeader(options.domainName, options.keySelector, canonicalizedHeaderData.fieldNames, hashAlgo, bodyHash);\n\n    let signer, signature;\n\n    canonicalizedHeaderData.headers += 'dkim-signature:' + relaxedHeaderLine(dkimHeader);\n\n    signer = crypto.createSign(('rsa-' + hashAlgo).toUpperCase());\n    signer.update(canonicalizedHeaderData.headers);\n    try {\n        signature = signer.sign(options.privateKey, 'base64');\n    } catch (E) {\n        return false;\n    }\n\n    return dkimHeader + signature.replace(/(^.{73}|.{75}(?!\\r?\\n|\\r))/g, '$&\\r\\n ').trim();\n};\n\nmodule.exports.relaxedHeaders = relaxedHeaders;\n\nfunction generateDKIMHeader(domainName, keySelector, fieldNames, hashAlgo, bodyHash) {\n    let dkim = [\n        'v=1',\n        'a=rsa-' + hashAlgo,\n        'c=relaxed/relaxed',\n        'd=' + punycode.toASCII(domainName),\n        'q=dns/txt',\n        's=' + keySelector,\n        'bh=' + bodyHash,\n        'h=' + fieldNames\n    ].join('; ');\n\n    return mimeFuncs.foldLines('DKIM-Signature: ' + dkim, 76) + ';\\r\\n b=';\n}\n\nfunction relaxedHeaders(headers, fieldNames, skipFields) {\n    let includedFields = new Set();\n    let skip = new Set();\n    let headerFields = new Map();\n\n    (skipFields || '')\n        .toLowerCase()\n        .split(':')\n        .forEach(field => {\n            skip.add(field.trim());\n        });\n\n    (fieldNames || '')\n        .toLowerCase()\n        .split(':')\n        .filter(field => !skip.has(field.trim()))\n        .forEach(field => {\n            includedFields.add(field.trim());\n        });\n\n    for (let i = headers.length - 1; i >= 0; i--) {\n        let line = headers[i];\n        // only include the first value from bottom to top\n        if (includedFields.has(line.key) && !headerFields.has(line.key)) {\n            headerFields.set(line.key, relaxedHeaderLine(line.line));\n        }\n    }\n\n    let headersList = [];\n    let fields = [];\n    includedFields.forEach(field => {\n        if (headerFields.has(field)) {\n            fields.push(field);\n            headersList.push(field + ':' + headerFields.get(field));\n        }\n    });\n\n    return {\n        headers: headersList.join('\\r\\n') + '\\r\\n',\n        fieldNames: fields.join(':')\n    };\n}\n\nfunction relaxedHeaderLine(line) {\n    return line\n        .substr(line.indexOf(':') + 1)\n        .replace(/\\r?\\n/g, '')\n        .replace(/\\s+/g, ' ')\n        .trim();\n}\n", "'use strict';\n\n// FIXME:\n// replace this Transform mess with a method that pipes input argument to output argument\n\nconst MessageParser = require('./message-parser');\nconst RelaxedBody = require('./relaxed-body');\nconst sign = require('./sign');\nconst PassThrough = require('stream').PassThrough;\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\n\nconst DKIM_ALGO = 'sha256';\nconst MAX_MESSAGE_SIZE = 128 * 1024; // buffer messages larger than this to disk\n\n/*\n// Usage:\n\nlet dkim = new DKIM({\n    domainName: 'example.com',\n    keySelector: 'key-selector',\n    privateKey,\n    cacheDir: '/tmp'\n});\ndkim.sign(input).pipe(process.stdout);\n\n// Where inputStream is a rfc822 message (either a stream, string or Buffer)\n// and outputStream is a DKIM signed rfc822 message\n*/\n\nclass DKIMSigner {\n    constructor(options, keys, input, output) {\n        this.options = options || {};\n        this.keys = keys;\n\n        this.cacheTreshold = Number(this.options.cacheTreshold) || MAX_MESSAGE_SIZE;\n        this.hashAlgo = this.options.hashAlgo || DKIM_ALGO;\n\n        this.cacheDir = this.options.cacheDir || false;\n\n        this.chunks = [];\n        this.chunklen = 0;\n        this.readPos = 0;\n        this.cachePath = this.cacheDir ? path.join(this.cacheDir, 'message.' + Date.now() + '-' + crypto.randomBytes(14).toString('hex')) : false;\n        this.cache = false;\n\n        this.headers = false;\n        this.bodyHash = false;\n        this.parser = false;\n        this.relaxedBody = false;\n\n        this.input = input;\n        this.output = output;\n        this.output.usingCache = false;\n\n        this.hasErrored = false;\n\n        this.input.on('error', err => {\n            this.hasErrored = true;\n            this.cleanup();\n            output.emit('error', err);\n        });\n    }\n\n    cleanup() {\n        if (!this.cache || !this.cachePath) {\n            return;\n        }\n        fs.unlink(this.cachePath, () => false);\n    }\n\n    createReadCache() {\n        // pipe remainings to cache file\n        this.cache = fs.createReadStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.cleanup();\n        });\n        this.cache.pipe(this.output);\n    }\n\n    sendNextChunk() {\n        if (this.hasErrored) {\n            return;\n        }\n\n        if (this.readPos >= this.chunks.length) {\n            if (!this.cache) {\n                return this.output.end();\n            }\n            return this.createReadCache();\n        }\n        let chunk = this.chunks[this.readPos++];\n        if (this.output.write(chunk) === false) {\n            return this.output.once('drain', () => {\n                this.sendNextChunk();\n            });\n        }\n        setImmediate(() => this.sendNextChunk());\n    }\n\n    sendSignedOutput() {\n        let keyPos = 0;\n        let signNextKey = () => {\n            if (keyPos >= this.keys.length) {\n                this.output.write(this.parser.rawHeaders);\n                return setImmediate(() => this.sendNextChunk());\n            }\n            let key = this.keys[keyPos++];\n            let dkimField = sign(this.headers, this.hashAlgo, this.bodyHash, {\n                domainName: key.domainName,\n                keySelector: key.keySelector,\n                privateKey: key.privateKey,\n                headerFieldNames: this.options.headerFieldNames,\n                skipFields: this.options.skipFields\n            });\n            if (dkimField) {\n                this.output.write(Buffer.from(dkimField + '\\r\\n'));\n            }\n            return setImmediate(signNextKey);\n        };\n\n        if (this.bodyHash && this.headers) {\n            return signNextKey();\n        }\n\n        this.output.write(this.parser.rawHeaders);\n        this.sendNextChunk();\n    }\n\n    createWriteCache() {\n        this.output.usingCache = true;\n        // pipe remainings to cache file\n        this.cache = fs.createWriteStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            // drain input\n            this.relaxedBody.unpipe(this.cache);\n            this.relaxedBody.on('readable', () => {\n                while (this.relaxedBody.read() !== null) {\n                    // do nothing\n                }\n            });\n            this.hasErrored = true;\n            // emit error\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.sendSignedOutput();\n        });\n        this.relaxedBody.removeAllListeners('readable');\n        this.relaxedBody.pipe(this.cache);\n    }\n\n    signStream() {\n        this.parser = new MessageParser();\n        this.relaxedBody = new RelaxedBody({\n            hashAlgo: this.hashAlgo\n        });\n\n        this.parser.on('headers', value => {\n            this.headers = value;\n        });\n\n        this.relaxedBody.on('hash', value => {\n            this.bodyHash = value;\n        });\n\n        this.relaxedBody.on('readable', () => {\n            let chunk;\n            if (this.cache) {\n                return;\n            }\n            while ((chunk = this.relaxedBody.read()) !== null) {\n                this.chunks.push(chunk);\n                this.chunklen += chunk.length;\n                if (this.chunklen >= this.cacheTreshold && this.cachePath) {\n                    return this.createWriteCache();\n                }\n            }\n        });\n\n        this.relaxedBody.on('end', () => {\n            if (this.cache) {\n                return;\n            }\n            this.sendSignedOutput();\n        });\n\n        this.parser.pipe(this.relaxedBody);\n        setImmediate(() => this.input.pipe(this.parser));\n    }\n}\n\nclass DKIM {\n    constructor(options) {\n        this.options = options || {};\n        this.keys = [].concat(\n            this.options.keys || {\n                domainName: options.domainName,\n                keySelector: options.keySelector,\n                privateKey: options.privateKey\n            }\n        );\n    }\n\n    sign(input, extraOptions) {\n        let output = new PassThrough();\n        let inputStream = input;\n        let writeValue = false;\n\n        if (Buffer.isBuffer(input)) {\n            writeValue = input;\n            inputStream = new PassThrough();\n        } else if (typeof input === 'string') {\n            writeValue = Buffer.from(input);\n            inputStream = new PassThrough();\n        }\n\n        let options = this.options;\n        if (extraOptions && Object.keys(extraOptions).length) {\n            options = {};\n            Object.keys(this.options || {}).forEach(key => {\n                options[key] = this.options[key];\n            });\n            Object.keys(extraOptions || {}).forEach(key => {\n                if (!(key in options)) {\n                    options[key] = extraOptions[key];\n                }\n            });\n        }\n\n        let signer = new DKIMSigner(options, this.keys, inputStream, output);\n        setImmediate(() => {\n            signer.signStream();\n            if (writeValue) {\n                setImmediate(() => {\n                    inputStream.end(writeValue);\n                });\n            }\n        });\n\n        return output;\n    }\n}\n\nmodule.exports = DKIM;\n", "'use strict';\n\n/**\n * Minimal HTTP/S proxy client\n */\n\nconst net = require('net');\nconst tls = require('tls');\nconst urllib = require('url');\n\n/**\n * Establishes proxied connection to destinationPort\n *\n * httpProxyClient(\"http://localhost:3128/\", 80, \"google.com\", function(err, socket){\n *     socket.write(\"GET / HTTP/1.0\\r\\n\\r\\n\");\n * });\n *\n * @param {String} proxyUrl proxy configuration, etg \"http://proxy.host:3128/\"\n * @param {Number} destinationPort Port to open in destination host\n * @param {String} destinationHost Destination hostname\n * @param {Function} callback Callback to run with the rocket object once connection is established\n */\nfunction httpProxyClient(proxyUrl, destinationPort, destinationHost, callback) {\n    let proxy = urllib.parse(proxyUrl);\n\n    // create a socket connection to the proxy server\n    let options;\n    let connect;\n    let socket;\n\n    options = {\n        host: proxy.hostname,\n        port: Number(proxy.port) ? Number(proxy.port) : proxy.protocol === 'https:' ? 443 : 80\n    };\n\n    if (proxy.protocol === 'https:') {\n        // we can use untrusted proxies as long as we verify actual SMTP certificates\n        options.rejectUnauthorized = false;\n        connect = tls.connect.bind(tls);\n    } else {\n        connect = net.connect.bind(net);\n    }\n\n    // Error harness for initial connection. Once connection is established, the responsibility\n    // to handle errors is passed to whoever uses this socket\n    let finished = false;\n    let tempSocketErr = err => {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        try {\n            socket.destroy();\n        } catch (E) {\n            // ignore\n        }\n        callback(err);\n    };\n\n    let timeoutErr = () => {\n        let err = new Error('Proxy socket timed out');\n        err.code = 'ETIMEDOUT';\n        tempSocketErr(err);\n    };\n\n    socket = connect(options, () => {\n        if (finished) {\n            return;\n        }\n\n        let reqHeaders = {\n            Host: destinationHost + ':' + destinationPort,\n            Connection: 'close'\n        };\n        if (proxy.auth) {\n            reqHeaders['Proxy-Authorization'] = 'Basic ' + Buffer.from(proxy.auth).toString('base64');\n        }\n\n        socket.write(\n            // HTTP method\n            'CONNECT ' +\n                destinationHost +\n                ':' +\n                destinationPort +\n                ' HTTP/1.1\\r\\n' +\n                // HTTP request headers\n                Object.keys(reqHeaders)\n                    .map(key => key + ': ' + reqHeaders[key])\n                    .join('\\r\\n') +\n                // End request\n                '\\r\\n\\r\\n'\n        );\n\n        let headers = '';\n        let onSocketData = chunk => {\n            let match;\n            let remainder;\n\n            if (finished) {\n                return;\n            }\n\n            headers += chunk.toString('binary');\n            if ((match = headers.match(/\\r\\n\\r\\n/))) {\n                socket.removeListener('data', onSocketData);\n\n                remainder = headers.substr(match.index + match[0].length);\n                headers = headers.substr(0, match.index);\n                if (remainder) {\n                    socket.unshift(Buffer.from(remainder, 'binary'));\n                }\n\n                // proxy connection is now established\n                finished = true;\n\n                // check response code\n                match = headers.match(/^HTTP\\/\\d+\\.\\d+ (\\d+)/i);\n                if (!match || (match[1] || '').charAt(0) !== '2') {\n                    try {\n                        socket.destroy();\n                    } catch (E) {\n                        // ignore\n                    }\n                    return callback(new Error('Invalid response from proxy' + ((match && ': ' + match[1]) || '')));\n                }\n\n                socket.removeListener('error', tempSocketErr);\n                socket.removeListener('timeout', timeoutErr);\n                socket.setTimeout(0);\n\n                return callback(null, socket);\n            }\n        };\n        socket.on('data', onSocketData);\n    });\n\n    socket.setTimeout(httpProxyClient.timeout || 30 * 1000);\n    socket.on('timeout', timeoutErr);\n\n    socket.once('error', tempSocketErr);\n}\n\nmodule.exports = httpProxyClient;\n", "'use strict';\n\nconst shared = require('../shared');\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\nclass MailMessage {\n    constructor(mailer, data) {\n        this.mailer = mailer;\n        this.data = {};\n        this.message = null;\n\n        data = data || {};\n        let options = mailer.options || {};\n        let defaults = mailer._defaults || {};\n\n        Object.keys(data).forEach(key => {\n            this.data[key] = data[key];\n        });\n\n        this.data.headers = this.data.headers || {};\n\n        // apply defaults\n        Object.keys(defaults).forEach(key => {\n            if (!(key in this.data)) {\n                this.data[key] = defaults[key];\n            } else if (key === 'headers') {\n                // headers is a special case. Allow setting individual default headers\n                Object.keys(defaults.headers).forEach(key => {\n                    if (!(key in this.data.headers)) {\n                        this.data.headers[key] = defaults.headers[key];\n                    }\n                });\n            }\n        });\n\n        // force specific keys from transporter options\n        ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(key => {\n            if (key in options) {\n                this.data[key] = options[key];\n            }\n        });\n    }\n\n    resolveContent(...args) {\n        return shared.resolveContent(...args);\n    }\n\n    resolveAll(callback) {\n        let keys = [\n            [this.data, 'html'],\n            [this.data, 'text'],\n            [this.data, 'watchHtml'],\n            [this.data, 'amp'],\n            [this.data, 'icalEvent']\n        ];\n\n        if (this.data.alternatives && this.data.alternatives.length) {\n            this.data.alternatives.forEach((alternative, i) => {\n                keys.push([this.data.alternatives, i]);\n            });\n        }\n\n        if (this.data.attachments && this.data.attachments.length) {\n            this.data.attachments.forEach((attachment, i) => {\n                if (!attachment.filename) {\n                    attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                    if (attachment.filename.indexOf('.') < 0) {\n                        attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n                    }\n                }\n\n                if (!attachment.contentType) {\n                    attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n                }\n\n                keys.push([this.data.attachments, i]);\n            });\n        }\n\n        let mimeNode = new MimeNode();\n\n        let addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n\n        addressKeys.forEach(address => {\n            let value;\n            if (this.message) {\n                value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n            } else if (this.data[address]) {\n                value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);\n            }\n            if (value && value.length) {\n                this.data[address] = value;\n            } else if (address in this.data) {\n                this.data[address] = null;\n            }\n        });\n\n        let singleKeys = ['from', 'sender'];\n        singleKeys.forEach(address => {\n            if (this.data[address]) {\n                this.data[address] = this.data[address].shift();\n            }\n        });\n\n        let pos = 0;\n        let resolveNext = () => {\n            if (pos >= keys.length) {\n                return callback(null, this.data);\n            }\n            let args = keys[pos++];\n            if (!args[0] || !args[0][args[1]]) {\n                return resolveNext();\n            }\n            shared.resolveContent(...args, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                let node = {\n                    content: value\n                };\n                if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n                    Object.keys(args[0][args[1]]).forEach(key => {\n                        if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                            node[key] = args[0][args[1]][key];\n                        }\n                    });\n                }\n\n                args[0][args[1]] = node;\n                resolveNext();\n            });\n        };\n\n        setImmediate(() => resolveNext());\n    }\n\n    normalize(callback) {\n        let envelope = this.data.envelope || this.message.getEnvelope();\n        let messageId = this.message.messageId();\n\n        this.resolveAll((err, data) => {\n            if (err) {\n                return callback(err);\n            }\n\n            data.envelope = envelope;\n            data.messageId = messageId;\n\n            ['html', 'text', 'watchHtml', 'amp'].forEach(key => {\n                if (data[key] && data[key].content) {\n                    if (typeof data[key].content === 'string') {\n                        data[key] = data[key].content;\n                    } else if (Buffer.isBuffer(data[key].content)) {\n                        data[key] = data[key].content.toString();\n                    }\n                }\n            });\n\n            if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n                data.icalEvent.content = data.icalEvent.content.toString('base64');\n                data.icalEvent.encoding = 'base64';\n            }\n\n            if (data.alternatives && data.alternatives.length) {\n                data.alternatives.forEach(alternative => {\n                    if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n                        alternative.content = alternative.content.toString('base64');\n                        alternative.encoding = 'base64';\n                    }\n                });\n            }\n\n            if (data.attachments && data.attachments.length) {\n                data.attachments.forEach(attachment => {\n                    if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n                        attachment.content = attachment.content.toString('base64');\n                        attachment.encoding = 'base64';\n                    }\n                });\n            }\n\n            data.normalizedHeaders = {};\n            Object.keys(data.headers || {}).forEach(key => {\n                let value = [].concat(data.headers[key] || []).shift();\n                value = (value && value.value) || value;\n                if (value) {\n                    if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n                        value = this.message._encodeHeaderValue(key, value);\n                    }\n                    data.normalizedHeaders[key] = value;\n                }\n            });\n\n            if (data.list && typeof data.list === 'object') {\n                let listHeaders = this._getListHeaders(data.list);\n                listHeaders.forEach(entry => {\n                    data.normalizedHeaders[entry.key] = entry.value.map(val => (val && val.value) || val).join(', ');\n                });\n            }\n\n            if (data.references) {\n                data.normalizedHeaders.references = this.message._encodeHeaderValue('references', data.references);\n            }\n\n            if (data.inReplyTo) {\n                data.normalizedHeaders['in-reply-to'] = this.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n            }\n\n            return callback(null, data);\n        });\n    }\n\n    setMailerHeader() {\n        if (!this.message || !this.data.xMailer) {\n            return;\n        }\n        this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n\n    setPriorityHeaders() {\n        if (!this.message || !this.data.priority) {\n            return;\n        }\n        switch ((this.data.priority || '').toString().toLowerCase()) {\n            case 'high':\n                this.message.setHeader('X-Priority', '1 (Highest)');\n                this.message.setHeader('X-MSMail-Priority', 'High');\n                this.message.setHeader('Importance', 'High');\n                break;\n            case 'low':\n                this.message.setHeader('X-Priority', '5 (Lowest)');\n                this.message.setHeader('X-MSMail-Priority', 'Low');\n                this.message.setHeader('Importance', 'Low');\n                break;\n            default:\n            // do not add anything, since all messages are 'Normal' by default\n        }\n    }\n\n    setListHeaders() {\n        if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n            return;\n        }\n        // add optional List-* headers\n        if (this.data.list && typeof this.data.list === 'object') {\n            this._getListHeaders(this.data.list).forEach(listHeader => {\n                listHeader.value.forEach(value => {\n                    this.message.addHeader(listHeader.key, value);\n                });\n            });\n        }\n    }\n\n    _getListHeaders(listData) {\n        // make sure an url looks like <protocol:url>\n        return Object.keys(listData).map(key => ({\n            key: 'list-' + key.toLowerCase().trim(),\n            value: [].concat(listData[key] || []).map(value => ({\n                prepared: true,\n                foldLines: true,\n                value: []\n                    .concat(value || [])\n                    .map(value => {\n                        if (typeof value === 'string') {\n                            value = {\n                                url: value\n                            };\n                        }\n\n                        if (value && value.url) {\n                            if (key.toLowerCase().trim() === 'id') {\n                                // List-ID: \"comment\" <domain>\n                                let comment = value.comment || '';\n                                if (mimeFuncs.isPlainText(comment)) {\n                                    comment = '\"' + comment + '\"';\n                                } else {\n                                    comment = mimeFuncs.encodeWord(comment);\n                                }\n\n                                return (value.comment ? comment + ' ' : '') + this._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                            }\n\n                            // List-*: <http://domain> (comment)\n                            let comment = value.comment || '';\n                            if (!mimeFuncs.isPlainText(comment)) {\n                                comment = mimeFuncs.encodeWord(comment);\n                            }\n\n                            return this._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                        }\n\n                        return '';\n                    })\n                    .filter(value => value)\n                    .join(', ')\n            }))\n        }));\n    }\n\n    _formatListUrl(url) {\n        url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n        if (/^(https?|mailto|ftp):/.test(url)) {\n            return '<' + url + '>';\n        }\n        if (/^[^@]+@[^@]+$/.test(url)) {\n            return '<mailto:' + url + '>';\n        }\n\n        return '<http://' + url + '>';\n    }\n}\n\nmodule.exports = MailMessage;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback = null) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                if (!mail.data.attachments) {\n                    mail.data.attachments = [];\n                }\n                if (!Array.isArray(mail.data.attachments)) {\n                    mail.data.attachments = [].concat(mail.data.attachments || []);\n                }\n                mail.data.attachments.push({\n                    path: dataUri,\n                    cid,\n                    filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                });\n                return prefix + 'cid:' + cid;\n            });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n", "'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Escapes dots in the beginning of lines. Ends the stream with <CR><LF>.<CR><LF>\n * Also makes sure that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass DataStream extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this._curLine = '';\n\n        this.inByteCount = 0;\n        this.outByteCount = 0;\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let chunks = [];\n        let chunklen = 0;\n        let i,\n            len,\n            lastPos = 0;\n        let buf;\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk);\n        }\n\n        this.inByteCount += chunk.length;\n\n        for (i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x2e) {\n                // .\n                if ((i && chunk[i - 1] === 0x0a) || (!i && (!this.lastByte || this.lastByte === 0x0a))) {\n                    buf = chunk.slice(lastPos, i + 1);\n                    chunks.push(buf);\n                    chunks.push(Buffer.from('.'));\n                    chunklen += buf.length + 1;\n                    lastPos = i + 1;\n                }\n            } else if (chunk[i] === 0x0a) {\n                // .\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        chunks.push(buf);\n                        chunklen += buf.length + 2;\n                    } else {\n                        chunklen += 2;\n                    }\n                    chunks.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (chunklen) {\n            // add last piece\n            if (lastPos < chunk.length) {\n                buf = chunk.slice(lastPos);\n                chunks.push(buf);\n                chunklen += buf.length;\n            }\n\n            this.outByteCount += chunklen;\n            this.push(Buffer.concat(chunks, chunklen));\n        } else {\n            this.outByteCount += chunk.length;\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n\n    /**\n     * Finalizes the stream with a dot on a single line\n     */\n    _flush(done) {\n        let buf;\n        if (this.lastByte === 0x0a) {\n            buf = Buffer.from('.\\r\\n');\n        } else if (this.lastByte === 0x0d) {\n            buf = Buffer.from('\\n.\\r\\n');\n        } else {\n            buf = Buffer.from('\\r\\n.\\r\\n');\n        }\n        this.outByteCount += buf.length;\n        this.push(buf);\n        done();\n    }\n}\n\nmodule.exports = DataStream;\n", "'use strict';\n\nconst packageInfo = require('../../package.json');\nconst EventEmitter = require('events').EventEmitter;\nconst net = require('net');\nconst tls = require('tls');\nconst os = require('os');\nconst crypto = require('crypto');\nconst DataStream = require('./data-stream');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\n// default timeout values in ms\nconst CONNECTION_TIMEOUT = 2 * 60 * 1000; // how much to wait for the connection to be established\nconst SOCKET_TIMEOUT = 10 * 60 * 1000; // how much to wait for socket inactivity before disconnecting the client\nconst GREETING_TIMEOUT = 30 * 1000; // how much to wait after connection is established but SMTP greeting is not receieved\nconst DNS_TIMEOUT = 30 * 1000; // how much to wait for resolveHostname\n\n/**\n * Generates a SMTP connection object\n *\n * Optional options object takes the following possible properties:\n *\n *  * **port** - is the port to connect to (defaults to 587 or 465)\n *  * **host** - is the hostname or IP address to connect to (defaults to 'localhost')\n *  * **secure** - use SSL\n *  * **ignoreTLS** - ignore server support for STARTTLS\n *  * **requireTLS** - forces the client to use STARTTLS\n *  * **name** - the name of the client server\n *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n *  * **greetingTimeout** - Time to wait in ms until greeting message is received from the server (defaults to 10000)\n *  * **connectionTimeout** - how many milliseconds to wait for the connection to establish\n *  * **socketTimeout** - Time of inactivity until the connection is closed (defaults to 1 hour)\n *  * **dnsTimeout** - Time to wait in ms for the DNS requests to be resolved (defaults to 30 seconds)\n *  * **lmtp** - if true, uses LMTP instead of SMTP protocol\n *  * **logger** - bunyan compatible logger interface\n *  * **debug** - if true pass SMTP traffic to the logger\n *  * **tls** - options for createCredentials\n *  * **socket** - existing socket to use instead of creating a new one (see: http://nodejs.org/api/net.html#net_class_net_socket)\n *  * **secured** - boolean indicates that the provided socket has already been upgraded to tls\n *\n * @constructor\n * @namespace SMTP Client module\n * @param {Object} [options] Option properties\n */\nclass SMTPConnection extends EventEmitter {\n    constructor(options) {\n        super(options);\n\n        this.id = crypto.randomBytes(8).toString('base64').replace(/\\W/g, '');\n        this.stage = 'init';\n\n        this.options = options || {};\n\n        this.secureConnection = !!this.options.secure;\n        this.alreadySecured = !!this.options.secured;\n\n        this.port = Number(this.options.port) || (this.secureConnection ? 465 : 587);\n        this.host = this.options.host || 'localhost';\n\n        this.allowInternalNetworkInterfaces = this.options.allowInternalNetworkInterfaces || false;\n\n        if (typeof this.options.secure === 'undefined' && this.port === 465) {\n            // if secure option is not set but port is 465, then default to secure\n            this.secureConnection = true;\n        }\n\n        this.name = this.options.name || this._getHostname();\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-connection',\n            sid: this.id\n        });\n\n        this.customAuth = new Map();\n        Object.keys(this.options.customAuth || {}).forEach(key => {\n            let mapKey = (key || '').toString().trim().toUpperCase();\n            if (!mapKey) {\n                return;\n            }\n            this.customAuth.set(mapKey, this.options.customAuth[key]);\n        });\n\n        /**\n         * Expose version nr, just for the reference\n         * @type {String}\n         */\n        this.version = packageInfo.version;\n\n        /**\n         * If true, then the user is authenticated\n         * @type {Boolean}\n         */\n        this.authenticated = false;\n\n        /**\n         * If set to true, this instance is no longer active\n         * @private\n         */\n        this.destroyed = false;\n\n        /**\n         * Defines if the current connection is secure or not. If not,\n         * STARTTLS can be used if available\n         * @private\n         */\n        this.secure = !!this.secureConnection;\n\n        /**\n         * Store incomplete messages coming from the server\n         * @private\n         */\n        this._remainder = '';\n\n        /**\n         * Unprocessed responses from the server\n         * @type {Array}\n         */\n        this._responseQueue = [];\n\n        this.lastServerResponse = false;\n\n        /**\n         * The socket connecting to the server\n         * @publick\n         */\n        this._socket = false;\n\n        /**\n         * Lists supported auth mechanisms\n         * @private\n         */\n        this._supportedAuth = [];\n\n        /**\n         * Set to true, if EHLO response includes \"AUTH\".\n         * If false then authentication is not tried\n         */\n        this.allowsAuth = false;\n\n        /**\n         * Includes current envelope (from, to)\n         * @private\n         */\n        this._envelope = false;\n\n        /**\n         * Lists supported extensions\n         * @private\n         */\n        this._supportedExtensions = [];\n\n        /**\n         * Defines the maximum allowed size for a single message\n         * @private\n         */\n        this._maxAllowedSize = 0;\n\n        /**\n         * Function queue to run if a data chunk comes from the server\n         * @private\n         */\n        this._responseActions = [];\n        this._recipientQueue = [];\n\n        /**\n         * Timeout variable for waiting the greeting\n         * @private\n         */\n        this._greetingTimeout = false;\n\n        /**\n         * Timeout variable for waiting the connection to start\n         * @private\n         */\n        this._connectionTimeout = false;\n\n        /**\n         * If the socket is deemed already closed\n         * @private\n         */\n        this._destroyed = false;\n\n        /**\n         * If the socket is already being closed\n         * @private\n         */\n        this._closing = false;\n\n        /**\n         * Callbacks for socket's listeners\n         */\n        this._onSocketData = chunk => this._onData(chunk);\n        this._onSocketError = error => this._onError(error, 'ESOCKET', false, 'CONN');\n        this._onSocketClose = () => this._onClose();\n        this._onSocketEnd = () => this._onEnd();\n        this._onSocketTimeout = () => this._onTimeout();\n    }\n\n    /**\n     * Creates a connection to a SMTP server and sets up connection\n     * listener\n     */\n    connect(connectCallback) {\n        if (typeof connectCallback === 'function') {\n            this.once('connect', () => {\n                this.logger.debug(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'SMTP handshake finished'\n                );\n                connectCallback();\n            });\n\n            const isDestroyedMessage = this._isDestroyedMessage('connect');\n            if (isDestroyedMessage) {\n                return connectCallback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'CONN'));\n            }\n        }\n\n        let opts = {\n            port: this.port,\n            host: this.host,\n            allowInternalNetworkInterfaces: this.allowInternalNetworkInterfaces,\n            timeout: this.options.dnsTimeout || DNS_TIMEOUT\n        };\n\n        if (this.options.localAddress) {\n            opts.localAddress = this.options.localAddress;\n        }\n\n        let setupConnectionHandlers = () => {\n            this._connectionTimeout = setTimeout(() => {\n                this._onError('Connection timeout', 'ETIMEDOUT', false, 'CONN');\n            }, this.options.connectionTimeout || CONNECTION_TIMEOUT);\n\n            this._socket.on('error', this._onSocketError);\n        };\n\n        if (this.options.connection) {\n            // connection is already opened\n            this._socket = this.options.connection;\n            if (this.secureConnection && !this.alreadySecured) {\n                setImmediate(() =>\n                    this._upgradeConnection(err => {\n                        if (err) {\n                            this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'CONN');\n                            return;\n                        }\n                        this._onConnect();\n                    })\n                );\n            } else {\n                setImmediate(() => this._onConnect());\n            }\n            return;\n        } else if (this.options.socket) {\n            // socket object is set up but not yet connected\n            this._socket = this.options.socket;\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket.connect(this.port, this.host, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else if (this.secureConnection) {\n            // connect using tls\n            if (this.options.tls) {\n                Object.keys(this.options.tls).forEach(key => {\n                    opts[key] = this.options.tls[key];\n                });\n            }\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = tls.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else {\n            // connect using plaintext\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = net.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        }\n    }\n\n    /**\n     * Sends QUIT\n     */\n    quit() {\n        this._sendCommand('QUIT');\n        this._responseActions.push(this.close);\n    }\n\n    /**\n     * Closes the connection to the server\n     */\n    close() {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n        this._responseActions = [];\n\n        // allow to run this function only once\n        if (this._closing) {\n            return;\n        }\n        this._closing = true;\n\n        let closeMethod = 'end';\n\n        if (this.stage === 'init') {\n            // Close the socket immediately when connection timed out\n            closeMethod = 'destroy';\n        }\n\n        this.logger.debug(\n            {\n                tnx: 'smtp'\n            },\n            'Closing connection to the server using \"%s\"',\n            closeMethod\n        );\n\n        let socket = (this._socket && this._socket.socket) || this._socket;\n\n        if (socket && !socket.destroyed) {\n            try {\n                this._socket[closeMethod]();\n            } catch (E) {\n                // just ignore\n            }\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * Authenticate user\n     */\n    login(authData, callback) {\n        const isDestroyedMessage = this._isDestroyedMessage('login');\n        if (isDestroyedMessage) {\n            return callback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        this._auth = authData || {};\n        // Select SASL authentication method\n        this._authMethod = (this._auth.method || '').toString().trim().toUpperCase() || false;\n\n        if (!this._authMethod && this._auth.oauth2 && !this._auth.credentials) {\n            this._authMethod = 'XOAUTH2';\n        } else if (!this._authMethod || (this._authMethod === 'XOAUTH2' && !this._auth.oauth2)) {\n            // use first supported\n            this._authMethod = (this._supportedAuth[0] || 'PLAIN').toUpperCase().trim();\n        }\n\n        if (this._authMethod !== 'XOAUTH2' && (!this._auth.credentials || !this._auth.credentials.user || !this._auth.credentials.pass)) {\n            if (this._auth.user && this._auth.pass) {\n                this._auth.credentials = {\n                    user: this._auth.user,\n                    pass: this._auth.pass,\n                    options: this._auth.options\n                };\n            } else {\n                return callback(this._formatError('Missing credentials for \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n            }\n        }\n\n        if (this.customAuth.has(this._authMethod)) {\n            let handler = this.customAuth.get(this._authMethod);\n            let lastResponse;\n            let returned = false;\n\n            let resolve = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authenticated',\n                        method: this._authMethod\n                    },\n                    'User %s authenticated',\n                    JSON.stringify(this._auth.user)\n                );\n                this.authenticated = true;\n                callback(null, true);\n            };\n\n            let reject = err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                callback(this._formatError(err, 'EAUTH', lastResponse, 'AUTH ' + this._authMethod));\n            };\n\n            let handlerResponse = handler({\n                auth: this._auth,\n                method: this._authMethod,\n\n                extensions: [].concat(this._supportedExtensions),\n                authMethods: [].concat(this._supportedAuth),\n                maxAllowedSize: this._maxAllowedSize || false,\n\n                sendCommand: (cmd, done) => {\n                    let promise;\n\n                    if (!done) {\n                        promise = new Promise((resolve, reject) => {\n                            done = shared.callbackPromise(resolve, reject);\n                        });\n                    }\n\n                    this._responseActions.push(str => {\n                        lastResponse = str;\n\n                        let codes = str.match(/^(\\d+)(?:\\s(\\d+\\.\\d+\\.\\d+))?\\s/);\n                        let data = {\n                            command: cmd,\n                            response: str\n                        };\n                        if (codes) {\n                            data.status = Number(codes[1]) || 0;\n                            if (codes[2]) {\n                                data.code = codes[2];\n                            }\n                            data.text = str.substr(codes[0].length);\n                        } else {\n                            data.text = str;\n                            data.status = 0; // just in case we need to perform numeric comparisons\n                        }\n                        done(null, data);\n                    });\n                    setImmediate(() => this._sendCommand(cmd));\n\n                    return promise;\n                },\n\n                resolve,\n                reject\n            });\n\n            if (handlerResponse && typeof handlerResponse.catch === 'function') {\n                // a promise was returned\n                handlerResponse.then(resolve).catch(reject);\n            }\n\n            return;\n        }\n\n        switch (this._authMethod) {\n            case 'XOAUTH2':\n                this._handleXOauth2Token(false, callback);\n                return;\n            case 'LOGIN':\n                this._responseActions.push(str => {\n                    this._actionAUTH_LOGIN_USER(str, callback);\n                });\n                this._sendCommand('AUTH LOGIN');\n                return;\n            case 'PLAIN':\n                this._responseActions.push(str => {\n                    this._actionAUTHComplete(str, callback);\n                });\n                this._sendCommand(\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                this._auth.credentials.pass,\n                            'utf-8'\n                        ).toString('base64'),\n                    // log entry without passwords\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                '/* secret */',\n                            'utf-8'\n                        ).toString('base64')\n                );\n                return;\n            case 'CRAM-MD5':\n                this._responseActions.push(str => {\n                    this._actionAUTH_CRAM_MD5(str, callback);\n                });\n                this._sendCommand('AUTH CRAM-MD5');\n                return;\n        }\n\n        return callback(this._formatError('Unknown authentication method \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n    }\n\n    /**\n     * Sends a message\n     *\n     * @param {Object} envelope Envelope object, {from: addr, to: [addr]}\n     * @param {Object} message String, Buffer or a Stream\n     * @param {Function} callback Callback to return once sending is completed\n     */\n    send(envelope, message, done) {\n        if (!message) {\n            return done(this._formatError('Empty message', 'EMESSAGE', false, 'API'));\n        }\n\n        const isDestroyedMessage = this._isDestroyedMessage('send message');\n        if (isDestroyedMessage) {\n            return done(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        // reject larger messages than allowed\n        if (this._maxAllowedSize && envelope.size > this._maxAllowedSize) {\n            return setImmediate(() => {\n                done(this._formatError('Message size larger than allowed ' + this._maxAllowedSize, 'EMESSAGE', false, 'MAIL FROM'));\n            });\n        }\n\n        // ensure that callback is only called once\n        let returned = false;\n        let callback = function () {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            done(...arguments);\n        };\n\n        if (typeof message.on === 'function') {\n            message.on('error', err => callback(this._formatError(err, 'ESTREAM', false, 'API')));\n        }\n\n        let startTime = Date.now();\n        this._setEnvelope(envelope, (err, info) => {\n            if (err) {\n                return callback(err);\n            }\n            let envelopeTime = Date.now();\n            let stream = this._createSendStream((err, str) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                info.envelopeTime = envelopeTime - startTime;\n                info.messageTime = Date.now() - envelopeTime;\n                info.messageSize = stream.outByteCount;\n                info.response = str;\n\n                return callback(null, info);\n            });\n            if (typeof message.pipe === 'function') {\n                message.pipe(stream);\n            } else {\n                stream.write(message);\n                stream.end();\n            }\n        });\n    }\n\n    /**\n     * Resets connection state\n     *\n     * @param {Function} callback Callback to return once connection is reset\n     */\n    reset(callback) {\n        this._sendCommand('RSET');\n        this._responseActions.push(str => {\n            if (str.charAt(0) !== '2') {\n                return callback(this._formatError('Could not reset session state. response=' + str, 'EPROTOCOL', str, 'RSET'));\n            }\n            this._envelope = false;\n            return callback(null, true);\n        });\n    }\n\n    /**\n     * Connection listener that is run when the connection to\n     * the server is opened\n     *\n     * @event\n     */\n    _onConnect() {\n        clearTimeout(this._connectionTimeout);\n\n        this.logger.info(\n            {\n                tnx: 'network',\n                localAddress: this._socket.localAddress,\n                localPort: this._socket.localPort,\n                remoteAddress: this._socket.remoteAddress,\n                remotePort: this._socket.remotePort\n            },\n            '%s established to %s:%s',\n            this.secure ? 'Secure connection' : 'Connection',\n            this._socket.remoteAddress,\n            this._socket.remotePort\n        );\n\n        if (this._destroyed) {\n            // Connection was established after we already had canceled it\n            this.close();\n            return;\n        }\n\n        this.stage = 'connected';\n\n        // clear existing listeners for the socket\n        this._socket.removeListener('data', this._onSocketData);\n        this._socket.removeListener('timeout', this._onSocketTimeout);\n        this._socket.removeListener('close', this._onSocketClose);\n        this._socket.removeListener('end', this._onSocketEnd);\n\n        this._socket.on('data', this._onSocketData);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        this._greetingTimeout = setTimeout(() => {\n            // if still waiting for greeting, give up\n            if (this._socket && !this._destroyed && this._responseActions[0] === this._actionGreeting) {\n                this._onError('Greeting never received', 'ETIMEDOUT', false, 'CONN');\n            }\n        }, this.options.greetingTimeout || GREETING_TIMEOUT);\n\n        this._responseActions.push(this._actionGreeting);\n\n        // we have a 'data' listener set up so resume socket if it was paused\n        this._socket.resume();\n    }\n\n    /**\n     * 'data' listener for data coming from the server\n     *\n     * @event\n     * @param {Buffer} chunk Data chunk coming from the server\n     */\n    _onData(chunk) {\n        if (this._destroyed || !chunk || !chunk.length) {\n            return;\n        }\n\n        let data = (chunk || '').toString('binary');\n        let lines = (this._remainder + data).split(/\\r?\\n/);\n        let lastline;\n\n        this._remainder = lines.pop();\n\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (this._responseQueue.length) {\n                lastline = this._responseQueue[this._responseQueue.length - 1];\n                if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                    this._responseQueue[this._responseQueue.length - 1] += '\\n' + lines[i];\n                    continue;\n                }\n            }\n            this._responseQueue.push(lines[i]);\n        }\n\n        if (this._responseQueue.length) {\n            lastline = this._responseQueue[this._responseQueue.length - 1];\n            if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                return;\n            }\n        }\n\n        this._processResponse();\n    }\n\n    /**\n     * 'error' listener for the socket\n     *\n     * @event\n     * @param {Error} err Error object\n     * @param {String} type Error name\n     */\n    _onError(err, type, data, command) {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n\n        if (this._destroyed) {\n            // just ignore, already closed\n            // this might happen when a socket is canceled because of reached timeout\n            // but the socket timeout error itself receives only after\n            return;\n        }\n\n        err = this._formatError(err, type, data, command);\n\n        this.logger.error(data, err.message);\n\n        this.emit('error', err);\n        this.close();\n    }\n\n    _formatError(message, type, response, command) {\n        let err;\n\n        if (/Error\\]$/i.test(Object.prototype.toString.call(message))) {\n            err = message;\n        } else {\n            err = new Error(message);\n        }\n\n        if (type && type !== 'Error') {\n            err.code = type;\n        }\n\n        if (response) {\n            err.response = response;\n            err.message += ': ' + response;\n        }\n\n        let responseCode = (typeof response === 'string' && Number((response.match(/^\\d+/) || [])[0])) || false;\n        if (responseCode) {\n            err.responseCode = responseCode;\n        }\n\n        if (command) {\n            err.command = command;\n        }\n\n        return err;\n    }\n\n    /**\n     * 'close' listener for the socket\n     *\n     * @event\n     */\n    _onClose() {\n        let serverResponse = false;\n\n        if (this._remainder && this._remainder.trim()) {\n            if (this.options.debug || this.options.transactionLog) {\n                this.logger.debug(\n                    {\n                        tnx: 'server'\n                    },\n                    this._remainder.replace(/\\r?\\n$/, '')\n                );\n            }\n            this.lastServerResponse = serverResponse = this._remainder.trim();\n        }\n\n        this.logger.info(\n            {\n                tnx: 'network'\n            },\n            'Connection closed'\n        );\n\n        if (this.upgrading && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ETLS', serverResponse, 'CONN');\n        } else if (![this._actionGreeting, this.close].includes(this._responseActions[0]) && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', serverResponse, 'CONN');\n        } else if (/^[45]\\d{2}\\b/.test(serverResponse)) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', serverResponse, 'CONN');\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * 'end' listener for the socket\n     *\n     * @event\n     */\n    _onEnd() {\n        if (this._socket && !this._socket.destroyed) {\n            this._socket.destroy();\n        }\n    }\n\n    /**\n     * 'timeout' listener for the socket\n     *\n     * @event\n     */\n    _onTimeout() {\n        return this._onError(new Error('Timeout'), 'ETIMEDOUT', false, 'CONN');\n    }\n\n    /**\n     * Destroys the client, emits 'end'\n     */\n    _destroy() {\n        if (this._destroyed) {\n            return;\n        }\n        this._destroyed = true;\n        this.emit('end');\n    }\n\n    /**\n     * Upgrades the connection to TLS\n     *\n     * @param {Function} callback Callback function to run when the connection\n     *        has been secured\n     */\n    _upgradeConnection(callback) {\n        // do not remove all listeners or it breaks node v0.10 as there's\n        // apparently a 'finish' event set that would be cleared as well\n\n        // we can safely keep 'error', 'end', 'close' etc. events\n        this._socket.removeListener('data', this._onSocketData); // incoming data is going to be gibberish from this point onwards\n        this._socket.removeListener('timeout', this._onSocketTimeout); // timeout will be re-set for the new socket object\n\n        let socketPlain = this._socket;\n        let opts = {\n            socket: this._socket,\n            host: this.host\n        };\n\n        Object.keys(this.options.tls || {}).forEach(key => {\n            opts[key] = this.options.tls[key];\n        });\n\n        this.upgrading = true;\n        // tls.connect is not an asynchronous function however it may still throw errors and requires to be wrapped with try/catch\n        try {\n            this._socket = tls.connect(opts, () => {\n                this.secure = true;\n                this.upgrading = false;\n                this._socket.on('data', this._onSocketData);\n\n                socketPlain.removeListener('close', this._onSocketClose);\n                socketPlain.removeListener('end', this._onSocketEnd);\n\n                return callback(null, true);\n            });\n        } catch (err) {\n            return callback(err);\n        }\n\n        this._socket.on('error', this._onSocketError);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT); // 10 min.\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        // resume in case the socket was paused\n        socketPlain.resume();\n    }\n\n    /**\n     * Processes queued responses from the server\n     *\n     * @param {Boolean} force If true, ignores _processing flag\n     */\n    _processResponse() {\n        if (!this._responseQueue.length) {\n            return false;\n        }\n\n        let str = (this.lastServerResponse = (this._responseQueue.shift() || '').toString());\n\n        if (/^\\d+-/.test(str.split('\\n').pop())) {\n            // keep waiting for the final part of multiline response\n            return;\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'server'\n                },\n                str.replace(/\\r?\\n$/, '')\n            );\n        }\n\n        if (!str.trim()) {\n            // skip unexpected empty lines\n            setImmediate(() => this._processResponse());\n        }\n\n        let action = this._responseActions.shift();\n\n        if (typeof action === 'function') {\n            action.call(this, str);\n            setImmediate(() => this._processResponse());\n        } else {\n            return this._onError(new Error('Unexpected Response'), 'EPROTOCOL', str, 'CONN');\n        }\n    }\n\n    /**\n     * Send a command to the server, append \\r\\n\n     *\n     * @param {String} str String to be sent to the server\n     * @param {String} logStr Optional string to be used for logging instead of the actual string\n     */\n    _sendCommand(str, logStr) {\n        if (this._destroyed) {\n            // Connection already closed, can't send any more data\n            return;\n        }\n\n        if (this._socket.destroyed) {\n            return this.close();\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'client'\n                },\n                (logStr || str || '').toString().replace(/\\r?\\n$/, '')\n            );\n        }\n\n        this._socket.write(Buffer.from(str + '\\r\\n', 'utf-8'));\n    }\n\n    /**\n     * Initiates a new message by submitting envelope data, starting with\n     * MAIL FROM: command\n     *\n     * @param {Object} envelope Envelope object in the form of\n     *        {from:'...', to:['...']}\n     *        or\n     *        {from:{address:'...',name:'...'}, to:[address:'...',name:'...']}\n     */\n    _setEnvelope(envelope, callback) {\n        let args = [];\n        let useSmtpUtf8 = false;\n\n        this._envelope = envelope || {};\n        this._envelope.from = ((this._envelope.from && this._envelope.from.address) || this._envelope.from || '').toString().trim();\n\n        this._envelope.to = [].concat(this._envelope.to || []).map(to => ((to && to.address) || to || '').toString().trim());\n\n        if (!this._envelope.to.length) {\n            return callback(this._formatError('No recipients defined', 'EENVELOPE', false, 'API'));\n        }\n\n        if (this._envelope.from && /[\\r\\n<>]/.test(this._envelope.from)) {\n            return callback(this._formatError('Invalid sender ' + JSON.stringify(this._envelope.from), 'EENVELOPE', false, 'API'));\n        }\n\n        // check if the sender address uses only ASCII characters,\n        // otherwise require usage of SMTPUTF8 extension\n        if (/[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n            useSmtpUtf8 = true;\n        }\n\n        for (let i = 0, len = this._envelope.to.length; i < len; i++) {\n            if (!this._envelope.to[i] || /[\\r\\n<>]/.test(this._envelope.to[i])) {\n                return callback(this._formatError('Invalid recipient ' + JSON.stringify(this._envelope.to[i]), 'EENVELOPE', false, 'API'));\n            }\n\n            // check if the recipients addresses use only ASCII characters,\n            // otherwise require usage of SMTPUTF8 extension\n            if (/[\\x80-\\uFFFF]/.test(this._envelope.to[i])) {\n                useSmtpUtf8 = true;\n            }\n        }\n\n        // clone the recipients array for latter manipulation\n        this._envelope.rcptQueue = JSON.parse(JSON.stringify(this._envelope.to || []));\n        this._envelope.rejected = [];\n        this._envelope.rejectedErrors = [];\n        this._envelope.accepted = [];\n\n        if (this._envelope.dsn) {\n            try {\n                this._envelope.dsn = this._setDsnEnvelope(this._envelope.dsn);\n            } catch (err) {\n                return callback(this._formatError('Invalid DSN ' + err.message, 'EENVELOPE', false, 'API'));\n            }\n        }\n\n        this._responseActions.push(str => {\n            this._actionMAIL(str, callback);\n        });\n\n        // If the server supports SMTPUTF8 and the envelope includes an internationalized\n        // email address then append SMTPUTF8 keyword to the MAIL FROM command\n        if (useSmtpUtf8 && this._supportedExtensions.includes('SMTPUTF8')) {\n            args.push('SMTPUTF8');\n            this._usingSmtpUtf8 = true;\n        }\n\n        // If the server supports 8BITMIME and the message might contain non-ascii bytes\n        // then append the 8BITMIME keyword to the MAIL FROM command\n        if (this._envelope.use8BitMime && this._supportedExtensions.includes('8BITMIME')) {\n            args.push('BODY=8BITMIME');\n            this._using8BitMime = true;\n        }\n\n        if (this._envelope.size && this._supportedExtensions.includes('SIZE')) {\n            args.push('SIZE=' + this._envelope.size);\n        }\n\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the MAIL FROM command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.ret) {\n                args.push('RET=' + shared.encodeXText(this._envelope.dsn.ret));\n            }\n            if (this._envelope.dsn.envid) {\n                args.push('ENVID=' + shared.encodeXText(this._envelope.dsn.envid));\n            }\n        }\n\n        this._sendCommand('MAIL FROM:<' + this._envelope.from + '>' + (args.length ? ' ' + args.join(' ') : ''));\n    }\n\n    _setDsnEnvelope(params) {\n        let ret = (params.ret || params.return || '').toString().toUpperCase() || null;\n        if (ret) {\n            switch (ret) {\n                case 'HDRS':\n                case 'HEADERS':\n                    ret = 'HDRS';\n                    break;\n                case 'FULL':\n                case 'BODY':\n                    ret = 'FULL';\n                    break;\n            }\n        }\n\n        if (ret && !['FULL', 'HDRS'].includes(ret)) {\n            throw new Error('ret: ' + JSON.stringify(ret));\n        }\n\n        let envid = (params.envid || params.id || '').toString() || null;\n\n        let notify = params.notify || null;\n        if (notify) {\n            if (typeof notify === 'string') {\n                notify = notify.split(',');\n            }\n            notify = notify.map(n => n.trim().toUpperCase());\n            let validNotify = ['NEVER', 'SUCCESS', 'FAILURE', 'DELAY'];\n            let invaliNotify = notify.filter(n => !validNotify.includes(n));\n            if (invaliNotify.length || (notify.length > 1 && notify.includes('NEVER'))) {\n                throw new Error('notify: ' + JSON.stringify(notify.join(',')));\n            }\n            notify = notify.join(',');\n        }\n\n        let orcpt = (params.recipient || params.orcpt || '').toString() || null;\n        if (orcpt && orcpt.indexOf(';') < 0) {\n            orcpt = 'rfc822;' + orcpt;\n        }\n\n        return {\n            ret,\n            envid,\n            notify,\n            orcpt\n        };\n    }\n\n    _getDsnRcptToArgs() {\n        let args = [];\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the RCPT TO command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.notify) {\n                args.push('NOTIFY=' + shared.encodeXText(this._envelope.dsn.notify));\n            }\n            if (this._envelope.dsn.orcpt) {\n                args.push('ORCPT=' + shared.encodeXText(this._envelope.dsn.orcpt));\n            }\n        }\n        return args.length ? ' ' + args.join(' ') : '';\n    }\n\n    _createSendStream(callback) {\n        let dataStream = new DataStream();\n        let logStream;\n\n        if (this.options.lmtp) {\n            this._envelope.accepted.forEach((recipient, i) => {\n                let final = i === this._envelope.accepted.length - 1;\n                this._responseActions.push(str => {\n                    this._actionLMTPStream(recipient, final, str, callback);\n                });\n            });\n        } else {\n            this._responseActions.push(str => {\n                this._actionSMTPStream(str, callback);\n            });\n        }\n\n        dataStream.pipe(this._socket, {\n            end: false\n        });\n\n        if (this.options.debug) {\n            logStream = new PassThrough();\n            logStream.on('readable', () => {\n                let chunk;\n                while ((chunk = logStream.read())) {\n                    this.logger.debug(\n                        {\n                            tnx: 'message'\n                        },\n                        chunk.toString('binary').replace(/\\r?\\n$/, '')\n                    );\n                }\n            });\n            dataStream.pipe(logStream);\n        }\n\n        dataStream.once('end', () => {\n            this.logger.info(\n                {\n                    tnx: 'message',\n                    inByteCount: dataStream.inByteCount,\n                    outByteCount: dataStream.outByteCount\n                },\n                '<%s bytes encoded mime message (source size %s bytes)>',\n                dataStream.outByteCount,\n                dataStream.inByteCount\n            );\n        });\n\n        return dataStream;\n    }\n\n    /** ACTIONS **/\n\n    /**\n     * Will be run after the connection is created and the server sends\n     * a greeting. If the incoming message starts with 220 initiate\n     * SMTP session by sending EHLO command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionGreeting(str) {\n        clearTimeout(this._greetingTimeout);\n\n        if (str.substr(0, 3) !== '220') {\n            this._onError(new Error('Invalid greeting. response=' + str), 'EPROTOCOL', str, 'CONN');\n            return;\n        }\n\n        if (this.options.lmtp) {\n            this._responseActions.push(this._actionLHLO);\n            this._sendCommand('LHLO ' + this.name);\n        } else {\n            this._responseActions.push(this._actionEHLO);\n            this._sendCommand('EHLO ' + this.name);\n        }\n    }\n\n    /**\n     * Handles server response for LHLO command. If it yielded in\n     * error, emit 'error', otherwise treat this as an EHLO response\n     *\n     * @param {String} str Message from the server\n     */\n    _actionLHLO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid LHLO. response=' + str), 'EPROTOCOL', str, 'LHLO');\n            return;\n        }\n\n        this._actionEHLO(str);\n    }\n\n    /**\n     * Handles server response for EHLO command. If it yielded in\n     * error, try HELO instead, otherwise initiate TLS negotiation\n     * if STARTTLS is supported by the server or move into the\n     * authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionEHLO(str) {\n        let match;\n\n        if (str.substr(0, 3) === '421') {\n            this._onError(new Error('Server terminates connection. response=' + str), 'ECONNECTION', str, 'EHLO');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            if (this.options.requireTLS) {\n                this._onError(new Error('EHLO failed but HELO does not support required STARTTLS. response=' + str), 'ECONNECTION', str, 'EHLO');\n                return;\n            }\n\n            // Try HELO instead\n            this._responseActions.push(this._actionHELO);\n            this._sendCommand('HELO ' + this.name);\n            return;\n        }\n\n        this._ehloLines = str\n            .split(/\\r?\\n/)\n            .map(line => line.replace(/^\\d+[ -]/, '').trim())\n            .filter(line => line)\n            .slice(1);\n\n        // Detect if the server supports STARTTLS\n        if (!this.secure && !this.options.ignoreTLS && (/[ -]STARTTLS\\b/im.test(str) || this.options.requireTLS)) {\n            this._sendCommand('STARTTLS');\n            this._responseActions.push(this._actionSTARTTLS);\n            return;\n        }\n\n        // Detect if the server supports SMTPUTF8\n        if (/[ -]SMTPUTF8\\b/im.test(str)) {\n            this._supportedExtensions.push('SMTPUTF8');\n        }\n\n        // Detect if the server supports DSN\n        if (/[ -]DSN\\b/im.test(str)) {\n            this._supportedExtensions.push('DSN');\n        }\n\n        // Detect if the server supports 8BITMIME\n        if (/[ -]8BITMIME\\b/im.test(str)) {\n            this._supportedExtensions.push('8BITMIME');\n        }\n\n        // Detect if the server supports PIPELINING\n        if (/[ -]PIPELINING\\b/im.test(str)) {\n            this._supportedExtensions.push('PIPELINING');\n        }\n\n        // Detect if the server supports AUTH\n        if (/[ -]AUTH\\b/i.test(str)) {\n            this.allowsAuth = true;\n        }\n\n        // Detect if the server supports PLAIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)PLAIN/i.test(str)) {\n            this._supportedAuth.push('PLAIN');\n        }\n\n        // Detect if the server supports LOGIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)LOGIN/i.test(str)) {\n            this._supportedAuth.push('LOGIN');\n        }\n\n        // Detect if the server supports CRAM-MD5 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)CRAM-MD5/i.test(str)) {\n            this._supportedAuth.push('CRAM-MD5');\n        }\n\n        // Detect if the server supports XOAUTH2 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)XOAUTH2/i.test(str)) {\n            this._supportedAuth.push('XOAUTH2');\n        }\n\n        // Detect if the server supports SIZE extensions (and the max allowed size)\n        if ((match = str.match(/[ -]SIZE(?:[ \\t]+(\\d+))?/im))) {\n            this._supportedExtensions.push('SIZE');\n            this._maxAllowedSize = Number(match[1]) || 0;\n        }\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for HELO command. If it yielded in\n     * error, emit 'error', otherwise move into the authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionHELO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid HELO. response=' + str), 'EPROTOCOL', str, 'HELO');\n            return;\n        }\n\n        // assume that authentication is enabled (most probably is not though)\n        this.allowsAuth = true;\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for STARTTLS command. If there's an error\n     * try HELO instead, otherwise initiate TLS upgrade. If the upgrade\n     * succeedes restart the EHLO\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSTARTTLS(str) {\n        if (str.charAt(0) !== '2') {\n            if (this.options.opportunisticTLS) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'Failed STARTTLS upgrade, continuing unencrypted'\n                );\n                return this.emit('connect');\n            }\n            this._onError(new Error('Error upgrading connection with STARTTLS'), 'ETLS', str, 'STARTTLS');\n            return;\n        }\n\n        this._upgradeConnection((err, secured) => {\n            if (err) {\n                this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'STARTTLS');\n                return;\n            }\n\n            this.logger.info(\n                {\n                    tnx: 'smtp'\n                },\n                'Connection upgraded with STARTTLS'\n            );\n\n            if (secured) {\n                // restart session\n                if (this.options.lmtp) {\n                    this._responseActions.push(this._actionLHLO);\n                    this._sendCommand('LHLO ' + this.name);\n                } else {\n                    this._responseActions.push(this._actionEHLO);\n                    this._sendCommand('EHLO ' + this.name);\n                }\n            } else {\n                this.emit('connect');\n            }\n        });\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 VXNlcm5hbWU6' (base64 for 'Username:'). Data to be sent as\n     * response needs to be base64 encoded username. We do not need\n     * exact match but settle with 334 response in general as some\n     * hosts invalidly use a longer message than VXNlcm5hbWU6\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_USER(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 VXNlcm5hbWU6'\n            callback(this._formatError('Invalid login sequence while waiting for \"334 VXNlcm5hbWU6\"', 'EAUTH', str, 'AUTH LOGIN'));\n            return;\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTH_LOGIN_PASS(str, callback);\n        });\n\n        this._sendCommand(Buffer.from(this._auth.credentials.user + '', 'utf-8').toString('base64'));\n    }\n\n    /**\n     * Handle the response for AUTH CRAM-MD5 command. We are expecting\n     * '334 <challenge string>'. Data to be sent as response needs to be\n     * base64 decoded challenge string, MD5 hashed using the password as\n     * a HMAC key, prefixed by the username and a space, and finally all\n     * base64 encoded again.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5(str, callback) {\n        let challengeMatch = str.match(/^334\\s+(.+)$/);\n        let challengeString = '';\n\n        if (!challengeMatch) {\n            return callback(this._formatError('Invalid login sequence while waiting for server challenge string', 'EAUTH', str, 'AUTH CRAM-MD5'));\n        } else {\n            challengeString = challengeMatch[1];\n        }\n\n        // Decode from base64\n        let base64decoded = Buffer.from(challengeString, 'base64').toString('ascii'),\n            hmacMD5 = crypto.createHmac('md5', this._auth.credentials.pass);\n\n        hmacMD5.update(base64decoded);\n\n        let prepended = this._auth.credentials.user + ' ' + hmacMD5.digest('hex');\n\n        this._responseActions.push(str => {\n            this._actionAUTH_CRAM_MD5_PASS(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from(prepended).toString('base64'),\n            // hidden hash for logs\n            Buffer.from(this._auth.credentials.user + ' /* secret */').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response to CRAM-MD5 authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5_PASS(str, callback) {\n        if (!str.match(/^235\\s+/)) {\n            return callback(this._formatError('Invalid login sequence while waiting for \"235\"', 'EAUTH', str, 'AUTH CRAM-MD5'));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 UGFzc3dvcmQ6' (base64 for 'Password:'). Data to be sent as\n     * response needs to be base64 encoded password.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_PASS(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 UGFzc3dvcmQ6'\n            return callback(this._formatError('Invalid login sequence while waiting for \"334 UGFzc3dvcmQ6\"', 'EAUTH', str, 'AUTH LOGIN'));\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTHComplete(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from((this._auth.credentials.pass || '').toString(), 'utf-8').toString('base64'),\n            // Hidden pass for logs\n            Buffer.from('/* secret */', 'utf-8').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response for authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTHComplete(str, isRetry, callback) {\n        if (!callback && typeof isRetry === 'function') {\n            callback = isRetry;\n            isRetry = false;\n        }\n\n        if (str.substr(0, 3) === '334') {\n            this._responseActions.push(str => {\n                if (isRetry || this._authMethod !== 'XOAUTH2') {\n                    this._actionAUTHComplete(str, true, callback);\n                } else {\n                    // fetch a new OAuth2 access token\n                    setImmediate(() => this._handleXOauth2Token(true, callback));\n                }\n            });\n            this._sendCommand('');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            this.logger.info(\n                {\n                    tnx: 'smtp',\n                    username: this._auth.user,\n                    action: 'authfail',\n                    method: this._authMethod\n                },\n                'User %s failed to authenticate',\n                JSON.stringify(this._auth.user)\n            );\n            return callback(this._formatError('Invalid login', 'EAUTH', str, 'AUTH ' + this._authMethod));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle response for a MAIL FROM: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionMAIL(str, callback) {\n        let message, curRecipient;\n        if (Number(str.charAt(0)) !== 2) {\n            if (this._usingSmtpUtf8 && /^550 /.test(str) && /[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Mail command failed';\n            }\n            return callback(this._formatError(message, 'EENVELOPE', str, 'MAIL FROM'));\n        }\n\n        if (!this._envelope.rcptQueue.length) {\n            return callback(this._formatError('Can\\x27t send mail - no recipients defined', 'EENVELOPE', false, 'API'));\n        } else {\n            this._recipientQueue = [];\n\n            if (this._supportedExtensions.includes('PIPELINING')) {\n                while (this._envelope.rcptQueue.length) {\n                    curRecipient = this._envelope.rcptQueue.shift();\n                    this._recipientQueue.push(curRecipient);\n                    this._responseActions.push(str => {\n                        this._actionRCPT(str, callback);\n                    });\n                    this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n                }\n            } else {\n                curRecipient = this._envelope.rcptQueue.shift();\n                this._recipientQueue.push(curRecipient);\n                this._responseActions.push(str => {\n                    this._actionRCPT(str, callback);\n                });\n                this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n            }\n        }\n    }\n\n    /**\n     * Handle response for a RCPT TO: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionRCPT(str, callback) {\n        let message,\n            err,\n            curRecipient = this._recipientQueue.shift();\n        if (Number(str.charAt(0)) !== 2) {\n            // this is a soft error\n            if (this._usingSmtpUtf8 && /^553 /.test(str) && /[\\x80-\\uFFFF]/.test(curRecipient)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Recipient command failed';\n            }\n            this._envelope.rejected.push(curRecipient);\n            // store error for the failed recipient\n            err = this._formatError(message, 'EENVELOPE', str, 'RCPT TO');\n            err.recipient = curRecipient;\n            this._envelope.rejectedErrors.push(err);\n        } else {\n            this._envelope.accepted.push(curRecipient);\n        }\n\n        if (!this._envelope.rcptQueue.length && !this._recipientQueue.length) {\n            if (this._envelope.rejected.length < this._envelope.to.length) {\n                this._responseActions.push(str => {\n                    this._actionDATA(str, callback);\n                });\n                this._sendCommand('DATA');\n            } else {\n                err = this._formatError('Can\\x27t send mail - all recipients were rejected', 'EENVELOPE', str, 'RCPT TO');\n                err.rejected = this._envelope.rejected;\n                err.rejectedErrors = this._envelope.rejectedErrors;\n                return callback(err);\n            }\n        } else if (this._envelope.rcptQueue.length) {\n            curRecipient = this._envelope.rcptQueue.shift();\n            this._recipientQueue.push(curRecipient);\n            this._responseActions.push(str => {\n                this._actionRCPT(str, callback);\n            });\n            this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n        }\n    }\n\n    /**\n     * Handle response for a DATA command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionDATA(str, callback) {\n        // response should be 354 but according to this issue https://github.com/eleith/emailjs/issues/24\n        // some servers might use 250 instead, so lets check for 2 or 3 as the first digit\n        if (!/^[23]/.test(str)) {\n            return callback(this._formatError('Data command failed', 'EENVELOPE', str, 'DATA'));\n        }\n\n        let response = {\n            accepted: this._envelope.accepted,\n            rejected: this._envelope.rejected\n        };\n\n        if (this._ehloLines && this._ehloLines.length) {\n            response.ehlo = this._ehloLines;\n        }\n\n        if (this._envelope.rejectedErrors.length) {\n            response.rejectedErrors = this._envelope.rejectedErrors;\n        }\n\n        callback(null, response);\n    }\n\n    /**\n     * Handle response for a DATA stream when using SMTP\n     * We expect a single response that defines if the sending succeeded or failed\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSMTPStream(str, callback) {\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            return callback(this._formatError('Message failed', 'EMESSAGE', str, 'DATA'));\n        } else {\n            // Message sent succesfully\n            return callback(null, str);\n        }\n    }\n\n    /**\n     * Handle response for a DATA stream\n     * We expect a separate response for every recipient. All recipients can either\n     * succeed or fail separately\n     *\n     * @param {String} recipient The recipient this response applies to\n     * @param {Boolean} final Is this the final recipient?\n     * @param {String} str Message from the server\n     */\n    _actionLMTPStream(recipient, final, str, callback) {\n        let err;\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            err = this._formatError('Message failed for recipient ' + recipient, 'EMESSAGE', str, 'DATA');\n            err.recipient = recipient;\n            this._envelope.rejected.push(recipient);\n            this._envelope.rejectedErrors.push(err);\n            for (let i = 0, len = this._envelope.accepted.length; i < len; i++) {\n                if (this._envelope.accepted[i] === recipient) {\n                    this._envelope.accepted.splice(i, 1);\n                }\n            }\n        }\n        if (final) {\n            return callback(null, str);\n        }\n    }\n\n    _handleXOauth2Token(isRetry, callback) {\n        this._auth.oauth2.getToken(isRetry, (err, accessToken) => {\n            if (err) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authfail',\n                        method: this._authMethod\n                    },\n                    'User %s failed to authenticate',\n                    JSON.stringify(this._auth.user)\n                );\n                return callback(this._formatError(err, 'EAUTH', false, 'AUTH XOAUTH2'));\n            }\n            this._responseActions.push(str => {\n                this._actionAUTHComplete(str, isRetry, callback);\n            });\n            this._sendCommand(\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token(accessToken),\n                //  Hidden for logs\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token('/* secret */')\n            );\n        });\n    }\n\n    /**\n     *\n     * @param {string} command\n     * @private\n     */\n    _isDestroyedMessage(command) {\n        if (this._destroyed) {\n            return 'Cannot ' + command + ' - smtp connection is already destroyed.';\n        }\n\n        if (this._socket) {\n            if (this._socket.destroyed) {\n                return 'Cannot ' + command + ' - smtp connection socket is already destroyed.';\n            }\n\n            if (!this._socket.writable) {\n                return 'Cannot ' + command + ' - smtp connection socket is already half-closed.';\n            }\n        }\n    }\n\n    _getHostname() {\n        // defaul hostname is machine hostname or [IP]\n        let defaultHostname;\n        try {\n            defaultHostname = os.hostname() || '';\n        } catch (err) {\n            // fails on windows 7\n            defaultHostname = 'localhost';\n        }\n\n        // ignore if not FQDN\n        if (!defaultHostname || defaultHostname.indexOf('.') < 0) {\n            defaultHostname = '[127.0.0.1]';\n        }\n\n        // IP should be enclosed in []\n        if (defaultHostname.match(/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/)) {\n            defaultHostname = '[' + defaultHostname + ']';\n        }\n\n        return defaultHostname;\n    }\n}\n\nmodule.exports = SMTPConnection;\n", "'use strict';\n\nconst Stream = require('stream').Stream;\nconst nmfetch = require('../fetch');\nconst crypto = require('crypto');\nconst shared = require('../shared');\n\n/**\n * XOAUTH2 access_token generator for Gmail.\n * Create client ID for web applications in Google API console to use it.\n * See Offline Access for receiving the needed refreshToken for an user\n * https://developers.google.com/accounts/docs/OAuth2WebServer#offline\n *\n * Usage for generating access tokens with a custom method using provisionCallback:\n * provisionCallback(user, renew, callback)\n *   * user is the username to get the token for\n *   * renew is a boolean that if true indicates that existing token failed and needs to be renewed\n *   * callback is the callback to run with (error, accessToken [, expires])\n *     * accessToken is a string\n *     * expires is an optional expire time in milliseconds\n * If provisionCallback is used, then Nodemailer does not try to attempt generating the token by itself\n *\n * @constructor\n * @param {Object} options Client information for token generation\n * @param {String} options.user User e-mail address\n * @param {String} options.clientId Client ID value\n * @param {String} options.clientSecret Client secret value\n * @param {String} options.refreshToken Refresh token for an user\n * @param {String} options.accessUrl Endpoint for token generation, defaults to 'https://accounts.google.com/o/oauth2/token'\n * @param {String} options.accessToken An existing valid accessToken\n * @param {String} options.privateKey Private key for JSW\n * @param {Number} options.expires Optional Access Token expire time in ms\n * @param {Number} options.timeout Optional TTL for Access Token in seconds\n * @param {Function} options.provisionCallback Function to run when a new access token is required\n */\nclass XOAuth2 extends Stream {\n    constructor(options, logger) {\n        super();\n\n        this.options = options || {};\n\n        if (options && options.serviceClient) {\n            if (!options.privateKey || !options.user) {\n                setImmediate(() => this.emit('error', new Error('Options \"privateKey\" and \"user\" are required for service account!')));\n                return;\n            }\n\n            let serviceRequestTimeout = Math.min(Math.max(Number(this.options.serviceRequestTimeout) || 0, 0), 3600);\n            this.options.serviceRequestTimeout = serviceRequestTimeout || 5 * 60;\n        }\n\n        this.logger = shared.getLogger(\n            {\n                logger\n            },\n            {\n                component: this.options.component || 'OAuth2'\n            }\n        );\n\n        this.provisionCallback = typeof this.options.provisionCallback === 'function' ? this.options.provisionCallback : false;\n\n        this.options.accessUrl = this.options.accessUrl || 'https://accounts.google.com/o/oauth2/token';\n        this.options.customHeaders = this.options.customHeaders || {};\n        this.options.customParams = this.options.customParams || {};\n\n        this.accessToken = this.options.accessToken || false;\n\n        if (this.options.expires && Number(this.options.expires)) {\n            this.expires = this.options.expires;\n        } else {\n            let timeout = Math.max(Number(this.options.timeout) || 0, 0);\n            this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n        }\n    }\n\n    /**\n     * Returns or generates (if previous has expired) a XOAuth2 token\n     *\n     * @param {Boolean} renew If false then use cached access token (if available)\n     * @param {Function} callback Callback function with error object and token string\n     */\n    getToken(renew, callback) {\n        if (!renew && this.accessToken && (!this.expires || this.expires > Date.now())) {\n            return callback(null, this.accessToken);\n        }\n\n        let generateCallback = (...args) => {\n            if (args[0]) {\n                this.logger.error(\n                    {\n                        err: args[0],\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Failed generating new Access Token for %s',\n                    this.options.user\n                );\n            } else {\n                this.logger.info(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Generated new Access Token for %s',\n                    this.options.user\n                );\n            }\n            callback(...args);\n        };\n\n        if (this.provisionCallback) {\n            this.provisionCallback(this.options.user, !!renew, (err, accessToken, expires) => {\n                if (!err && accessToken) {\n                    this.accessToken = accessToken;\n                    this.expires = expires || 0;\n                }\n                generateCallback(err, accessToken);\n            });\n        } else {\n            this.generateToken(generateCallback);\n        }\n    }\n\n    /**\n     * Updates token values\n     *\n     * @param {String} accessToken New access token\n     * @param {Number} timeout Access token lifetime in seconds\n     *\n     * Emits 'token': { user: User email-address, accessToken: the new accessToken, timeout: TTL in seconds}\n     */\n    updateToken(accessToken, timeout) {\n        this.accessToken = accessToken;\n        timeout = Math.max(Number(timeout) || 0, 0);\n        this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n\n        this.emit('token', {\n            user: this.options.user,\n            accessToken: accessToken || '',\n            expires: this.expires\n        });\n    }\n\n    /**\n     * Generates a new XOAuth2 token with the credentials provided at initialization\n     *\n     * @param {Function} callback Callback function with error object and token string\n     */\n    generateToken(callback) {\n        let urlOptions;\n        let loggedUrlOptions;\n        if (this.options.serviceClient) {\n            // service account - https://developers.google.com/identity/protocols/OAuth2ServiceAccount\n            let iat = Math.floor(Date.now() / 1000); // unix time\n            let tokenData = {\n                iss: this.options.serviceClient,\n                scope: this.options.scope || 'https://mail.google.com/',\n                sub: this.options.user,\n                aud: this.options.accessUrl,\n                iat,\n                exp: iat + this.options.serviceRequestTimeout\n            };\n            let token;\n            try {\n                token = this.jwtSignRS256(tokenData);\n            } catch (err) {\n                return callback(new Error('Can\\x27t generate token. Check your auth options'));\n            }\n\n            urlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: token\n            };\n\n            loggedUrlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: tokenData\n            };\n        } else {\n            if (!this.options.refreshToken) {\n                return callback(new Error('Can\\x27t create new access token for user'));\n            }\n\n            // web app - https://developers.google.com/identity/protocols/OAuth2WebServer\n            urlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: this.options.clientSecret || '',\n                refresh_token: this.options.refreshToken,\n                grant_type: 'refresh_token'\n            };\n\n            loggedUrlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: (this.options.clientSecret || '').substr(0, 6) + '...',\n                refresh_token: (this.options.refreshToken || '').substr(0, 6) + '...',\n                grant_type: 'refresh_token'\n            };\n        }\n\n        Object.keys(this.options.customParams).forEach(key => {\n            urlOptions[key] = this.options.customParams[key];\n            loggedUrlOptions[key] = this.options.customParams[key];\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'OAUTH2',\n                user: this.options.user,\n                action: 'generate'\n            },\n            'Requesting token using: %s',\n            JSON.stringify(loggedUrlOptions)\n        );\n\n        this.postRequest(this.options.accessUrl, urlOptions, this.options, (error, body) => {\n            let data;\n\n            if (error) {\n                return callback(error);\n            }\n\n            try {\n                data = JSON.parse(body.toString());\n            } catch (E) {\n                return callback(E);\n            }\n\n            if (!data || typeof data !== 'object') {\n                this.logger.debug(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'post'\n                    },\n                    'Response: %s',\n                    (body || '').toString()\n                );\n                return callback(new Error('Invalid authentication response'));\n            }\n\n            let logData = {};\n            Object.keys(data).forEach(key => {\n                if (key !== 'access_token') {\n                    logData[key] = data[key];\n                } else {\n                    logData[key] = (data[key] || '').toString().substr(0, 6) + '...';\n                }\n            });\n\n            this.logger.debug(\n                {\n                    tnx: 'OAUTH2',\n                    user: this.options.user,\n                    action: 'post'\n                },\n                'Response: %s',\n                JSON.stringify(logData)\n            );\n\n            if (data.error) {\n                // Error Response : https://tools.ietf.org/html/rfc6749#section-5.2\n                let errorMessage = data.error;\n                if (data.error_description) {\n                    errorMessage += ': ' + data.error_description;\n                }\n                if (data.error_uri) {\n                    errorMessage += ' (' + data.error_uri + ')';\n                }\n                return callback(new Error(errorMessage));\n            }\n\n            if (data.access_token) {\n                this.updateToken(data.access_token, data.expires_in);\n                return callback(null, this.accessToken);\n            }\n\n            return callback(new Error('No access token'));\n        });\n    }\n\n    /**\n     * Converts an access_token and user id into a base64 encoded XOAuth2 token\n     *\n     * @param {String} [accessToken] Access token string\n     * @return {String} Base64 encoded token for IMAP or SMTP login\n     */\n    buildXOAuth2Token(accessToken) {\n        let authData = ['user=' + (this.options.user || ''), 'auth=Bearer ' + (accessToken || this.accessToken), '', ''];\n        return Buffer.from(authData.join('\\x01'), 'utf-8').toString('base64');\n    }\n\n    /**\n     * Custom POST request handler.\n     * This is only needed to keep paths short in Windows \u2013 usually this module\n     * is a dependency of a dependency and if it tries to require something\n     * like the request module the paths get way too long to handle for Windows.\n     * As we do only a simple POST request we do not actually require complicated\n     * logic support (no redirects, no nothing) anyway.\n     *\n     * @param {String} url Url to POST to\n     * @param {String|Buffer} payload Payload to POST\n     * @param {Function} callback Callback function with (err, buff)\n     */\n    postRequest(url, payload, params, callback) {\n        let returned = false;\n\n        let chunks = [];\n        let chunklen = 0;\n\n        let req = nmfetch(url, {\n            method: 'post',\n            headers: params.customHeaders,\n            body: payload,\n            allowErrorResponse: true\n        });\n\n        req.on('readable', () => {\n            let chunk;\n            while ((chunk = req.read()) !== null) {\n                chunks.push(chunk);\n                chunklen += chunk.length;\n            }\n        });\n\n        req.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(err);\n        });\n\n        req.once('end', () => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(null, Buffer.concat(chunks, chunklen));\n        });\n    }\n\n    /**\n     * Encodes a buffer or a string into Base64url format\n     *\n     * @param {Buffer|String} data The data to convert\n     * @return {String} The encoded string\n     */\n    toBase64URL(data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(data);\n        }\n\n        return data\n            .toString('base64')\n            .replace(/[=]+/g, '') // remove '='s\n            .replace(/\\+/g, '-') // '+' \u2192 '-'\n            .replace(/\\//g, '_'); // '/' \u2192 '_'\n    }\n\n    /**\n     * Creates a JSON Web Token signed with RS256 (SHA256 + RSA)\n     *\n     * @param {Object} payload The payload to include in the generated token\n     * @return {String} The generated and signed token\n     */\n    jwtSignRS256(payload) {\n        payload = ['{\"alg\":\"RS256\",\"typ\":\"JWT\"}', JSON.stringify(payload)].map(val => this.toBase64URL(val)).join('.');\n        let signature = crypto.createSign('RSA-SHA256').update(payload).sign(this.options.privateKey);\n        return payload + '.' + this.toBase64URL(signature);\n    }\n}\n\nmodule.exports = XOAuth2;\n", "'use strict';\n\nconst SMTPConnection = require('../smtp-connection');\nconst assign = require('../shared').assign;\nconst XOAuth2 = require('../xoauth2');\nconst EventEmitter = require('events');\n\n/**\n * Creates an element for the pool\n *\n * @constructor\n * @param {Object} options SMTPPool instance\n */\nclass PoolResource extends EventEmitter {\n    constructor(pool) {\n        super();\n\n        this.pool = pool;\n        this.options = pool.options;\n        this.logger = this.pool.logger;\n\n        if (this.options.auth) {\n            switch ((this.options.auth.type || '').toString().toUpperCase()) {\n                case 'OAUTH2': {\n                    let oauth2 = new XOAuth2(this.options.auth, this.logger);\n                    oauth2.provisionCallback = (this.pool.mailer && this.pool.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                    this.auth = {\n                        type: 'OAUTH2',\n                        user: this.options.auth.user,\n                        oauth2,\n                        method: 'XOAUTH2'\n                    };\n                    oauth2.on('token', token => this.pool.mailer.emit('token', token));\n                    oauth2.on('error', err => this.emit('error', err));\n                    break;\n                }\n                default:\n                    if (!this.options.auth.user && !this.options.auth.pass) {\n                        break;\n                    }\n                    this.auth = {\n                        type: (this.options.auth.type || '').toString().toUpperCase() || 'LOGIN',\n                        user: this.options.auth.user,\n                        credentials: {\n                            user: this.options.auth.user || '',\n                            pass: this.options.auth.pass,\n                            options: this.options.auth.options\n                        },\n                        method: (this.options.auth.method || '').trim().toUpperCase() || this.options.authMethod || false\n                    };\n            }\n        }\n\n        this._connection = false;\n        this._connected = false;\n\n        this.messages = 0;\n        this.available = true;\n    }\n\n    /**\n     * Initiates a connection to the SMTP server\n     *\n     * @param {Function} callback Callback function to run once the connection is established or failed\n     */\n    connect(callback) {\n        this.pool.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            this.connection = new SMTPConnection(options);\n\n            this.connection.once('error', err => {\n                this.emit('error', err);\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(err);\n            });\n\n            this.connection.once('end', () => {\n                this.close();\n                if (returned) {\n                    return;\n                }\n                returned = true;\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (this.connection && this.connection._socket && this.connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            this.connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (this.auth && (this.connection.allowsAuth || options.forceAuth)) {\n                    this.connection.login(this.auth, err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n\n                        if (err) {\n                            this.connection.close();\n                            this.emit('error', err);\n                            return callback(err);\n                        }\n\n                        this._connected = true;\n                        callback(null, true);\n                    });\n                } else {\n                    returned = true;\n                    this._connected = true;\n                    return callback(null, true);\n                }\n            });\n        });\n    }\n\n    /**\n     * Sends an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (!this._connected) {\n            return this.connect(err => {\n                if (err) {\n                    return callback(err);\n                }\n                return this.send(mail, callback);\n            });\n        }\n\n        let envelope = mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId,\n                cid: this.id\n            },\n            'Sending message %s using #%s to <%s>',\n            messageId,\n            this.id,\n            recipients.join(', ')\n        );\n\n        if (mail.data.dsn) {\n            envelope.dsn = mail.data.dsn;\n        }\n\n        this.connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n            this.messages++;\n\n            if (err) {\n                this.connection.close();\n                this.emit('error', err);\n                return callback(err);\n            }\n\n            info.envelope = {\n                from: envelope.from,\n                to: envelope.to\n            };\n            info.messageId = messageId;\n\n            setImmediate(() => {\n                let err;\n                if (this.messages >= this.options.maxMessages) {\n                    err = new Error('Resource exhausted');\n                    err.code = 'EMAXLIMIT';\n                    this.connection.close();\n                    this.emit('error', err);\n                } else {\n                    this.pool._checkRateLimit(() => {\n                        this.available = true;\n                        this.emit('available');\n                    });\n                }\n            });\n\n            callback(null, info);\n        });\n    }\n\n    /**\n     * Closes the connection\n     */\n    close() {\n        this._connected = false;\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        if (this.connection) {\n            this.connection.close();\n        }\n        this.emit('close');\n    }\n}\n\nmodule.exports = PoolResource;\n", "'use strict';\n\nconst services = require('./services.json');\nconst normalized = {};\n\nObject.keys(services).forEach(key => {\n    let service = services[key];\n\n    normalized[normalizeKey(key)] = normalizeService(service);\n\n    [].concat(service.aliases || []).forEach(alias => {\n        normalized[normalizeKey(alias)] = normalizeService(service);\n    });\n\n    [].concat(service.domains || []).forEach(domain => {\n        normalized[normalizeKey(domain)] = normalizeService(service);\n    });\n});\n\nfunction normalizeKey(key) {\n    return key.replace(/[^a-zA-Z0-9.-]/g, '').toLowerCase();\n}\n\nfunction normalizeService(service) {\n    let filter = ['domains', 'aliases'];\n    let response = {};\n\n    Object.keys(service).forEach(key => {\n        if (filter.indexOf(key) < 0) {\n            response[key] = service[key];\n        }\n    });\n\n    return response;\n}\n\n/**\n * Resolves SMTP config for given key. Key can be a name (like 'Gmail'), alias (like 'Google Mail') or\n * an email address (like 'test@googlemail.com').\n *\n * @param {String} key [description]\n * @returns {Object} SMTP config or false if not found\n */\nmodule.exports = function (key) {\n    key = normalizeKey(key.split('@').pop());\n    return normalized[key] || false;\n};\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst PoolResource = require('./pool-resource');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP pool transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options SMTP Connection options\n */\nclass SMTPPool extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.options.maxConnections = this.options.maxConnections || 5;\n        this.options.maxMessages = this.options.maxMessages || 100;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-pool'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP (pool)';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        this._rateLimit = {\n            counter: 0,\n            timeout: null,\n            waiting: [],\n            checkpoint: false,\n            delta: Number(this.options.rateDelta) || 1000,\n            limit: Number(this.options.rateLimit) || 0\n        };\n        this._closed = false;\n        this._queue = [];\n        this._connections = [];\n        this._connectionCounter = 0;\n\n        this.idling = true;\n\n        setImmediate(() => {\n            if (this.idling) {\n                this.emit('idle');\n            }\n        });\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    /**\n     * Queues an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (this._closed) {\n            return false;\n        }\n\n        this._queue.push({\n            mail,\n            requeueAttempts: 0,\n            callback\n        });\n\n        if (this.idling && this._queue.length >= this.options.maxConnections) {\n            this.idling = false;\n        }\n\n        setImmediate(() => this._processMessages());\n\n        return true;\n    }\n\n    /**\n     * Closes all connections in the pool. If there is a message being sent, the connection\n     * is closed later\n     */\n    close() {\n        let connection;\n        let len = this._connections.length;\n        this._closed = true;\n\n        // clear rate limit timer if it exists\n        clearTimeout(this._rateLimit.timeout);\n\n        if (!len && !this._queue.length) {\n            return;\n        }\n\n        // remove all available connections\n        for (let i = len - 1; i >= 0; i--) {\n            if (this._connections[i] && this._connections[i].available) {\n                connection = this._connections[i];\n                connection.close();\n                this.logger.info(\n                    {\n                        tnx: 'connection',\n                        cid: connection.id,\n                        action: 'removed'\n                    },\n                    'Connection #%s removed',\n                    connection.id\n                );\n            }\n        }\n\n        if (len && !this._connections.length) {\n            this.logger.debug(\n                {\n                    tnx: 'connection'\n                },\n                'All connections removed'\n            );\n        }\n\n        if (!this._queue.length) {\n            return;\n        }\n\n        // make sure that entire queue would be cleaned\n        let invokeCallbacks = () => {\n            if (!this._queue.length) {\n                this.logger.debug(\n                    {\n                        tnx: 'connection'\n                    },\n                    'Pending queue entries cleared'\n                );\n                return;\n            }\n            let entry = this._queue.shift();\n            if (entry && typeof entry.callback === 'function') {\n                try {\n                    entry.callback(new Error('Connection pool was closed'));\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n            }\n            setImmediate(invokeCallbacks);\n        };\n        setImmediate(invokeCallbacks);\n    }\n\n    /**\n     * Check the queue and available connections. If there is a message to be sent and there is\n     * an available connection, then use this connection to send the mail\n     */\n    _processMessages() {\n        let connection;\n        let i, len;\n\n        // do nothing if already closed\n        if (this._closed) {\n            return;\n        }\n\n        // do nothing if queue is empty\n        if (!this._queue.length) {\n            if (!this.idling) {\n                // no pending jobs\n                this.idling = true;\n                this.emit('idle');\n            }\n            return;\n        }\n\n        // find first available connection\n        for (i = 0, len = this._connections.length; i < len; i++) {\n            if (this._connections[i].available) {\n                connection = this._connections[i];\n                break;\n            }\n        }\n\n        if (!connection && this._connections.length < this.options.maxConnections) {\n            connection = this._createConnection();\n        }\n\n        if (!connection) {\n            // no more free connection slots available\n            this.idling = false;\n            return;\n        }\n\n        // check if there is free space in the processing queue\n        if (!this.idling && this._queue.length < this.options.maxConnections) {\n            this.idling = true;\n            this.emit('idle');\n        }\n\n        let entry = (connection.queueEntry = this._queue.shift());\n        entry.messageId = (connection.queueEntry.mail.message.getHeader('message-id') || '').replace(/[<>\\s]/g, '');\n\n        connection.available = false;\n\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: entry.messageId,\n                action: 'assign'\n            },\n            'Assigned message <%s> to #%s (%s)',\n            entry.messageId,\n            connection.id,\n            connection.messages + 1\n        );\n\n        if (this._rateLimit.limit) {\n            this._rateLimit.counter++;\n            if (!this._rateLimit.checkpoint) {\n                this._rateLimit.checkpoint = Date.now();\n            }\n        }\n\n        connection.send(entry.mail, (err, info) => {\n            // only process callback if current handler is not changed\n            if (entry === connection.queueEntry) {\n                try {\n                    entry.callback(err, info);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n        });\n    }\n\n    /**\n     * Creates a new pool resource\n     */\n    _createConnection() {\n        let connection = new PoolResource(this);\n\n        connection.id = ++this._connectionCounter;\n\n        this.logger.info(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                action: 'conection'\n            },\n            'Created new pool resource #%s',\n            connection.id\n        );\n\n        // resource comes available\n        connection.on('available', () => {\n            this.logger.debug(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'available'\n                },\n                'Connection #%s became available',\n                connection.id\n            );\n\n            if (this._closed) {\n                // if already closed run close() that will remove this connections from connections list\n                this.close();\n            } else {\n                // check if there's anything else to send\n                this._processMessages();\n            }\n        });\n\n        // resource is terminated with an error\n        connection.once('error', err => {\n            if (err.code !== 'EMAXLIMIT') {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'pool',\n                        cid: connection.id\n                    },\n                    'Pool Error for #%s: %s',\n                    connection.id,\n                    err.message\n                );\n            } else {\n                this.logger.debug(\n                    {\n                        tnx: 'pool',\n                        cid: connection.id,\n                        action: 'maxlimit'\n                    },\n                    'Max messages limit exchausted for #%s',\n                    connection.id\n                );\n            }\n\n            if (connection.queueEntry) {\n                try {\n                    connection.queueEntry.callback(err);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n\n            // remove the erroneus connection from connections list\n            this._removeConnection(connection);\n\n            this._continueProcessing();\n        });\n\n        connection.once('close', () => {\n            this.logger.info(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'closed'\n                },\n                'Connection #%s was closed',\n                connection.id\n            );\n\n            this._removeConnection(connection);\n\n            if (connection.queueEntry) {\n                // If the connection closed when sending, add the message to the queue again\n                // if max number of requeues is not reached yet\n                // Note that we must wait a bit.. because the callback of the 'error' handler might be called\n                // in the next event loop\n                setTimeout(() => {\n                    if (connection.queueEntry) {\n                        if (this._shouldRequeuOnConnectionClose(connection.queueEntry)) {\n                            this._requeueEntryOnConnectionClose(connection);\n                        } else {\n                            this._failDeliveryOnConnectionClose(connection);\n                        }\n                    }\n                    this._continueProcessing();\n                }, 50);\n            } else {\n                this._continueProcessing();\n            }\n        });\n\n        this._connections.push(connection);\n\n        return connection;\n    }\n\n    _shouldRequeuOnConnectionClose(queueEntry) {\n        if (this.options.maxRequeues === undefined || this.options.maxRequeues < 0) {\n            return true;\n        }\n\n        return queueEntry.requeueAttempts < this.options.maxRequeues;\n    }\n\n    _failDeliveryOnConnectionClose(connection) {\n        if (connection.queueEntry && connection.queueEntry.callback) {\n            try {\n                connection.queueEntry.callback(new Error('Reached maximum number of retries after connection was closed'));\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'callback',\n                        messageId: connection.queueEntry.messageId,\n                        cid: connection.id\n                    },\n                    'Callback error for #%s: %s',\n                    connection.id,\n                    E.message\n                );\n            }\n            connection.queueEntry = false;\n        }\n    }\n\n    _requeueEntryOnConnectionClose(connection) {\n        connection.queueEntry.requeueAttempts = connection.queueEntry.requeueAttempts + 1;\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: connection.queueEntry.messageId,\n                action: 'requeue'\n            },\n            'Re-queued message <%s> for #%s. Attempt: #%s',\n            connection.queueEntry.messageId,\n            connection.id,\n            connection.queueEntry.requeueAttempts\n        );\n        this._queue.unshift(connection.queueEntry);\n        connection.queueEntry = false;\n    }\n\n    /**\n     * Continue to process message if the pool hasn't closed\n     */\n    _continueProcessing() {\n        if (this._closed) {\n            this.close();\n        } else {\n            setTimeout(() => this._processMessages(), 100);\n        }\n    }\n\n    /**\n     * Remove resource from pool\n     *\n     * @param {Object} connection The PoolResource to remove\n     */\n    _removeConnection(connection) {\n        let index = this._connections.indexOf(connection);\n\n        if (index !== -1) {\n            this._connections.splice(index, 1);\n        }\n    }\n\n    /**\n     * Checks if connections have hit current rate limit and if so, queues the availability callback\n     *\n     * @param {Function} callback Callback function to run once rate limiter has been cleared\n     */\n    _checkRateLimit(callback) {\n        if (!this._rateLimit.limit) {\n            return callback();\n        }\n\n        let now = Date.now();\n\n        if (this._rateLimit.counter < this._rateLimit.limit) {\n            return callback();\n        }\n\n        this._rateLimit.waiting.push(callback);\n\n        if (this._rateLimit.checkpoint <= now - this._rateLimit.delta) {\n            return this._clearRateLimit();\n        } else if (!this._rateLimit.timeout) {\n            this._rateLimit.timeout = setTimeout(() => this._clearRateLimit(), this._rateLimit.delta - (now - this._rateLimit.checkpoint));\n            this._rateLimit.checkpoint = now;\n        }\n    }\n\n    /**\n     * Clears current rate limit limitation and runs paused callback\n     */\n    _clearRateLimit() {\n        clearTimeout(this._rateLimit.timeout);\n        this._rateLimit.timeout = null;\n        this._rateLimit.counter = 0;\n        this._rateLimit.checkpoint = false;\n\n        // resume all paused connections\n        while (this._rateLimit.waiting.length) {\n            let cb = this._rateLimit.waiting.shift();\n            setImmediate(cb);\n        }\n    }\n\n    /**\n     * Returns true if there are free slots in the queue\n     */\n    isIdle() {\n        return this.idling;\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let auth = new PoolResource(this).auth;\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else if (!auth && connection.allowsAuth && options.forceAuth) {\n                    let err = new Error('Authentication info was not provided');\n                    err.code = 'NoAuth';\n\n                    returned = true;\n                    connection.close();\n                    return callback(err);\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPPool;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst XOAuth2 = require('../xoauth2');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options Connection options\n */\nclass SMTPTransport extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-transport'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        if (this.options.auth) {\n            this.auth = this.getAuth({});\n        }\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    getAuth(authOpts) {\n        if (!authOpts) {\n            return this.auth;\n        }\n\n        let hasAuth = false;\n        let authData = {};\n\n        if (this.options.auth && typeof this.options.auth === 'object') {\n            Object.keys(this.options.auth).forEach(key => {\n                hasAuth = true;\n                authData[key] = this.options.auth[key];\n            });\n        }\n\n        if (authOpts && typeof authOpts === 'object') {\n            Object.keys(authOpts).forEach(key => {\n                hasAuth = true;\n                authData[key] = authOpts[key];\n            });\n        }\n\n        if (!hasAuth) {\n            return false;\n        }\n\n        switch ((authData.type || '').toString().toUpperCase()) {\n            case 'OAUTH2': {\n                if (!authData.service && !authData.user) {\n                    return false;\n                }\n                let oauth2 = new XOAuth2(authData, this.logger);\n                oauth2.provisionCallback = (this.mailer && this.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                oauth2.on('token', token => this.mailer.emit('token', token));\n                oauth2.on('error', err => this.emit('error', err));\n                return {\n                    type: 'OAUTH2',\n                    user: authData.user,\n                    oauth2,\n                    method: 'XOAUTH2'\n                };\n            }\n            default:\n                return {\n                    type: (authData.type || '').toString().toUpperCase() || 'LOGIN',\n                    user: authData.user,\n                    credentials: {\n                        user: authData.user || '',\n                        pass: authData.pass,\n                        options: authData.options\n                    },\n                    method: (authData.method || '').trim().toUpperCase() || this.options.authMethod || false\n                };\n        }\n    }\n\n    /**\n     * Sends an e-mail using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                // only copy options if we need to modify it\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    returned = true;\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (connection && connection._socket && connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            let sendMessage = () => {\n                let envelope = mail.message.getEnvelope();\n                let messageId = mail.message.messageId();\n\n                let recipients = [].concat(envelope.to || []);\n                if (recipients.length > 3) {\n                    recipients.push('...and ' + recipients.splice(2).length + ' more');\n                }\n\n                if (mail.data.dsn) {\n                    envelope.dsn = mail.data.dsn;\n                }\n\n                this.logger.info(\n                    {\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Sending message %s to <%s>',\n                    messageId,\n                    recipients.join(', ')\n                );\n\n                connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n                    returned = true;\n                    connection.close();\n                    if (err) {\n                        this.logger.error(\n                            {\n                                err,\n                                tnx: 'send'\n                            },\n                            'Send error for %s: %s',\n                            messageId,\n                            err.message\n                        );\n                        return callback(err);\n                    }\n                    info.envelope = {\n                        from: envelope.from,\n                        to: envelope.to\n                    };\n                    info.messageId = messageId;\n                    try {\n                        return callback(null, info);\n                    } catch (E) {\n                        this.logger.error(\n                            {\n                                err: E,\n                                tnx: 'callback'\n                            },\n                            'Callback error for %s: %s',\n                            messageId,\n                            E.message\n                        );\n                    }\n                });\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let auth = this.getAuth(mail.data.auth);\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (auth && auth !== this.auth && auth.oauth2) {\n                            auth.oauth2.removeAllListeners();\n                        }\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        sendMessage();\n                    });\n                } else {\n                    sendMessage();\n                }\n            });\n        });\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let authData = this.getAuth({});\n\n                if (authData && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(authData, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else if (!authData && connection.allowsAuth && options.forceAuth) {\n                    let err = new Error('Authentication info was not provided');\n                    err.code = 'NoAuth';\n\n                    returned = true;\n                    connection.close();\n                    return callback(err);\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n\n    /**\n     * Releases resources\n     */\n    close() {\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        this.emit('close');\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPTransport;\n", "'use strict';\n\nconst spawn = require('child_process').spawn;\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for Sendmail\n *\n * Possible options can be the following:\n *\n *  * **path** optional path to sendmail binary\n *  * **newline** either 'windows' or 'unix'\n *  * **args** an array of arguments for the sendmail binary\n *\n * @constructor\n * @param {Object} optional config parameter for Sendmail\n */\nclass SendmailTransport {\n    constructor(options) {\n        options = options || {};\n\n        // use a reference to spawn for mocking purposes\n        this._spawn = spawn;\n\n        this.options = options || {};\n\n        this.name = 'Sendmail';\n        this.version = packageData.version;\n\n        this.path = 'sendmail';\n        this.args = false;\n        this.winbreak = false;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'sendmail'\n        });\n\n        if (options) {\n            if (typeof options === 'string') {\n                this.path = options;\n            } else if (typeof options === 'object') {\n                if (options.path) {\n                    this.path = options.path;\n                }\n                if (Array.isArray(options.args)) {\n                    this.args = options.args;\n                }\n                this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n            }\n        }\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n        let args;\n        let sendmail;\n        let returned;\n\n        const hasInvalidAddresses = []\n            .concat(envelope.from || [])\n            .concat(envelope.to || [])\n            .some(addr => /^-/.test(addr));\n        if (hasInvalidAddresses) {\n            return done(new Error('Can not send mail. Invalid envelope addresses.'));\n        }\n\n        if (this.args) {\n            // force -i to keep single dots\n            args = ['-i'].concat(this.args).concat(envelope.to);\n        } else {\n            args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);\n        }\n\n        let callback = err => {\n            if (returned) {\n                // ignore any additional responses, already done\n                return;\n            }\n            returned = true;\n            if (typeof done === 'function') {\n                if (err) {\n                    return done(err);\n                } else {\n                    return done(null, {\n                        envelope: mail.data.envelope || mail.message.getEnvelope(),\n                        messageId,\n                        response: 'Messages queued for delivery'\n                    });\n                }\n            }\n        };\n\n        try {\n            sendmail = this._spawn(this.path, args);\n        } catch (E) {\n            this.logger.error(\n                {\n                    err: E,\n                    tnx: 'spawn',\n                    messageId\n                },\n                'Error occurred while spawning sendmail. %s',\n                E.message\n            );\n            return callback(E);\n        }\n\n        if (sendmail) {\n            sendmail.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'spawn',\n                        messageId\n                    },\n                    'Error occurred when sending message %s. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            sendmail.once('exit', code => {\n                if (!code) {\n                    return callback();\n                }\n                let err;\n                if (code === 127) {\n                    err = new Error('Sendmail command not found, process exited with code ' + code);\n                } else {\n                    err = new Error('Sendmail exited with code ' + code);\n                }\n\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error sending message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n            sendmail.once('close', callback);\n\n            sendmail.stdin.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when piping message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            let recipients = [].concat(envelope.to || []);\n            if (recipients.length > 3) {\n                recipients.push('...and ' + recipients.splice(2).length + ' more');\n            }\n            this.logger.info(\n                {\n                    tnx: 'send',\n                    messageId\n                },\n                'Sending message %s to <%s>',\n                messageId,\n                recipients.join(', ')\n            );\n\n            let sourceStream = mail.message.createReadStream();\n            sourceStream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when generating message %s. %s',\n                    messageId,\n                    err.message\n                );\n                sendmail.kill('SIGINT'); // do not deliver the message\n                callback(err);\n            });\n\n            sourceStream.pipe(sendmail.stdin);\n        } else {\n            return callback(new Error('sendmail was not found'));\n        }\n    }\n}\n\nmodule.exports = SendmailTransport;\n", "'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for streaming\n *\n * Possible options can be the following:\n *\n *  * **buffer** if true, then returns the message as a Buffer object instead of a stream\n *  * **newline** either 'windows' or 'unix'\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass StreamTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'StreamTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'stream-transport'\n        });\n\n        this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to handler that sends it\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // We probably need this in the output\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s> using %s line breaks',\n            messageId,\n            recipients.join(', '),\n            this.winbreak ? '<CR><LF>' : '<LF>'\n        );\n\n        setImmediate(() => {\n            let stream;\n\n            try {\n                stream = mail.message.createReadStream();\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Creating send stream failed for %s. %s',\n                    messageId,\n                    E.message\n                );\n                return done(E);\n            }\n\n            if (!this.options.buffer) {\n                stream.once('error', err => {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                });\n                return done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: stream\n                });\n            }\n\n            let chunks = [];\n            let chunklen = 0;\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            stream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Failed creating message for %s. %s',\n                    messageId,\n                    err.message\n                );\n                return done(err);\n            });\n\n            stream.on('end', () =>\n                done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: Buffer.concat(chunks, chunklen)\n                })\n            );\n        });\n    }\n}\n\nmodule.exports = StreamTransport;\n", "'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object to generate JSON output\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass JSONTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'JSONTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'json-transport'\n        });\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Composing JSON structure of %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        setImmediate(() => {\n            mail.normalize((err, data) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed building JSON structure for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    return done(err);\n                }\n\n                delete data.envelope;\n                delete data.normalizedHeaders;\n\n                return done(null, {\n                    envelope,\n                    messageId,\n                    message: this.options.skipEncoding ? data : JSON.stringify(data)\n                });\n            });\n        });\n    }\n}\n\nmodule.exports = JSONTransport;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\nconst LeWindows = require('../mime-node/le-windows');\n\n/**\n * Generates a Transport object for AWS SES\n *\n * Possible options can be the following:\n *\n *  * **sendingRate** optional Number specifying how many messages per second should be delivered to SES\n *  * **maxConnections** optional Number specifying max number of parallel connections to SES\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass SESTransport extends EventEmitter {\n    constructor(options) {\n        super();\n        options = options || {};\n\n        this.options = options || {};\n        this.ses = this.options.SES;\n\n        this.name = 'SESTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'ses-transport'\n        });\n\n        // parallel sending connections\n        this.maxConnections = Number(this.options.maxConnections) || Infinity;\n        this.connections = 0;\n\n        // max messages per second\n        this.sendingRate = Number(this.options.sendingRate) || Infinity;\n        this.sendingRateTTL = null;\n        this.rateInterval = 1000; // milliseconds\n        this.rateMessages = [];\n\n        this.pending = [];\n\n        this.idling = true;\n\n        setImmediate(() => {\n            if (this.idling) {\n                this.emit('idle');\n            }\n        });\n    }\n\n    /**\n     * Schedules a sending of a message\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, callback) {\n        if (this.connections >= this.maxConnections) {\n            this.idling = false;\n            return this.pending.push({\n                mail,\n                callback\n            });\n        }\n\n        if (!this._checkSendingRate()) {\n            this.idling = false;\n            return this.pending.push({\n                mail,\n                callback\n            });\n        }\n\n        this._send(mail, (...args) => {\n            setImmediate(() => callback(...args));\n            this._sent();\n        });\n    }\n\n    _checkRatedQueue() {\n        if (this.connections >= this.maxConnections || !this._checkSendingRate()) {\n            return;\n        }\n\n        if (!this.pending.length) {\n            if (!this.idling) {\n                this.idling = true;\n                this.emit('idle');\n            }\n            return;\n        }\n\n        let next = this.pending.shift();\n        this._send(next.mail, (...args) => {\n            setImmediate(() => next.callback(...args));\n            this._sent();\n        });\n    }\n\n    _checkSendingRate() {\n        clearTimeout(this.sendingRateTTL);\n\n        let now = Date.now();\n        let oldest = false;\n        // delete older messages\n        for (let i = this.rateMessages.length - 1; i >= 0; i--) {\n            if (this.rateMessages[i].ts >= now - this.rateInterval && (!oldest || this.rateMessages[i].ts < oldest)) {\n                oldest = this.rateMessages[i].ts;\n            }\n\n            if (this.rateMessages[i].ts < now - this.rateInterval && !this.rateMessages[i].pending) {\n                this.rateMessages.splice(i, 1);\n            }\n        }\n\n        if (this.rateMessages.length < this.sendingRate) {\n            return true;\n        }\n\n        let delay = Math.max(oldest + 1001, now + 20);\n        this.sendingRateTTL = setTimeout(() => this._checkRatedQueue(), now - delay);\n\n        try {\n            this.sendingRateTTL.unref();\n        } catch (E) {\n            // Ignore. Happens on envs with non-node timer implementation\n        }\n\n        return false;\n    }\n\n    _sent() {\n        this.connections--;\n        this._checkRatedQueue();\n    }\n\n    /**\n     * Returns true if there are free slots in the queue\n     */\n    isIdle() {\n        return this.idling;\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to SES\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    _send(mail, callback) {\n        let statObject = {\n            ts: Date.now(),\n            pending: true\n        };\n        this.connections++;\n        this.rateMessages.push(statObject);\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        let getRawMessage = next => {\n            // do not use Message-ID and Date in DKIM signature\n            if (!mail.data._dkim) {\n                mail.data._dkim = {};\n            }\n            if (mail.data._dkim.skipFields && typeof mail.data._dkim.skipFields === 'string') {\n                mail.data._dkim.skipFields += ':date:message-id';\n            } else {\n                mail.data._dkim.skipFields = 'date:message-id';\n            }\n\n            let sourceStream = mail.message.createReadStream();\n            let stream = sourceStream.pipe(new LeWindows());\n            let chunks = [];\n            let chunklen = 0;\n\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            sourceStream.once('error', err => stream.emit('error', err));\n\n            stream.once('error', err => {\n                next(err);\n            });\n\n            stream.once('end', () => next(null, Buffer.concat(chunks, chunklen)));\n        };\n\n        setImmediate(() =>\n            getRawMessage((err, raw) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    statObject.pending = false;\n                    return callback(err);\n                }\n\n                let sesMessage = {\n                    RawMessage: {\n                        // required\n                        Data: raw // required\n                    },\n                    Source: envelope.from,\n                    Destinations: envelope.to\n                };\n\n                Object.keys(mail.data.ses || {}).forEach(key => {\n                    sesMessage[key] = mail.data.ses[key];\n                });\n\n                let ses = (this.ses.aws ? this.ses.ses : this.ses) || {};\n                let aws = this.ses.aws || {};\n\n                let getRegion = cb => {\n                    if (ses.config && typeof ses.config.region === 'function') {\n                        // promise\n                        return ses.config\n                            .region()\n                            .then(region => cb(null, region))\n                            .catch(err => cb(err));\n                    }\n                    return cb(null, (ses.config && ses.config.region) || 'us-east-1');\n                };\n\n                getRegion((err, region) => {\n                    if (err || !region) {\n                        region = 'us-east-1';\n                    }\n\n                    let sendPromise;\n                    if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {\n                        // v3 API\n                        sendPromise = ses.send(new aws.SendRawEmailCommand(sesMessage));\n                    } else {\n                        // v2 API\n                        sendPromise = ses.sendRawEmail(sesMessage).promise();\n                    }\n\n                    sendPromise\n                        .then(data => {\n                            if (region === 'us-east-1') {\n                                region = 'email';\n                            }\n\n                            statObject.pending = false;\n                            callback(null, {\n                                envelope: {\n                                    from: envelope.from,\n                                    to: envelope.to\n                                },\n                                messageId: '<' + data.MessageId + (!/@/.test(data.MessageId) ? '@' + region + '.amazonses.com' : '') + '>',\n                                response: data.MessageId,\n                                raw\n                            });\n                        })\n                        .catch(err => {\n                            this.logger.error(\n                                {\n                                    err,\n                                    tnx: 'send'\n                                },\n                                'Send error for %s: %s',\n                                messageId,\n                                err.message\n                            );\n                            statObject.pending = false;\n                            callback(err);\n                        });\n                });\n            })\n        );\n    }\n\n    /**\n     * Verifies SES configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n        let ses = (this.ses.aws ? this.ses.ses : this.ses) || {};\n        let aws = this.ses.aws || {};\n\n        const sesMessage = {\n            RawMessage: {\n                // required\n                Data: 'From: invalid@invalid\\r\\nTo: invalid@invalid\\r\\n Subject: Invalid\\r\\n\\r\\nInvalid'\n            },\n            Source: 'invalid@invalid',\n            Destinations: ['invalid@invalid']\n        };\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n        const cb = err => {\n            if (err && (err.code || err.Code) !== 'InvalidParameterValue') {\n                return callback(err);\n            }\n            return callback(null, true);\n        };\n\n        if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {\n            // v3 API\n            sesMessage.RawMessage.Data = Buffer.from(sesMessage.RawMessage.Data);\n            ses.send(new aws.SendRawEmailCommand(sesMessage), cb);\n        } else {\n            // v2 API\n            ses.sendRawEmail(sesMessage, cb);\n        }\n\n        return promise;\n    }\n}\n\nmodule.exports = SESTransport;\n", "'use strict';\n\nconst Mailer = require('./mailer');\nconst shared = require('./shared');\nconst SMTPPool = require('./smtp-pool');\nconst SMTPTransport = require('./smtp-transport');\nconst SendmailTransport = require('./sendmail-transport');\nconst StreamTransport = require('./stream-transport');\nconst JSONTransport = require('./json-transport');\nconst SESTransport = require('./ses-transport');\nconst nmfetch = require('./fetch');\nconst packageData = require('../package.json');\n\nconst ETHEREAL_API = (process.env.ETHEREAL_API || 'https://api.nodemailer.com').replace(/\\/+$/, '');\nconst ETHEREAL_WEB = (process.env.ETHEREAL_WEB || 'https://ethereal.email').replace(/\\/+$/, '');\nconst ETHEREAL_CACHE = ['true', 'yes', 'y', '1'].includes((process.env.ETHEREAL_CACHE || 'yes').toString().trim().toLowerCase());\n\nlet testAccount = false;\n\nmodule.exports.createTransport = function (transporter, defaults) {\n    let urlConfig;\n    let options;\n    let mailer;\n\n    if (\n        // provided transporter is a configuration object, not transporter plugin\n        (typeof transporter === 'object' && typeof transporter.send !== 'function') ||\n        // provided transporter looks like a connection url\n        (typeof transporter === 'string' && /^(smtps?|direct):/i.test(transporter))\n    ) {\n        if ((urlConfig = typeof transporter === 'string' ? transporter : transporter.url)) {\n            // parse a configuration URL into configuration options\n            options = shared.parseConnectionUrl(urlConfig);\n        } else {\n            options = transporter;\n        }\n\n        if (options.pool) {\n            transporter = new SMTPPool(options);\n        } else if (options.sendmail) {\n            transporter = new SendmailTransport(options);\n        } else if (options.streamTransport) {\n            transporter = new StreamTransport(options);\n        } else if (options.jsonTransport) {\n            transporter = new JSONTransport(options);\n        } else if (options.SES) {\n            transporter = new SESTransport(options);\n        } else {\n            transporter = new SMTPTransport(options);\n        }\n    }\n\n    mailer = new Mailer(transporter, options, defaults);\n\n    return mailer;\n};\n\nmodule.exports.createTestAccount = function (apiUrl, callback) {\n    let promise;\n\n    if (!callback && typeof apiUrl === 'function') {\n        callback = apiUrl;\n        apiUrl = false;\n    }\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = shared.callbackPromise(resolve, reject);\n        });\n    }\n\n    if (ETHEREAL_CACHE && testAccount) {\n        setImmediate(() => callback(null, testAccount));\n        return promise;\n    }\n\n    apiUrl = apiUrl || ETHEREAL_API;\n\n    let chunks = [];\n    let chunklen = 0;\n\n    let req = nmfetch(apiUrl + '/user', {\n        contentType: 'application/json',\n        method: 'POST',\n        body: Buffer.from(\n            JSON.stringify({\n                requestor: packageData.name,\n                version: packageData.version\n            })\n        )\n    });\n\n    req.on('readable', () => {\n        let chunk;\n        while ((chunk = req.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    req.once('error', err => callback(err));\n\n    req.once('end', () => {\n        let res = Buffer.concat(chunks, chunklen);\n        let data;\n        let err;\n        try {\n            data = JSON.parse(res.toString());\n        } catch (E) {\n            err = E;\n        }\n        if (err) {\n            return callback(err);\n        }\n        if (data.status !== 'success' || data.error) {\n            return callback(new Error(data.error || 'Request failed'));\n        }\n        delete data.status;\n        testAccount = data;\n        callback(null, testAccount);\n    });\n\n    return promise;\n};\n\nmodule.exports.getTestMessageUrl = function (info) {\n    if (!info || !info.response) {\n        return false;\n    }\n\n    let infoProps = new Map();\n    info.response.replace(/\\[([^\\]]+)\\]$/, (m, props) => {\n        props.replace(/\\b([A-Z0-9]+)=([^\\s]+)/g, (m, key, value) => {\n            infoProps.set(key, value);\n        });\n    });\n\n    if (infoProps.has('STATUS') && infoProps.has('MSGID')) {\n        return (testAccount.web || ETHEREAL_WEB) + '/message/' + infoProps.get('MSGID');\n    }\n\n    return false;\n};\n", "import { Handler } from \"@netlify/functions\";\nimport { License } from \"./types\";\n\nimport getLicenseData from \"./src/util/getLicenseData\";\nimport * as Sentry from \"@sentry/node\";\nimport Stripe from \"stripe\";\nimport sendEmails from \"./src/util/sendEmails\";\nimport { default as headers } from \"./src/constants/defaultHeaders\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2020-08-27\",\n});\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n});\n\nconst handler: Handler = async (event, _context) => {\n  if (event.httpMethod !== \"POST\") {\n    return {\n      statusCode: 200,\n      headers,\n      body: JSON.stringify({\n        message: \"Not a valid request!\",\n      }),\n    };\n  }\n\n  const sig = event.headers[\"stripe-signature\"];\n  let stripeEvent;\n\n  try {\n    stripeEvent = stripe.webhooks.constructEvent(\n      event.body,\n      sig,\n      process.env.STRIPE_WEBHOOK_SECRET,\n    );\n  } catch (err) {\n    Sentry.captureException(err);\n    console.error(err.message);\n\n    return {\n      statusCode: 400,\n      headers,\n      body: JSON.stringify({\n        message: `Webhook Error: ${err.message}`,\n      }),\n    };\n  }\n\n  if (stripeEvent.type !== \"checkout.session.completed\") {\n    return {\n      statusCode: 400,\n      headers,\n      body: JSON.stringify({\n        message: \"Not a checkout.session.completed event.\",\n      }),\n    };\n  }\n\n  const sessionData = stripeEvent.data.object;\n  const session = await stripe.checkout.sessions.retrieve(sessionData.id, {\n    expand: [\"line_items\"],\n  });\n  const customer = (await stripe.customers.retrieve(\n    sessionData.customer,\n  )) as any;\n\n  for (const item of session.line_items.data) {\n    const productId = item.price.product as string;\n    const product = await stripe.products.retrieve(productId);\n    const slug = product.metadata.slug;\n    const licenseData: License = getLicenseData(slug);\n\n    try {\n      await sendEmails({\n        emailAddress: customer.email,\n        licenseData,\n        paymentId: sessionData.payment_intent,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n      console.error(err.message);\n\n      return {\n        statusCode: 500,\n        headers,\n        body: JSON.stringify({\n          message: err.message,\n        }),\n      };\n    }\n  }\n\n  return {\n    statusCode: 200,\n    headers,\n    body: JSON.stringify({\n      message: \"We good.\",\n    }),\n  };\n};\n\nexport { handler };\n", "export default [\n  {\n    slug: \"typeit_limited\",\n    friendlySlug: \"limited\",\n    name: \"TypeIt - Limited License\",\n    htmlTitle: \"<strong class='font-bold'>Limited</strong> Commercial License\",\n    simpleTitle: \"Limited License\",\n    price: 900, // must be in cents!\n    description:\n      \"Use TypeIt on a single commercial project. Includes lifetime updates.\",\n    permissionDescription:\n      \"You are now eligible to use TypeIt for a single commercial project.\",\n    licenseLink: \"https://typeitjs.com/licenses/download/limited-commercial\",\n    usageScope: \"a single commercial project\",\n    priceId: process.env.STRIPE_LIMITED_LICENSE_PRICE_ID,\n  },\n  {\n    slug: \"typeit_unlimited\",\n    friendlySlug: \"unlimited\",\n    name: \"TypeIt - Unlimited License\",\n    htmlTitle: \"<strong class='font-bold'>Unlimited</strong> Commercial License\",\n    simpleTitle: \"Unlimited License\",\n    price: 2900, // must be in cents!\n    description:\n      \"Unlimited use on any commercial project. Includes lifetime updates.\",\n    permissionDescription:\n      \"You are now eligible to use TypeIt commercially for an unlimited number of projects.\",\n    usageScope: \"any number of commercial projects\",\n    licenseLink: \"https://typeitjs.com/licenses/download/unlimited-commercial\",\n    priceId: process.env.STRIPE_UNLIMITED_LICENSE_PRICE_ID,\n  },\n];\n", "import licenseOptions from '../../../licenseOptions';\n\nexport default (slug) => {\n  return licenseOptions.find((option) => {\n    return option.slug === slug;\n  });\n};\n", "import * as crypto from 'crypto';\nimport { EventEmitter } from 'events';\nimport { NodeCryptoProvider } from '../crypto/NodeCryptoProvider.js';\nimport { NodeHttpClient } from '../net/NodeHttpClient.js';\nimport { PlatformFunctions } from './PlatformFunctions.js';\nimport { StripeError } from '../Error.js';\nimport { concat } from '../utils.js';\nimport { exec } from 'child_process';\nclass StreamProcessingError extends StripeError {\n}\n/**\n * Specializes WebPlatformFunctions using APIs available in Node.js.\n */\nexport class NodePlatformFunctions extends PlatformFunctions {\n    constructor() {\n        super();\n        this._exec = exec;\n        this._UNAME_CACHE = null;\n    }\n    /** @override */\n    uuid4() {\n        // available in: v14.17.x+\n        if (crypto.randomUUID) {\n            return crypto.randomUUID();\n        }\n        return super.uuid4();\n    }\n    /**\n     * @override\n     * Node's built in `exec` function sometimes throws outright,\n     * and sometimes has a callback with an error,\n     * depending on the type of error.\n     *\n     * This unifies that interface by resolving with a null uname\n     * if an error is encountered.\n     */\n    getUname() {\n        if (!this._UNAME_CACHE) {\n            this._UNAME_CACHE = new Promise((resolve, reject) => {\n                try {\n                    this._exec('uname -a', (err, uname) => {\n                        if (err) {\n                            return resolve(null);\n                        }\n                        resolve(uname);\n                    });\n                }\n                catch (e) {\n                    resolve(null);\n                }\n            });\n        }\n        return this._UNAME_CACHE;\n    }\n    /**\n     * @override\n     * Secure compare, from https://github.com/freewil/scmp\n     */\n    secureCompare(a, b) {\n        if (!a || !b) {\n            throw new Error('secureCompare must receive two arguments');\n        }\n        // return early here if buffer lengths are not equal since timingSafeEqual\n        // will throw if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n        // otherwise use our own scmp-internal function.\n        if (crypto.timingSafeEqual) {\n            const textEncoder = new TextEncoder();\n            const aEncoded = textEncoder.encode(a);\n            const bEncoded = textEncoder.encode(b);\n            return crypto.timingSafeEqual(aEncoded, bEncoded);\n        }\n        return super.secureCompare(a, b);\n    }\n    createEmitter() {\n        return new EventEmitter();\n    }\n    /** @override */\n    tryBufferData(data) {\n        if (!(data.file.data instanceof EventEmitter)) {\n            return Promise.resolve(data);\n        }\n        const bufferArray = [];\n        return new Promise((resolve, reject) => {\n            data.file.data\n                .on('data', (line) => {\n                bufferArray.push(line);\n            })\n                .once('end', () => {\n                // @ts-ignore\n                const bufferData = Object.assign({}, data);\n                bufferData.file.data = concat(bufferArray);\n                resolve(bufferData);\n            })\n                .on('error', (err) => {\n                reject(new StreamProcessingError({\n                    message: 'An error occurred while attempting to process the file for upload.',\n                    detail: err,\n                }));\n            });\n        });\n    }\n    /** @override */\n    createNodeHttpClient(agent) {\n        return new NodeHttpClient(agent);\n    }\n    /** @override */\n    createDefaultHttpClient() {\n        return new NodeHttpClient();\n    }\n    /** @override */\n    createNodeCryptoProvider() {\n        return new NodeCryptoProvider();\n    }\n    /** @override */\n    createDefaultCryptoProvider() {\n        return this.createNodeCryptoProvider();\n    }\n}\n", "import * as crypto from 'crypto';\nimport { CryptoProvider } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the Node `crypto` package for its computations.\n */\nexport class NodeCryptoProvider extends CryptoProvider {\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        return crypto\n            .createHmac('sha256', secret)\n            .update(payload, 'utf8')\n            .digest('hex');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const signature = await this.computeHMACSignature(payload, secret);\n        return signature;\n    }\n}\n", "/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nexport class CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n}\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nexport class CryptoProviderOnlySupportsAsyncError extends Error {\n}\n", "import * as http from 'http';\nimport * as https from 'https';\nimport { HttpClient, HttpClientResponse, } from './HttpClient.js';\nconst defaultHttpAgent = new http.Agent({ keepAlive: true });\nconst defaultHttpsAgent = new https.Agent({ keepAlive: true });\n/**\n * HTTP client which uses the Node `http` and `https` packages to issue\n * requests.`\n */\nexport class NodeHttpClient extends HttpClient {\n    constructor(agent) {\n        super();\n        this._agent = agent;\n    }\n    /** @override. */\n    getClientName() {\n        return 'node';\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        let agent = this._agent;\n        if (!agent) {\n            agent = isInsecureConnection ? defaultHttpAgent : defaultHttpsAgent;\n        }\n        const requestPromise = new Promise((resolve, reject) => {\n            const req = (isInsecureConnection ? http : https).request({\n                host: host,\n                port: port,\n                path,\n                method,\n                agent,\n                headers,\n                ciphers: 'DEFAULT:!aNULL:!eNULL:!LOW:!EXPORT:!SSLv2:!MD5',\n            });\n            req.setTimeout(timeout, () => {\n                req.destroy(HttpClient.makeTimeoutError());\n            });\n            req.on('response', (res) => {\n                resolve(new NodeHttpClientResponse(res));\n            });\n            req.on('error', (error) => {\n                reject(error);\n            });\n            req.once('socket', (socket) => {\n                if (socket.connecting) {\n                    socket.once(isInsecureConnection ? 'connect' : 'secureConnect', () => {\n                        // Send payload; we're safe:\n                        req.write(requestData);\n                        req.end();\n                    });\n                }\n                else {\n                    // we're already connected\n                    req.write(requestData);\n                    req.end();\n                }\n            });\n        });\n        return requestPromise;\n    }\n}\nexport class NodeHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        // @ts-ignore\n        super(res.statusCode, res.headers || {});\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // The raw response is itself the stream, so we just return that. To be\n        // backwards compatible, we should invoke the streamCompleteCallback only\n        // once the stream has been fully consumed.\n        this._res.once('end', () => streamCompleteCallback());\n        return this._res;\n    }\n    toJSON() {\n        return new Promise((resolve, reject) => {\n            let response = '';\n            this._res.setEncoding('utf8');\n            this._res.on('data', (chunk) => {\n                response += chunk;\n            });\n            this._res.once('end', () => {\n                try {\n                    resolve(JSON.parse(response));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n}\n", "/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nexport class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nexport class HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\n", "import { HttpClient, HttpClientResponse, } from './HttpClient.js';\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nexport class FetchHttpClient extends HttpClient {\n    constructor(fetchFn) {\n        super();\n        this._fetchFn = fetchFn;\n    }\n    /** @override. */\n    getClientName() {\n        return 'fetch';\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        const url = new URL(path, `${isInsecureConnection ? 'http' : 'https'}://${host}`);\n        url.port = port;\n        // For methods which expect payloads, we should always pass a body value\n        // even when it is empty. Without this, some JS runtimes (eg. Deno) will\n        // inject a second Content-Length header. See https://github.com/stripe/stripe-node/issues/1519\n        // for more details.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        const body = requestData || (methodHasPayload ? '' : undefined);\n        const fetchFn = this._fetchFn || fetch;\n        const fetchPromise = fetchFn(url.toString(), {\n            method,\n            // @ts-ignore\n            headers,\n            // @ts-ignore\n            body,\n        });\n        // The Fetch API does not support passing in a timeout natively, so a\n        // timeout promise is constructed to race against the fetch and preempt the\n        // request, simulating a timeout.\n        //\n        // This timeout behavior differs from Node:\n        // - Fetch uses a single timeout for the entire length of the request.\n        // - Node is more fine-grained and resets the timeout after each stage of\n        //   the request.\n        //\n        // As an example, if the timeout is set to 30s and the connection takes 20s\n        // to be established followed by 20s for the body, Fetch would timeout but\n        // Node would not. The more fine-grained timeout cannot be implemented with\n        // fetch.\n        let pendingTimeoutId;\n        const timeoutPromise = new Promise((_, reject) => {\n            pendingTimeoutId = setTimeout(() => {\n                pendingTimeoutId = null;\n                reject(HttpClient.makeTimeoutError());\n            }, timeout);\n        });\n        return Promise.race([fetchPromise, timeoutPromise])\n            .then((res) => {\n            return new FetchHttpClientResponse(res);\n        })\n            .finally(() => {\n            if (pendingTimeoutId) {\n                clearTimeout(pendingTimeoutId);\n            }\n        });\n    }\n}\nexport class FetchHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        super(res.status, FetchHttpClientResponse._transformHeadersToObject(res.headers));\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // Unfortunately `fetch` does not have event handlers for when the stream is\n        // completely read. We therefore invoke the streamCompleteCallback right\n        // away. This callback emits a response event with metadata and completes\n        // metrics, so it's ok to do this without waiting for the stream to be\n        // completely read.\n        streamCompleteCallback();\n        // Fetch's `body` property is expected to be a readable stream of the body.\n        return this._res.body;\n    }\n    toJSON() {\n        return this._res.json();\n    }\n    static _transformHeadersToObject(headers) {\n        // Fetch uses a Headers instance so this must be converted to a barebones\n        // JS object to meet the HttpClient interface.\n        const headersObj = {};\n        for (const entry of headers) {\n            if (!Array.isArray(entry) || entry.length != 2) {\n                throw new Error('Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.');\n            }\n            headersObj[entry[0]] = entry[1];\n        }\n        return headersObj;\n    }\n}\n", "import { CryptoProvider, CryptoProviderOnlySupportsAsyncError, } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nexport class SubtleCryptoProvider extends CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n}\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n", "import { FetchHttpClient } from '../net/FetchHttpClient.js';\nimport { SubtleCryptoProvider } from '../crypto/SubtleCryptoProvider.js';\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nexport class PlatformFunctions {\n    constructor() {\n        this._fetchFn = null;\n        this._agent = null;\n    }\n    /**\n     * Gets uname with Node's built-in `exec` function, if available.\n     */\n    getUname() {\n        throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n    secureCompare(a, b) {\n        // return early here if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        const len = a.length;\n        let result = 0;\n        for (let i = 0; i < len; ++i) {\n            result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n        }\n        return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n    createEmitter() {\n        throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n    tryBufferData(data) {\n        throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n    createNodeHttpClient(agent) {\n        throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    createFetchHttpClient(fetchFn) {\n        return new FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n    createDefaultHttpClient() {\n        throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n    createNodeCryptoProvider() {\n        throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n    createSubtleCryptoProvider(subtleCrypto) {\n        return new SubtleCryptoProvider(subtleCrypto);\n    }\n    createDefaultCryptoProvider() {\n        throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n}\n", "/* eslint-disable camelcase */\nexport const generate = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        case 'card_error':\n            return new StripeCardError(rawStripeError);\n        case 'invalid_request_error':\n            return new StripeInvalidRequestError(rawStripeError);\n        case 'api_error':\n            return new StripeAPIError(rawStripeError);\n        case 'authentication_error':\n            return new StripeAuthenticationError(rawStripeError);\n        case 'rate_limit_error':\n            return new StripeRateLimitError(rawStripeError);\n        case 'idempotency_error':\n            return new StripeIdempotencyError(rawStripeError);\n        case 'invalid_grant':\n            return new StripeInvalidGrantError(rawStripeError);\n        default:\n            return new StripeUnknownError(rawStripeError);\n    }\n};\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nexport class StripeError extends Error {\n    constructor(raw = {}) {\n        super(raw.message);\n        this.type = this.constructor.name;\n        this.raw = raw;\n        this.rawType = raw.type;\n        this.code = raw.code;\n        this.doc_url = raw.doc_url;\n        this.param = raw.param;\n        this.detail = raw.detail;\n        this.headers = raw.headers;\n        this.requestId = raw.requestId;\n        this.statusCode = raw.statusCode;\n        // @ts-ignore\n        this.message = raw.message;\n        this.charge = raw.charge;\n        this.decline_code = raw.decline_code;\n        this.payment_intent = raw.payment_intent;\n        this.payment_method = raw.payment_method;\n        this.payment_method_type = raw.payment_method_type;\n        this.setup_intent = raw.setup_intent;\n        this.source = raw.source;\n    }\n}\n/**\n * Helper factory which takes raw stripe errors and outputs wrapping instances\n */\nStripeError.generate = generate;\n// Specific Stripe Error types:\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nexport class StripeCardError extends StripeError {\n}\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nexport class StripeInvalidRequestError extends StripeError {\n}\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nexport class StripeAPIError extends StripeError {\n}\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nexport class StripeAuthenticationError extends StripeError {\n}\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nexport class StripePermissionError extends StripeError {\n}\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nexport class StripeRateLimitError extends StripeError {\n}\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nexport class StripeConnectionError extends StripeError {\n}\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nexport class StripeSignatureVerificationError extends StripeError {\n    constructor(header, payload, raw = {}) {\n        super(raw);\n        this.header = header;\n        this.payload = payload;\n    }\n}\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nexport class StripeIdempotencyError extends StripeError {\n}\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nexport class StripeInvalidGrantError extends StripeError {\n}\n/**\n * Any other error from Stripe not specifically captured above\n */\nexport class StripeUnknownError extends StripeError {\n}\n", "import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function stringifyRequestData(data) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => \n            // @ts-ignore\n            encodeURIComponent(outputs[$1] || ''));\n        };\n    };\n})();\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        auth: null,\n        host: null,\n        headers: {},\n        settings: {},\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.auth = args.pop();\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.auth = params.apiKey;\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.keys(obj).forEach((key) => {\n            // @ts-ignore\n            const value = obj[key];\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n", "// File generated from our OpenAPI spec\nexport const ApiVersion = '2022-11-15';\n", "// File generated from our OpenAPI spec\nimport { resourceNamespace } from './ResourceNamespace.js';\nimport { Accounts as FinancialConnectionsAccounts } from './resources/FinancialConnections/Accounts.js';\nimport { Authorizations as IssuingAuthorizations } from './resources/Issuing/Authorizations.js';\nimport { Calculations as TaxCalculations } from './resources/Tax/Calculations.js';\nimport { Cardholders as IssuingCardholders } from './resources/Issuing/Cardholders.js';\nimport { Cards as TestHelpersIssuingCards } from './resources/TestHelpers/Issuing/Cards.js';\nimport { Cards as IssuingCards } from './resources/Issuing/Cards.js';\nimport { Configurations as BillingPortalConfigurations } from './resources/BillingPortal/Configurations.js';\nimport { Configurations as TerminalConfigurations } from './resources/Terminal/Configurations.js';\nimport { ConnectionTokens as TerminalConnectionTokens } from './resources/Terminal/ConnectionTokens.js';\nimport { CreditReversals as TreasuryCreditReversals } from './resources/Treasury/CreditReversals.js';\nimport { Customers as TestHelpersCustomers } from './resources/TestHelpers/Customers.js';\nimport { DebitReversals as TreasuryDebitReversals } from './resources/Treasury/DebitReversals.js';\nimport { Disputes as IssuingDisputes } from './resources/Issuing/Disputes.js';\nimport { EarlyFraudWarnings as RadarEarlyFraudWarnings } from './resources/Radar/EarlyFraudWarnings.js';\nimport { FinancialAccounts as TreasuryFinancialAccounts } from './resources/Treasury/FinancialAccounts.js';\nimport { InboundTransfers as TestHelpersTreasuryInboundTransfers } from './resources/TestHelpers/Treasury/InboundTransfers.js';\nimport { InboundTransfers as TreasuryInboundTransfers } from './resources/Treasury/InboundTransfers.js';\nimport { Locations as TerminalLocations } from './resources/Terminal/Locations.js';\nimport { OutboundPayments as TestHelpersTreasuryOutboundPayments } from './resources/TestHelpers/Treasury/OutboundPayments.js';\nimport { OutboundPayments as TreasuryOutboundPayments } from './resources/Treasury/OutboundPayments.js';\nimport { OutboundTransfers as TestHelpersTreasuryOutboundTransfers } from './resources/TestHelpers/Treasury/OutboundTransfers.js';\nimport { OutboundTransfers as TreasuryOutboundTransfers } from './resources/Treasury/OutboundTransfers.js';\nimport { Readers as TestHelpersTerminalReaders } from './resources/TestHelpers/Terminal/Readers.js';\nimport { Readers as TerminalReaders } from './resources/Terminal/Readers.js';\nimport { ReceivedCredits as TestHelpersTreasuryReceivedCredits } from './resources/TestHelpers/Treasury/ReceivedCredits.js';\nimport { ReceivedCredits as TreasuryReceivedCredits } from './resources/Treasury/ReceivedCredits.js';\nimport { ReceivedDebits as TestHelpersTreasuryReceivedDebits } from './resources/TestHelpers/Treasury/ReceivedDebits.js';\nimport { ReceivedDebits as TreasuryReceivedDebits } from './resources/Treasury/ReceivedDebits.js';\nimport { Refunds as TestHelpersRefunds } from './resources/TestHelpers/Refunds.js';\nimport { ReportRuns as ReportingReportRuns } from './resources/Reporting/ReportRuns.js';\nimport { ReportTypes as ReportingReportTypes } from './resources/Reporting/ReportTypes.js';\nimport { ScheduledQueryRuns as SigmaScheduledQueryRuns } from './resources/Sigma/ScheduledQueryRuns.js';\nimport { Secrets as AppsSecrets } from './resources/Apps/Secrets.js';\nimport { Sessions as BillingPortalSessions } from './resources/BillingPortal/Sessions.js';\nimport { Sessions as CheckoutSessions } from './resources/Checkout/Sessions.js';\nimport { Sessions as FinancialConnectionsSessions } from './resources/FinancialConnections/Sessions.js';\nimport { Settings as TaxSettings } from './resources/Tax/Settings.js';\nimport { TestClocks as TestHelpersTestClocks } from './resources/TestHelpers/TestClocks.js';\nimport { TransactionEntries as TreasuryTransactionEntries } from './resources/Treasury/TransactionEntries.js';\nimport { Transactions as IssuingTransactions } from './resources/Issuing/Transactions.js';\nimport { Transactions as TaxTransactions } from './resources/Tax/Transactions.js';\nimport { Transactions as TreasuryTransactions } from './resources/Treasury/Transactions.js';\nimport { ValueListItems as RadarValueListItems } from './resources/Radar/ValueListItems.js';\nimport { ValueLists as RadarValueLists } from './resources/Radar/ValueLists.js';\nimport { VerificationReports as IdentityVerificationReports } from './resources/Identity/VerificationReports.js';\nimport { VerificationSessions as IdentityVerificationSessions } from './resources/Identity/VerificationSessions.js';\nexport { Accounts as Account } from './resources/Accounts.js';\nexport { AccountLinks } from './resources/AccountLinks.js';\nexport { Accounts } from './resources/Accounts.js';\nexport { ApplePayDomains } from './resources/ApplePayDomains.js';\nexport { ApplicationFees } from './resources/ApplicationFees.js';\nexport { Balance } from './resources/Balance.js';\nexport { BalanceTransactions } from './resources/BalanceTransactions.js';\nexport { Charges } from './resources/Charges.js';\nexport { CountrySpecs } from './resources/CountrySpecs.js';\nexport { Coupons } from './resources/Coupons.js';\nexport { CreditNotes } from './resources/CreditNotes.js';\nexport { Customers } from './resources/Customers.js';\nexport { Disputes } from './resources/Disputes.js';\nexport { EphemeralKeys } from './resources/EphemeralKeys.js';\nexport { Events } from './resources/Events.js';\nexport { ExchangeRates } from './resources/ExchangeRates.js';\nexport { FileLinks } from './resources/FileLinks.js';\nexport { Files } from './resources/Files.js';\nexport { InvoiceItems } from './resources/InvoiceItems.js';\nexport { Invoices } from './resources/Invoices.js';\nexport { Mandates } from './resources/Mandates.js';\nexport { OAuth } from './resources/OAuth.js';\nexport { PaymentIntents } from './resources/PaymentIntents.js';\nexport { PaymentLinks } from './resources/PaymentLinks.js';\nexport { PaymentMethods } from './resources/PaymentMethods.js';\nexport { Payouts } from './resources/Payouts.js';\nexport { Plans } from './resources/Plans.js';\nexport { Prices } from './resources/Prices.js';\nexport { Products } from './resources/Products.js';\nexport { PromotionCodes } from './resources/PromotionCodes.js';\nexport { Quotes } from './resources/Quotes.js';\nexport { Refunds } from './resources/Refunds.js';\nexport { Reviews } from './resources/Reviews.js';\nexport { SetupAttempts } from './resources/SetupAttempts.js';\nexport { SetupIntents } from './resources/SetupIntents.js';\nexport { ShippingRates } from './resources/ShippingRates.js';\nexport { Sources } from './resources/Sources.js';\nexport { SubscriptionItems } from './resources/SubscriptionItems.js';\nexport { SubscriptionSchedules } from './resources/SubscriptionSchedules.js';\nexport { Subscriptions } from './resources/Subscriptions.js';\nexport { TaxCodes } from './resources/TaxCodes.js';\nexport { TaxRates } from './resources/TaxRates.js';\nexport { Tokens } from './resources/Tokens.js';\nexport { Topups } from './resources/Topups.js';\nexport { Transfers } from './resources/Transfers.js';\nexport { WebhookEndpoints } from './resources/WebhookEndpoints.js';\nexport const Apps = resourceNamespace('apps', { Secrets: AppsSecrets });\nexport const BillingPortal = resourceNamespace('billingPortal', {\n    Configurations: BillingPortalConfigurations,\n    Sessions: BillingPortalSessions,\n});\nexport const Checkout = resourceNamespace('checkout', {\n    Sessions: CheckoutSessions,\n});\nexport const FinancialConnections = resourceNamespace('financialConnections', {\n    Accounts: FinancialConnectionsAccounts,\n    Sessions: FinancialConnectionsSessions,\n});\nexport const Identity = resourceNamespace('identity', {\n    VerificationReports: IdentityVerificationReports,\n    VerificationSessions: IdentityVerificationSessions,\n});\nexport const Issuing = resourceNamespace('issuing', {\n    Authorizations: IssuingAuthorizations,\n    Cardholders: IssuingCardholders,\n    Cards: IssuingCards,\n    Disputes: IssuingDisputes,\n    Transactions: IssuingTransactions,\n});\nexport const Radar = resourceNamespace('radar', {\n    EarlyFraudWarnings: RadarEarlyFraudWarnings,\n    ValueListItems: RadarValueListItems,\n    ValueLists: RadarValueLists,\n});\nexport const Reporting = resourceNamespace('reporting', {\n    ReportRuns: ReportingReportRuns,\n    ReportTypes: ReportingReportTypes,\n});\nexport const Sigma = resourceNamespace('sigma', {\n    ScheduledQueryRuns: SigmaScheduledQueryRuns,\n});\nexport const Tax = resourceNamespace('tax', {\n    Calculations: TaxCalculations,\n    Settings: TaxSettings,\n    Transactions: TaxTransactions,\n});\nexport const Terminal = resourceNamespace('terminal', {\n    Configurations: TerminalConfigurations,\n    ConnectionTokens: TerminalConnectionTokens,\n    Locations: TerminalLocations,\n    Readers: TerminalReaders,\n});\nexport const TestHelpers = resourceNamespace('testHelpers', {\n    Customers: TestHelpersCustomers,\n    Refunds: TestHelpersRefunds,\n    TestClocks: TestHelpersTestClocks,\n    Issuing: resourceNamespace('issuing', { Cards: TestHelpersIssuingCards }),\n    Terminal: resourceNamespace('terminal', {\n        Readers: TestHelpersTerminalReaders,\n    }),\n    Treasury: resourceNamespace('treasury', {\n        InboundTransfers: TestHelpersTreasuryInboundTransfers,\n        OutboundPayments: TestHelpersTreasuryOutboundPayments,\n        OutboundTransfers: TestHelpersTreasuryOutboundTransfers,\n        ReceivedCredits: TestHelpersTreasuryReceivedCredits,\n        ReceivedDebits: TestHelpersTreasuryReceivedDebits,\n    }),\n});\nexport const Treasury = resourceNamespace('treasury', {\n    CreditReversals: TreasuryCreditReversals,\n    DebitReversals: TreasuryDebitReversals,\n    FinancialAccounts: TreasuryFinancialAccounts,\n    InboundTransfers: TreasuryInboundTransfers,\n    OutboundPayments: TreasuryOutboundPayments,\n    OutboundTransfers: TreasuryOutboundTransfers,\n    ReceivedCredits: TreasuryReceivedCredits,\n    ReceivedDebits: TreasuryReceivedDebits,\n    TransactionEntries: TreasuryTransactionEntries,\n    Transactions: TreasuryTransactions,\n});\n", "// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n", "import { callbackifyPromiseWithTimeout, getDataFromArgs } from './utils.js';\nclass StripeIterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.index = 0;\n        this.pagePromise = firstPagePromise;\n        this.promiseCache = { currentPromise: null };\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async iterate(pageResult) {\n        if (!(pageResult &&\n            pageResult.data &&\n            typeof pageResult.data.length === 'number')) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `data` array.');\n        }\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        if (this.index < pageResult.data.length) {\n            const idx = reverseIteration\n                ? pageResult.data.length - 1 - this.index\n                : this.index;\n            const value = pageResult.data[idx];\n            this.index += 1;\n            return { value, done: false };\n        }\n        else if (pageResult.has_more) {\n            // Reset counter, request next page, and recurse.\n            this.index = 0;\n            this.pagePromise = this.getNextPage(pageResult);\n            const nextPageResult = await this.pagePromise;\n            return this.iterate(nextPageResult);\n        }\n        return { done: true, value: undefined };\n    }\n    /** @abstract */\n    getNextPage(_pageResult) {\n        throw new Error('Unimplemented');\n    }\n    async _next() {\n        return this.iterate(await this.pagePromise);\n    }\n    next() {\n        /**\n         * If a user calls `.next()` multiple times in parallel,\n         * return the same result until something has resolved\n         * to prevent page-turning race conditions.\n         */\n        if (this.promiseCache.currentPromise) {\n            return this.promiseCache.currentPromise;\n        }\n        const nextPromise = (async () => {\n            const ret = await this._next();\n            this.promiseCache.currentPromise = null;\n            return ret;\n        })();\n        this.promiseCache.currentPromise = nextPromise;\n        return nextPromise;\n    }\n}\nclass ListIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        const lastId = getLastId(pageResult, reverseIteration);\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n        });\n    }\n}\nclass SearchIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        if (!pageResult.next_page) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.');\n        }\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            page: pageResult.next_page,\n        });\n    }\n}\nexport const makeAutoPaginationMethods = (stripeResource, requestArgs, spec, firstPagePromise) => {\n    if (spec.methodType === 'search') {\n        return makeAutoPaginationMethodsFromIterator(new SearchIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    return null;\n};\nconst makeAutoPaginationMethodsFromIterator = (iterator) => {\n    const autoPagingEach = makeAutoPagingEach((...args) => iterator.next(...args));\n    const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n    const autoPaginationMethods = {\n        autoPagingEach,\n        autoPagingToArray,\n        // Async iterator functions:\n        next: () => iterator.next(),\n        return: () => {\n            // This is required for `break`.\n            return {};\n        },\n        [getAsyncIteratorSymbol()]: () => {\n            return autoPaginationMethods;\n        },\n    };\n    return autoPaginationMethods;\n};\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\nfunction getAsyncIteratorSymbol() {\n    if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n        return Symbol.asyncIterator;\n    }\n    // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n    return '@@asyncIterator';\n}\nfunction getDoneCallback(args) {\n    if (args.length < 2) {\n        return null;\n    }\n    const onDone = args[1];\n    if (typeof onDone !== 'function') {\n        throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`);\n    }\n    return onDone;\n}\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n    if (args.length === 0) {\n        return undefined;\n    }\n    const onItem = args[0];\n    if (typeof onItem !== 'function') {\n        throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`);\n    }\n    // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n    if (onItem.length === 2) {\n        return onItem;\n    }\n    if (onItem.length > 2) {\n        throw Error(`The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`);\n    }\n    // This magically handles all three of these usecases (the latter two being functionally identical):\n    // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n    // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n    // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n    return function _onItem(item, next) {\n        const shouldContinue = onItem(item);\n        next(shouldContinue);\n    };\n}\nfunction getLastId(listResult, reverseIteration) {\n    const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n    const lastItem = listResult.data[lastIdx];\n    const lastId = lastItem && lastItem.id;\n    if (!lastId) {\n        throw Error('Unexpected: No `id` found on the last item while auto-paging a list.');\n    }\n    return lastId;\n}\nfunction makeAutoPagingEach(asyncIteratorNext) {\n    return function autoPagingEach( /* onItem?, onDone? */) {\n        const args = [].slice.call(arguments);\n        const onItem = getItemCallback(args);\n        const onDone = getDoneCallback(args);\n        if (args.length > 2) {\n            throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n        }\n        const autoPagePromise = wrapAsyncIteratorWithCallback(asyncIteratorNext, \n        // @ts-ignore we might need a null check\n        onItem);\n        return callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n    };\n}\nfunction makeAutoPagingToArray(autoPagingEach) {\n    return function autoPagingToArray(opts, onDone) {\n        const limit = opts && opts.limit;\n        if (!limit) {\n            throw Error('You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.');\n        }\n        if (limit > 10000) {\n            throw Error('You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.');\n        }\n        const promise = new Promise((resolve, reject) => {\n            const items = [];\n            autoPagingEach((item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    return false;\n                }\n            })\n                .then(() => {\n                resolve(items);\n            })\n                .catch(reject);\n        });\n        // @ts-ignore\n        return callbackifyPromiseWithTimeout(promise, onDone);\n    };\n}\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n    return new Promise((resolve, reject) => {\n        function handleIteration(iterResult) {\n            if (iterResult.done) {\n                resolve();\n                return;\n            }\n            const item = iterResult.value;\n            return new Promise((next) => {\n                // Bit confusing, perhaps; we pass a `resolve` fn\n                // to the user, so they can decide when and if to continue.\n                // They can return false, or a promise which resolves to false, to break.\n                onItem(item, next);\n            }).then((shouldContinue) => {\n                if (shouldContinue === false) {\n                    return handleIteration({ done: true, value: undefined });\n                }\n                else {\n                    return asyncIteratorNext().then(handleIteration);\n                }\n            });\n        }\n        asyncIteratorNext()\n            .then(handleIteration)\n            .catch(reject);\n    });\n}\nfunction isReverseIteration(requestArgs) {\n    const args = [].slice.call(requestArgs);\n    const dataFromArgs = getDataFromArgs(args);\n    return !!dataFromArgs.ending_before;\n}\n", "import { callbackifyPromiseWithTimeout, extractUrlParams } from './utils.js';\nimport { makeAutoPaginationMethods } from './autoPagination.js';\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nexport function stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = extractUrlParams(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = callbackifyPromiseWithTimeout(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, makeAutoPaginationMethods(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\n", "import { getDataFromArgs, getOptionsFromArgs, makeURLInterpolator, protoExtend, stringifyRequestData, } from './utils.js';\nimport { stripeMethod } from './StripeMethod.js';\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = protoExtend;\n// Expose method-creator\nStripeResource.method = stripeMethod;\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n    this._stripe = stripe;\n    if (deprecatedUrlData) {\n        throw new Error('Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.');\n    }\n    this.basePath = makeURLInterpolator(\n    // @ts-ignore changing type of basePath\n    this.basePath || stripe.getApiField('basePath'));\n    // @ts-ignore changing type of path\n    this.resourcePath = this.path;\n    // @ts-ignore changing type of path\n    this.path = makeURLInterpolator(this.path);\n    this.initialize(...arguments);\n}\nStripeResource.prototype = {\n    _stripe: null,\n    // @ts-ignore the type of path changes in ctor\n    path: '',\n    resourcePath: '',\n    // Methods that don't use the API's default '/v1' path can override it with this setting.\n    basePath: null,\n    initialize() { },\n    // Function to override the default data processor. This allows full control\n    // over how a StripeResource's request data will get converted into an HTTP\n    // body. This is useful for non-standard HTTP requests. The function should\n    // take method name, data, and headers as arguments.\n    requestDataProcessor: null,\n    // Function to add a validation checks before sending the request, errors should\n    // be thrown, and they will be passed to the callback/promise.\n    validateRequest: null,\n    createFullPath(commandPath, urlData) {\n        const urlParts = [this.basePath(urlData), this.path(urlData)];\n        if (typeof commandPath === 'function') {\n            const computedCommandPath = commandPath(urlData);\n            // If we have no actual command path, we just omit it to avoid adding a\n            // trailing slash. This is important for top-level listing requests, which\n            // do not have a command path.\n            if (computedCommandPath) {\n                urlParts.push(computedCommandPath);\n            }\n        }\n        else {\n            urlParts.push(commandPath);\n        }\n        return this._joinUrlParts(urlParts);\n    },\n    // Creates a relative resource path with symbols left in (unlike\n    // createFullPath which takes some data to replace them with). For example it\n    // might produce: /invoices/{id}\n    createResourcePathWithSymbols(pathWithSymbols) {\n        // If there is no path beyond the resource path, we want to produce just\n        // /<resource path> rather than /<resource path>/.\n        if (pathWithSymbols) {\n            return `/${this._joinUrlParts([this.resourcePath, pathWithSymbols])}`;\n        }\n        else {\n            return `/${this.resourcePath}`;\n        }\n    },\n    _joinUrlParts(parts) {\n        // Replace any accidentally doubled up slashes. This previously used\n        // path.join, which would do this as well. Unfortunately we need to do this\n        // as the functions for creating paths are technically part of the public\n        // interface and so we need to preserve backwards compatibility.\n        return parts.join('/').replace(/\\/{2,}/g, '/');\n    },\n    _getRequestOpts(requestArgs, spec, overrideData) {\n        // Extract spec values with defaults.\n        const requestMethod = (spec.method || 'GET').toUpperCase();\n        const urlParams = spec.urlParams || [];\n        const encode = spec.encode || ((data) => data);\n        const isUsingFullPath = !!spec.fullPath;\n        const commandPath = makeURLInterpolator(isUsingFullPath ? spec.fullPath : spec.path || '');\n        // When using fullPath, we ignore the resource path as it should already be\n        // fully qualified.\n        const path = isUsingFullPath\n            ? spec.fullPath\n            : this.createResourcePathWithSymbols(spec.path);\n        // Don't mutate args externally.\n        const args = [].slice.call(requestArgs);\n        // Generate and validate url params.\n        const urlData = urlParams.reduce((urlData, param) => {\n            const arg = args.shift();\n            if (typeof arg !== 'string') {\n                throw new Error(`Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`);\n            }\n            urlData[param] = arg;\n            return urlData;\n        }, {});\n        // Pull request data and options (headers, auth) from args.\n        const dataFromArgs = getDataFromArgs(args);\n        const data = encode(Object.assign({}, dataFromArgs, overrideData));\n        const options = getOptionsFromArgs(args);\n        const host = options.host || spec.host;\n        const streaming = !!spec.streaming;\n        // Validate that there are no more args.\n        if (args.filter((x) => x != null).length) {\n            throw new Error(`Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`);\n        }\n        // When using full path, we can just invoke the URL interpolator directly\n        // as we don't need to use the resource to create a full path.\n        const requestPath = isUsingFullPath\n            ? commandPath(urlData)\n            : this.createFullPath(commandPath, urlData);\n        const headers = Object.assign(options.headers, spec.headers);\n        if (spec.validator) {\n            spec.validator(data, { headers });\n        }\n        const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n        const bodyData = dataInQuery ? {} : data;\n        const queryData = dataInQuery ? data : {};\n        return {\n            requestMethod,\n            requestPath,\n            bodyData,\n            queryData,\n            auth: options.auth,\n            headers,\n            host: host !== null && host !== void 0 ? host : null,\n            streaming,\n            settings: options.settings,\n        };\n    },\n    _makeRequest(requestArgs, spec, overrideData) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let opts;\n            try {\n                opts = this._getRequestOpts(requestArgs, spec, overrideData);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(spec.transformResponseData\n                        ? spec.transformResponseData(response)\n                        : response);\n                }\n            }\n            const emptyQuery = Object.keys(opts.queryData).length === 0;\n            const path = [\n                opts.requestPath,\n                emptyQuery ? '' : '?',\n                stringifyRequestData(opts.queryData),\n            ].join('');\n            const { headers, settings } = opts;\n            this._stripe._requestSender._request(opts.requestMethod, opts.host, path, opts.bodyData, opts.auth, { headers, settings, streaming: opts.streaming }, requestCallback, (_a = this.requestDataProcessor) === null || _a === void 0 ? void 0 : _a.bind(this));\n        });\n    },\n};\nexport { StripeResource };\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Accounts = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts',\n        methodType: 'list',\n    }),\n    disconnect: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/disconnect',\n    }),\n    listOwners: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}/owners',\n        methodType: 'list',\n    }),\n    refresh: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/refresh',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/approve',\n    }),\n    decline: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/decline',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Calculations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/calculations' }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cardholders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cardholders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    deliverCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/deliver',\n    }),\n    failCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/fail',\n    }),\n    returnCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/return',\n    }),\n    shipCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/ship',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/issuing/cards/{card}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards/{card}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cards',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConnectionTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/connection_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/credit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals/{credit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    fundCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/customers/{customer}/fund_cash_balance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const DebitReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/debit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals/{debit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/disputes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes',\n        methodType: 'list',\n    }),\n    submit: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}/submit',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EarlyFraudWarnings = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings/{early_fraud_warning}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FinancialAccounts = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts',\n        methodType: 'list',\n    }),\n    retrieveFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n    updateFeatures: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/fail',\n    }),\n    returnInboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/return',\n    }),\n    succeed: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/succeed',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers/{inbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Locations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/locations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/post',\n    }),\n    returnOutboundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments/{id}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post',\n    }),\n    returnOutboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    presentPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/present_payment_method',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/readers' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    cancelAction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/cancel_action',\n    }),\n    processPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_payment_intent',\n    }),\n    processSetupIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_setup_intent',\n    }),\n    refundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/refund_payment',\n    }),\n    setReaderDisplay: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/set_reader_display',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_credits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_debits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/refunds/{refund}/expire',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportRuns = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/reporting/report_runs' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs/{report_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportTypes = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types/{report_type}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ScheduledQueryRuns = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs/{scheduled_query_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Secrets = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apps/secrets' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apps/secrets',\n        methodType: 'list',\n    }),\n    deleteWhere: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/apps/secrets/delete',\n    }),\n    find: stripeMethod({ method: 'GET', fullPath: '/v1/apps/secrets/find' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/sessions',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/checkout/sessions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}/expire',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/sessions/{session}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Settings = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax/settings' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax/settings' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TestClocks = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    advance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}/advance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TransactionEntries = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}',\n    }),\n    createFromCalculation: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_from_calculation',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_reversal',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueListItems = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_list_items',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueLists = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/radar/value_lists' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationReports = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports/{report}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationSessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/cancel',\n    }),\n    redact: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/redact',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path\nexport const Accounts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/accounts' }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/accounts/{account}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/accounts/{account}' }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_links' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplePayDomains = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apple_pay/domains' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplicationFees = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees',\n        methodType: 'list',\n    }),\n    createRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{id}/refunds',\n    }),\n    listRefunds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}/refunds',\n        methodType: 'list',\n    }),\n    retrieveRefund: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n    updateRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Balance = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/balance' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const BalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Charges = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/charges' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/charges/{charge}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/charges/{charge}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges',\n        methodType: 'list',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/charges/{charge}/capture',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CountrySpecs = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs/{country}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Coupons = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/coupons' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/coupons/{coupon}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/coupons/{coupon}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/coupons',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/coupons/{coupon}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditNotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/{credit_note}/lines',\n        methodType: 'list',\n    }),\n    listPreviewLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/preview/lines',\n        methodType: 'list',\n    }),\n    preview: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/preview' }),\n    voidCreditNote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/credit_notes/{id}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/customers/{customer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/customers/{customer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/customers/{customer}' }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/disputes/{dispute}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/disputes/{dispute}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/disputes',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/disputes/{dispute}/close',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EphemeralKeys = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/ephemeral_keys',\n        validator: (data, options) => {\n            if (!options.headers || !options.headers['Stripe-Version']) {\n                throw new Error('Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node');\n            }\n        },\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/ephemeral_keys/{key}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/events/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/events',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ExchangeRates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates/{rate_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FileLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/file_links' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/file_links/{link}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/file_links/{link}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/file_links',\n        methodType: 'list',\n    }),\n});\n", "import { flattenAndStringify, stringifyRequestData } from './utils.js';\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = flattenAndStringify(data);\n    for (const k in flattenedData) {\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nexport function multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, stringifyRequestData(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\n", "// File generated from our OpenAPI spec\nimport { multipartRequestDataProcessor } from '../multipart.js';\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Files = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/files',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n        host: 'files.stripe.com',\n    }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/files/{file}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/files',\n        methodType: 'list',\n    }),\n    requestDataProcessor: multipartRequestDataProcessor,\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoiceitems' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Invoices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/invoices/{invoice}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/invoices/{invoice}' }),\n    finalizeInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/finalize',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/{invoice}/lines',\n        methodType: 'list',\n    }),\n    listUpcomingLines: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming/lines',\n        methodType: 'list',\n    }),\n    markUncollectible: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/mark_uncollectible',\n    }),\n    pay: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}/pay' }),\n    retrieveUpcoming: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/search',\n        methodType: 'search',\n    }),\n    sendInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/send',\n    }),\n    voidInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Mandates = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/mandates/{mandate}' }),\n});\n", "'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { stringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${stringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents',\n        methodType: 'list',\n    }),\n    applyCustomerBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/apply_customer_balance',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/cancel',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/capture',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/confirm',\n    }),\n    incrementAuthorization: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/increment_authorization',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/search',\n        methodType: 'search',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_links' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethods = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_methods' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods',\n        methodType: 'list',\n    }),\n    attach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/attach',\n    }),\n    detach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/detach',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Payouts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payouts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/payouts/{payout}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/payouts/{payout}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payouts',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/cancel',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Plans = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/plans' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/plans/{plan}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/plans/{plan}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/plans',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/plans/{plan}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Prices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/prices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/prices/{price}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/prices/{price}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices',\n        methodType: 'list',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/products' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/products/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/products/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/products/{id}' }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PromotionCodes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/promotion_codes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        host: 'files.stripe.com',\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        streaming: true,\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/refunds' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/refunds/{refund}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/refunds/{refund}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/refunds',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/refunds/{refund}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Reviews = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/reviews/{review}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reviews',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/reviews/{review}/approve',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupAttempts = StripeResource.extend({\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_attempts',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/setup_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/cancel',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/confirm',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ShippingRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/shipping_rates' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sources = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/sources' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/sources/{source}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/sources/{source}' }),\n    listSourceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sources/{source}/source_transactions',\n        methodType: 'list',\n    }),\n    verify: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/sources/{source}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscription_items' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    createUsageRecord: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_records',\n    }),\n    listUsageRecordSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_record_summaries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionSchedules = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/cancel',\n    }),\n    release: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/release',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Subscriptions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscriptions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}/discount',\n    }),\n    resume: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/resume',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxCodes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_codes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tokens' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tokens/{token}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Topups = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/topups' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/topups/{topup}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/topups',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}/cancel' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transfers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/transfers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/transfers/{transfer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/transfers/{transfer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers',\n        methodType: 'list',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{id}/reversals',\n    }),\n    listReversals: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{id}/reversals',\n        methodType: 'list',\n    }),\n    retrieveReversal: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n    updateReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const WebhookEndpoints = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/webhook_endpoints' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n});\n", "import { StripeAPIError, StripeAuthenticationError, StripeConnectionError, StripeError, StripePermissionError, StripeRateLimitError, } from './Error.js';\nimport { emitWarning, normalizeHeaders, removeNullish, stringifyRequestData, } from './utils.js';\nimport { HttpClient } from './net/HttpClient.js';\nconst MAX_RETRY_AFTER_WAIT = 60;\nexport class RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return removeNullish({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new StripeRateLimitError(jsonResponse.error);\n                    }\n                    else {\n                        err = StripeError.generate(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(numRetries - 1, 2), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        if (method === 'POST' && maxRetries > 0) {\n            return `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        }\n        return null;\n    }\n    _makeHeaders(auth, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings) {\n        const defaultHeaders = {\n            // Use specified auth token or use default from this stripe instance:\n            Authorization: auth ? `Bearer ${auth}` : this._stripe.getApiField('auth'),\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'User-Agent': this._getUserAgentString(),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': this._stripe.getApiField('stripeAccount'),\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                emitWarning(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign(removeNullish(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        normalizeHeaders(userSuppliedHeaders));\n    }\n    _getUserAgentString() {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/v1 NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                emitWarning('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                this._stripe._prevRequestMetrics.push({\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                });\n            }\n        }\n    }\n    _request(method, host, path, data, auth, options = {}, callback, requestDataProcessor = null) {\n        let requestData;\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const req = this._stripe\n                .getApiField('httpClient')\n                .makeRequest(host || this._stripe.getApiField('host'), this._stripe.getApiField('port'), path, method, headers, requestData, this._stripe.getApiField('protocol'), timeout);\n            const requestStartTime = Date.now();\n            // @ts-ignore\n            const requestEvent = removeNullish({\n                api_version: apiVersion,\n                account: headers['Stripe-Account'],\n                idempotency_key: headers['Idempotency-Key'],\n                method,\n                path,\n                request_start_time: requestStartTime,\n            });\n            const requestRetries = numRetries || 0;\n            const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n            this._stripe._emitter.emit('request', requestEvent);\n            req\n                .then((res) => {\n                if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, \n                    // @ts-ignore\n                    res.getHeaders()['retry-after']);\n                }\n                else if (options.streaming && res.getStatusCode() < 400) {\n                    return this._streamingResponseHandler(requestEvent, callback)(res);\n                }\n                else {\n                    return this._jsonResponseHandler(requestEvent, callback)(res);\n                }\n            })\n                .catch((error) => {\n                if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                }\n                else {\n                    const isTimeoutError = error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n                    return callback(new StripeConnectionError({\n                        message: isTimeoutError\n                            ? `Request aborted due to timeout being reached (${timeout}ms)`\n                            : RequestSender._generateConnectionErrorMessage(requestRetries),\n                        // @ts-ignore\n                        detail: error,\n                    }));\n                }\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                var _a, _b;\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders(auth, requestData.length, apiVersion, clientUserAgent, method, (_a = options.headers) !== null && _a !== void 0 ? _a : null, (_b = options.settings) !== null && _b !== void 0 ? _b : {});\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            prepareAndMakeRequest(null, stringifyRequestData(data || {}));\n        }\n    }\n}\n", "import { StripeError, StripeSignatureVerificationError } from './Error.js';\nimport { CryptoProviderOnlySupportsAsyncError, } from './crypto/CryptoProvider.js';\nexport function createWebhooks(platformFunctions) {\n    const Webhook = {\n        DEFAULT_TOLERANCE: 300,\n        // @ts-ignore\n        signature: null,\n        constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            try {\n                this.signature.verifyHeader(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            }\n            catch (e) {\n                if (e instanceof CryptoProviderOnlySupportsAsyncError) {\n                    e.message +=\n                        '\\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`';\n                }\n                throw e;\n            }\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        async constructEventAsync(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            await this.signature.verifyHeaderAsync(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        /**\n         * Generates a header to be used for webhook mocking\n         *\n         * @typedef {object} opts\n         * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n         * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n         * @property {string} secret - Stripe webhook secret 'whsec_...'\n         * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n         * @property {string} signature - Computed webhook signature\n         * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n         */\n        generateTestHeaderString: function (opts) {\n            if (!opts) {\n                throw new StripeError({\n                    message: 'Options are required',\n                });\n            }\n            opts.timestamp =\n                Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n            opts.scheme = opts.scheme || signature.EXPECTED_SCHEME;\n            opts.cryptoProvider = opts.cryptoProvider || getCryptoProvider();\n            opts.signature =\n                opts.signature ||\n                    opts.cryptoProvider.computeHMACSignature(opts.timestamp + '.' + opts.payload, opts.secret);\n            const generatedHeader = [\n                't=' + opts.timestamp,\n                opts.scheme + '=' + opts.signature,\n            ].join(',');\n            return generatedHeader;\n        },\n    };\n    const signature = {\n        EXPECTED_SCHEME: 'v1',\n        verifyHeader(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = cryptoProvider.computeHMACSignature(makeHMACContent(payload, details), secret);\n            validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n            return true;\n        },\n        async verifyHeaderAsync(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(makeHMACContent(payload, details), secret);\n            return validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n        },\n    };\n    function makeHMACContent(payload, details) {\n        return `${details.timestamp}.${payload}`;\n    }\n    function parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n        if (!encodedPayload) {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No webhook payload was provided.',\n            });\n        }\n        const suspectPayloadType = typeof encodedPayload != 'string' &&\n            !(encodedPayload instanceof Uint8Array);\n        const textDecoder = new TextDecoder('utf8');\n        const decodedPayload = encodedPayload instanceof Uint8Array\n            ? textDecoder.decode(encodedPayload)\n            : encodedPayload;\n        // Express's type for `Request#headers` is `string | []string`\n        // which is because the `set-cookie` header is an array,\n        // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n        // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n        if (Array.isArray(encodedHeader)) {\n            throw new Error('Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.');\n        }\n        if (encodedHeader == null || encodedHeader == '') {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No stripe-signature header value was provided.',\n            });\n        }\n        const decodedHeader = encodedHeader instanceof Uint8Array\n            ? textDecoder.decode(encodedHeader)\n            : encodedHeader;\n        const details = parseHeader(decodedHeader, expectedScheme);\n        if (!details || details.timestamp === -1) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'Unable to extract timestamp and signatures from header',\n            });\n        }\n        if (!details.signatures.length) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'No signatures found with expected scheme',\n            });\n        }\n        return {\n            decodedPayload,\n            decodedHeader,\n            details,\n            suspectPayloadType,\n        };\n    }\n    function validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt) {\n        const signatureFound = !!details.signatures.filter(platformFunctions.secureCompare.bind(platformFunctions, expectedSignature)).length;\n        const docsLocation = '\\nLearn more about webhook signing and explore webhook integration examples for various frameworks at ' +\n            'https://github.com/stripe/stripe-node#webhook-signing';\n        const whitespaceMessage = secretContainsWhitespace\n            ? '\\n\\nNote: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value'\n            : '';\n        if (!signatureFound) {\n            if (suspectPayloadType) {\n                throw new StripeSignatureVerificationError(header, payload, {\n                    message: 'Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.' +\n                        'Payload was provided as a parsed JavaScript object instead. \\n' +\n                        'Signature verification is impossible without access to the original signed material. \\n' +\n                        docsLocation +\n                        '\\n' +\n                        whitespaceMessage,\n                });\n            }\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'No signatures found matching the expected signature for payload.' +\n                    ' Are you passing the raw request body you received from Stripe? \\n' +\n                    docsLocation +\n                    '\\n' +\n                    whitespaceMessage,\n            });\n        }\n        const timestampAge = Math.floor((typeof receivedAt === 'number' ? receivedAt : Date.now()) / 1000) - details.timestamp;\n        if (tolerance > 0 && timestampAge > tolerance) {\n            // @ts-ignore\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'Timestamp outside the tolerance zone',\n            });\n        }\n        return true;\n    }\n    function parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme) {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    let webhooksCryptoProviderInstance = null;\n    /**\n     * Lazily instantiate a CryptoProvider instance. This is a stateless object\n     * so a singleton can be used here.\n     */\n    function getCryptoProvider() {\n        if (!webhooksCryptoProviderInstance) {\n            webhooksCryptoProviderInstance = platformFunctions.createDefaultCryptoProvider();\n        }\n        return webhooksCryptoProviderInstance;\n    }\n    Webhook.signature = signature;\n    return Webhook;\n}\n", "import * as _Error from './Error.js';\nimport * as apiVersion from './apiVersion.js';\nimport * as resources from './resources.js';\nimport { HttpClient, HttpClientResponse } from './net/HttpClient.js';\nimport { determineProcessUserAgentProperties, pascalToCamelCase, validateInteger, } from './utils.js';\nimport { CryptoProvider } from './crypto/CryptoProvider.js';\nimport { RequestSender } from './RequestSender.js';\nimport { StripeResource } from './StripeResource.js';\nimport { createWebhooks } from './Webhooks.js';\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = apiVersion.ApiVersion;\nconst DEFAULT_TIMEOUT = 80000;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n    'apiVersion',\n    'typescript',\n    'maxNetworkRetries',\n    'httpAgent',\n    'httpClient',\n    'timeout',\n    'host',\n    'port',\n    'protocol',\n    'telemetry',\n    'appInfo',\n    'stripeAccount',\n];\nconst defaultRequestSenderFactory = (stripe) => new RequestSender(stripe, StripeResource.MAX_BUFFERED_REQUEST_METRICS);\nexport function createStripe(platformFunctions, requestSender = defaultRequestSenderFactory) {\n    Stripe.PACKAGE_VERSION = '12.13.0';\n    Stripe.USER_AGENT = Object.assign({ bindings_version: Stripe.PACKAGE_VERSION, lang: 'node', publisher: 'stripe', uname: null, typescript: false }, determineProcessUserAgentProperties());\n    Stripe.StripeResource = StripeResource;\n    Stripe.resources = resources;\n    Stripe.HttpClient = HttpClient;\n    Stripe.HttpClientResponse = HttpClientResponse;\n    Stripe.CryptoProvider = CryptoProvider;\n    function Stripe(key, config = {}) {\n        if (!(this instanceof Stripe)) {\n            return new Stripe(key, config);\n        }\n        const props = this._getPropsFromConfig(config);\n        this._platformFunctions = platformFunctions;\n        Object.defineProperty(this, '_emitter', {\n            value: this._platformFunctions.createEmitter(),\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n        this.VERSION = Stripe.PACKAGE_VERSION;\n        this.on = this._emitter.on.bind(this._emitter);\n        this.once = this._emitter.once.bind(this._emitter);\n        this.off = this._emitter.removeListener.bind(this._emitter);\n        if (props.protocol &&\n            props.protocol !== 'https' &&\n            (!props.host || /\\.stripe\\.com$/.test(props.host))) {\n            throw new Error('The `https` protocol must be used when sending requests to `*.stripe.com`');\n        }\n        const agent = props.httpAgent || null;\n        this._api = {\n            auth: null,\n            host: props.host || DEFAULT_HOST,\n            port: props.port || DEFAULT_PORT,\n            protocol: props.protocol || 'https',\n            basePath: DEFAULT_BASE_PATH,\n            version: props.apiVersion || DEFAULT_API_VERSION,\n            timeout: validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n            maxNetworkRetries: validateInteger('maxNetworkRetries', props.maxNetworkRetries, 0),\n            agent: agent,\n            httpClient: props.httpClient ||\n                (agent\n                    ? this._platformFunctions.createNodeHttpClient(agent)\n                    : this._platformFunctions.createDefaultHttpClient()),\n            dev: false,\n            stripeAccount: props.stripeAccount || null,\n        };\n        const typescript = props.typescript || false;\n        if (typescript !== Stripe.USER_AGENT.typescript) {\n            // The mutation here is uncomfortable, but likely fastest;\n            // serializing the user agent involves shelling out to the system,\n            // and given some users may instantiate the library many times without switching between TS and non-TS,\n            // we only want to incur the performance hit when that actually happens.\n            Stripe.USER_AGENT.typescript = typescript;\n        }\n        if (props.appInfo) {\n            this._setAppInfo(props.appInfo);\n        }\n        this._prepResources();\n        this._setApiKey(key);\n        this.errors = _Error;\n        this.webhooks = createWebhooks(platformFunctions);\n        this._prevRequestMetrics = [];\n        this._enableTelemetry = props.telemetry !== false;\n        this._requestSender = requestSender(this);\n        // Expose StripeResource on the instance too\n        // @ts-ignore\n        this.StripeResource = Stripe.StripeResource;\n    }\n    Stripe.errors = _Error;\n    Stripe.webhooks = createWebhooks;\n    Stripe.createNodeHttpClient = platformFunctions.createNodeHttpClient;\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    Stripe.createFetchHttpClient = platformFunctions.createFetchHttpClient;\n    /**\n     * Create a CryptoProvider which uses the built-in Node crypto libraries for\n     * its crypto operations.\n     */\n    Stripe.createNodeCryptoProvider = platformFunctions.createNodeCryptoProvider;\n    /**\n     * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n     * Crypto API spec for its crypto operations.\n     *\n     * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n     * is passed, will default to the default `crypto.subtle` object in the global\n     * scope.\n     */\n    Stripe.createSubtleCryptoProvider =\n        platformFunctions.createSubtleCryptoProvider;\n    Stripe.prototype = {\n        // Properties are set in the constructor above\n        _appInfo: undefined,\n        on: null,\n        off: null,\n        once: null,\n        VERSION: null,\n        StripeResource: null,\n        webhooks: null,\n        errors: null,\n        _api: null,\n        _prevRequestMetrics: null,\n        _emitter: null,\n        _enableTelemetry: null,\n        _requestSender: null,\n        _platformFunctions: null,\n        /**\n         * @private\n         */\n        _setApiKey(key) {\n            if (key) {\n                this._setApiField('auth', `Bearer ${key}`);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setAppInfo(info) {\n            if (info && typeof info !== 'object') {\n                throw new Error('AppInfo must be an object.');\n            }\n            if (info && !info.name) {\n                throw new Error('AppInfo.name is required');\n            }\n            info = info || {};\n            this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n                if (typeof info[prop] == 'string') {\n                    accum = accum || {};\n                    accum[prop] = info[prop];\n                }\n                return accum;\n            }, \n            // @ts-ignore\n            undefined);\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiField(key, value) {\n            this._api[key] = value;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getApiField(key) {\n            return this._api[key];\n        },\n        setClientId(clientId) {\n            this._clientId = clientId;\n        },\n        getClientId() {\n            return this._clientId;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getConstant: (c) => {\n            switch (c) {\n                case 'DEFAULT_HOST':\n                    return DEFAULT_HOST;\n                case 'DEFAULT_PORT':\n                    return DEFAULT_PORT;\n                case 'DEFAULT_BASE_PATH':\n                    return DEFAULT_BASE_PATH;\n                case 'DEFAULT_API_VERSION':\n                    return DEFAULT_API_VERSION;\n                case 'DEFAULT_TIMEOUT':\n                    return DEFAULT_TIMEOUT;\n                case 'MAX_NETWORK_RETRY_DELAY_SEC':\n                    return MAX_NETWORK_RETRY_DELAY_SEC;\n                case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n                    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n            }\n            return Stripe[c];\n        },\n        getMaxNetworkRetries() {\n            return this.getApiField('maxNetworkRetries');\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiNumberField(prop, n, defaultVal) {\n            const val = validateInteger(prop, n, defaultVal);\n            this._setApiField(prop, val);\n        },\n        getMaxNetworkRetryDelay() {\n            return MAX_NETWORK_RETRY_DELAY_SEC;\n        },\n        getInitialNetworkRetryDelay() {\n            return INITIAL_NETWORK_RETRY_DELAY_SEC;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent and uses a cached version for a slight\n         * speed advantage.\n         */\n        getClientUserAgent(cb) {\n            return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent by encoding a seeded object and\n         * fetching a uname from the system.\n         */\n        getClientUserAgentSeeded(seed, cb) {\n            this._platformFunctions.getUname().then((uname) => {\n                var _a;\n                const userAgent = {};\n                for (const field in seed) {\n                    userAgent[field] = encodeURIComponent((_a = seed[field]) !== null && _a !== void 0 ? _a : 'null');\n                }\n                // URI-encode in case there are unusual characters in the system's uname.\n                userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n                const client = this.getApiField('httpClient');\n                if (client) {\n                    userAgent.httplib = encodeURIComponent(client.getClientName());\n                }\n                if (this._appInfo) {\n                    userAgent.application = this._appInfo;\n                }\n                cb(JSON.stringify(userAgent));\n            });\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getAppInfoAsString() {\n            if (!this._appInfo) {\n                return '';\n            }\n            let formatted = this._appInfo.name;\n            if (this._appInfo.version) {\n                formatted += `/${this._appInfo.version}`;\n            }\n            if (this._appInfo.url) {\n                formatted += ` (${this._appInfo.url})`;\n            }\n            return formatted;\n        },\n        getTelemetryEnabled() {\n            return this._enableTelemetry;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _prepResources() {\n            for (const name in resources) {\n                // @ts-ignore\n                this[pascalToCamelCase(name)] = new resources[name](this);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _getPropsFromConfig(config) {\n            // If config is null or undefined, just bail early with no props\n            if (!config) {\n                return {};\n            }\n            // config can be an object or a string\n            const isString = typeof config === 'string';\n            const isObject = config === Object(config) && !Array.isArray(config);\n            if (!isObject && !isString) {\n                throw new Error('Config must either be an object or a string');\n            }\n            // If config is a string, we assume the old behavior of passing in a string representation of the api version\n            if (isString) {\n                return {\n                    apiVersion: config,\n                };\n            }\n            // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n            const values = Object.keys(config).filter((value) => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n            if (values.length > 0) {\n                throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n            }\n            return config;\n        },\n    };\n    return Stripe;\n}\n", "import { NodePlatformFunctions } from './platform/NodePlatformFunctions.js';\nimport { createStripe } from './stripe.core.js';\nexport const Stripe = createStripe(new NodePlatformFunctions());\nexport default Stripe;\n", "import ejs from \"ejs\";\nimport emailTemplate from \"../constants/email\";\nimport showdown from \"showdown\";\nimport nodemailer from \"nodemailer\";\nconst markdownConverter = new showdown.Converter();\n\nconst transporter = nodemailer.createTransport({\n  service: process.env.EMAIL_PROVIDER,\n  auth: {\n    user: process.env.EMAIL_ADDRESS,\n    pass: process.env.EMAIL_PASSWORD,\n  },\n});\n\nconst transport = (options) => {\n  return new Promise((resolve, reject) => {\n    transporter.sendMail(options, function (error, info) {\n      if (error) {\n        return reject(error);\n      }\n\n      return resolve(info.response);\n    });\n  });\n};\n\nexport default async ({ emailAddress, licenseData, paymentId }) => {\n  let { simpleTitle, permissionDescription, licenseLink } = licenseData;\n\n  let emailContent = await ejs.render(\n    emailTemplate,\n    {\n      simpleTitle,\n      permissionDescription,\n      licenseLink,\n    },\n    {},\n  );\n\n  emailContent = markdownConverter.makeHtml(emailContent);\n\n  const clientEmailPromise = transport({\n    to: emailAddress,\n    from: process.env.EMAIL_ADDRESS,\n    subject: \"TypeIt - License & Instructions\",\n    html: emailContent,\n  });\n\n  const personalEmailPromise = transport({\n    to: process.env.EMAIL_ADDRESS,\n    from: process.env.EMAIL_ADDRESS,\n    subject: `${simpleTitle} Purchased!`,\n    html: `\n      Email Address: ${emailAddress}\n      <br>\n      Stripe Link: https://dashboard.stripe.com/payments/${paymentId}\n    `,\n  });\n\n  await Promise.all([clientEmailPromise, personalEmailPromise]);\n};\n", "export default `\n# Thanks for purchasing a TypeIt <%= simpleTitle %>!\n\n<%= permissionDescription %>\n\n<h2 style=\"border-bottom: 2px solid black;\">Getting Started</h2>\n\nThe following packages are available for usage with your license. Depending on your needs, refer to the following source code links and documentation to get started.\n\n### Vanilla JavaScript\n\n**Source Code**\n\n* ZIP: https://typeitjs.com/download/javascript\n* CDN: https://www.jsdelivr.com/package/npm/typeit\n* npm: https://www.npmjs.com/package/typeit\n\n**Documentation:** https://typeitjs.com/docs/vanilla\n\n### WordPress Plugin\n\n**Source Code**\n\n* ZIP: https://typeitjs.com/download/wordpress\n* GitHub: https://github.com/alexmacarthur/wp-typeit\n\n**Documentation:** https://typeitjs.com/docs/wordpress\n\n### React Component\n\n**Source Code**\n\n* ZIP: https://typeitjs.com/download/react\n* GitHub: https://github.com/alexmacarthur/typeit-react\n\n**Documentation:** https://typeitjs.com/docs/react\n\n<h2 style=\"border-bottom: 2px solid black;\">License Information</h2>\n\nTo view a copy of your license, see here:\n<%= licenseLink %>\n`;\n", "const isProduction = (): boolean => process.env.NODE_ENV === \"production\";\n\nexport default isProduction;\n", "import isProduction from \"../util/isProduction\";\n\nconst headers = {\n  \"Access-Control-Allow-Origin\": isProduction() ? \"https://typeitjs.com\" : \"*\",\n  \"Access-Control-Allow-Headers\": \"Content-Type\",\n};\n\nexport default headers;\n"],
  "mappings": "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;UACA,gBAAgB;YACd,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,mBAAmB;YACjB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,sBAAsB;YACpB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,aAAa;YACX,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,kBAAkB;YAChB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oBAAoB;YAClB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oBAAoB;YAClB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,oCAAoC;YAClC,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,2BAA2B;YACzB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,yBAAyB;YACvB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,eAAe;YACb,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,QAAQ;YACN,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,gBAAgB;YACd,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,cAAc;YACZ,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,WAAW;YACT,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,mBAAmB;YACjB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,qBAAqB;YACnB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,sCAAsC;YACpC,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,kBAAkB;YAChB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,+BAA+B;YAC7B,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,YAAY;YACV,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,gBAAgB;YACd,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,cAAc;YACZ,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,sBAAsB;YACpB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,0BAA0B;YACxB,cAAc;YACd,UAAU;YACV,MAAM;UACR;UACA,OAAO;YACL,cAAc;YAC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",
  "names": []
}
