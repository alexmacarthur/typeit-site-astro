---
import { Prism } from '@astrojs/prism';
import Example from './Example.astro';
---

<Example
    heading="Async-ready."
    description="The included `.exec()` method allows you to asynchronously fire code at any point during the animation."
    exampleId="asyncExec"
>
    <Prism lang="html" code={`<p id="asyncExec"></p>`} />

    <Prism lang="js" code={`new TypeIt("#asyncExec", {
  waitUntilVisible: true,
})
  .type("Hold up!")
  .exec(async () => {
    //-- Return a promise that resolves after something happens.
    await new Promise((resolve, reject) => {
      setTimeout(() => {
        return resolve();
      }, 2000);
    });
  })
  .type(" OK, now go.")
  .go();`} />

</Example>

<script>
    import TypeIt from 'typeit';

    // @ts-ignore
    const instance = new TypeIt("#asyncExec", {
  waitUntilVisible: true,
})
  .type("Hold up!")
  .exec(async () => {
    //-- Return a promise that resolves after something happens.
    await new Promise((resolve, reject) => {
      setTimeout(() => {
        return resolve();
      }, 2000);
    });
  })
  .type(" OK, now go.")
  .go();

    window.tiInstances.set('asyncExec', instance);
</script>
