---
const { heading, description, exampleId, element = "span", resumable = false } = Astro.props;

const TargetElement = element;
---

<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-12">   
    <div>
        <h3 class="text-3xl mb-0">{ heading }</h3>
        <p class="mt-0">{ description }</p>

        <div class="text-xl bg-slate-100 border-2 border-slate-200 border-solid p-6 rounded-md mb-6">
            <TargetElement id={exampleId} />
        </div>

        <button class="button" data-reset-button={exampleId}>Reset</button>

        { resumable && 
        <button class="button" data-pause-button={exampleId}>Pause</button>
    }
    </div>

    <div class="pt-10">
        <slot />
    </div>
</div>

<script>
    document.querySelectorAll('[data-reset-button]').forEach((button) => {
        button.addEventListener('click', (e) => {
            const instance = window.tiInstances.get((button as HTMLButtonElement).dataset.resetButton);
    
            if(!instance) {
                return;
            }
    
            instance.reset().go();
        });
    });

    document.querySelectorAll('[data-pause-button]').forEach((button) => {
        button.addEventListener('click', (e) => {
            const instance = window.tiInstances.get((button as HTMLButtonElement).dataset.pauseButton);

            if (instance.is("frozen")) {
                button.innerHTML = "Pause";
                instance.unfreeze();
                return;
            }

            button.innerHTML = "Resume";
            instance.freeze();
        });
    });
</script>
